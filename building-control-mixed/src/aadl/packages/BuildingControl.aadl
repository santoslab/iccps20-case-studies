package BuildingControl
public
	with Base_Types, Data_Model, HAMR;

	system BuildingControlDemo
		features
			setPoint: in event data port SetPoint.i;
	end BuildingControlDemo;

	system implementation BuildingControlDemo.i
		subcomponents
			proc: processor TempControlProcessor.i;
			tcp: process TempControlProcess.i;
		connections
			sp: port setPoint -> tcp.setPoint;
		properties
			Actual_Processor_Binding => (reference (proc)) applies to tcp;
			
			HAMR::Platform => (JVM, Linux, macOS, Cygwin, seL4);
		annex resolute {**
			check CASE_Tools
		**};

	end BuildingControlDemo.i;

	processor TempControlProcessor
	end TempControlProcessor;

	processor implementation TempControlProcessor.i
	end TempControlProcessor.i;

	process TempControlProcess
		features
			setPoint: in event data port SetPoint.i;
	end TempControlProcess;

	process implementation TempControlProcess.i
		subcomponents
			tempSensor: thread TempSensor.i;
			tempControl: thread TempControl.i;
			fan: thread Fan.i;
		connections
			sp: port setPoint -> tempControl.setPoint;
			ct: port tempSensor.currentTemp -> tempControl.currentTemp;
			tc: port tempSensor.tempChanged -> tempControl.tempChanged;
			fc: port tempControl.fanCmd -> fan.fanCmd;
			fa: port fan.fanAck -> tempControl.fanAck;
	end TempControlProcess.i;

	thread TempSensor
		features
			currentTemp: out data port Temperature.i;
			tempChanged: out event port;
		properties
			Dispatch_Protocol => Periodic;
			Period => 1 sec;
			Stack_Size => building_control_properties::StackSize;
	end TempSensor;

	thread implementation TempSensor.i
	end TempSensor.i;

	thread Fan
		features
			fanCmd: in event data port FanCmd;
			fanAck: out event data port FanAck;
		properties
			Dispatch_Protocol => Sporadic;
			Period => 1 sec;
			Stack_Size => building_control_properties::StackSize;			
	end Fan;

	thread implementation Fan.i
	end Fan.i;

	thread TempControl
		features
			currentTemp: in data port Temperature.i;
			tempChanged: in event port;
			fanAck: in event data port FanAck;
			setPoint: in event data port SetPoint.i;
			fanCmd: out event data port FanCmd;
		properties
			Dispatch_Protocol => Sporadic;
			Period => 1 sec;
			Stack_Size => building_control_properties::StackSize;			
	end TempControl;

	thread implementation TempControl.i
	end TempControl.i;

	data Temperature
	end Temperature;

	data implementation Temperature.i
		subcomponents
			degrees: data Base_Types::Float_32;
			unit: data TempUnit;
	end Temperature.i;

	data SetPoint
	end SetPoint;

	data implementation SetPoint.i
		subcomponents
			low: data Temperature.i;
			high: data Temperature.i;
	end SetPoint.i;

	data TempUnit
		properties
			Data_Model::Data_Representation => Enum;
			Data_Model::Enumerators => ("Fahrenheit", "Celsius", "Kelvin");
	end TempUnit;

	data FanAck
		properties
			Data_Model::Data_Representation => Enum;
			Data_Model::Enumerators => ("Ok", "Error");
	end FanAck;

	data FanCmd
		properties
			Data_Model::Data_Representation => Enum;
			Data_Model::Enumerators => ("On", "Off");
	end FanCmd;

end BuildingControl;