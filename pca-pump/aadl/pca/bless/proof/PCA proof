Theorem (1)                               [serial 1003] 
P [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
S [241] ->
Q [241] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (2)                               [serial 1004] 
P [250] <<currentWarning = Over_Max_Drug_Per_Hour>>
S [241] ->
Q [241] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (3)                               [serial 1005] 
P [253] <<currentWarning = Low_Reservoir>>
S [241] ->
Q [241] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (4)                               [serial 1006] 
P [255] <<currentAlarm = Pump_Overheated>>
S [241] ->
Q [241] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (5)                               [serial 1007] 
P [256] <<(currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)>>
S [241] ->
Q [241] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (6)                               [serial 1008] 
P [251] <<currentWarning = Hard_Limit_Violated>>
S [241] ->
Q [241] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (7)                               [serial 1009] 
P [252] <<currentAlarm = Empty_Reservoir>>
S [241] ->
Q [241] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (8)                               [serial 1010] 
P [254] <<currentWarning = Priming_Failure>>
S [241] ->
Q [241] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (9)                               [serial 1011] 
P [247] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING>>
S [247] ->
Q [247] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (10)                               [serial 1258] 
P [247] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING>>
S [260] ->
Q [86] <<NO_ALARM>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (11)                               [serial 1262] 
P [260] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING and (Alarm = No_Alarm)@now>>
S [260] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (12)                               [serial 1259] 
P [260] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING) and (Alarm = No_Alarm)@now>>
S [260] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Associativity: (b.c).a = a.b.c
and theorem 11:
Theorem (11) [serial 1262] used for:
  Associativity: (b.c).a = a.b.c [serial 1259]
 


Theorem (13)                               [serial 1256] 
P [247] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING>>
S [260] Alarm!(No_Alarm)
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Enumeration Type Port Output 
and theorems 10 12:
Theorem (10) [serial 1258] used for:
  applied port output of enumeration type  Alarm!(No_Alarm) [serial 1256]
 
Theorem (12) [serial 1259] used for:
  applied port output <<pre and (Alarm=No_Alarm)@now>> -> <<post>> [serial 1256]
 


Theorem (14)                               [serial 1260] 
P [247] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING>>
S [260] ->
Q [106] <<NO_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (15)                               [serial 1263] 
P [260] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING and (Warning = No_Warning)@now>>
S [260] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (16)                               [serial 1261] 
P [260] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING) and (Warning = No_Warning)@now>>
S [260] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Associativity: (b.c).a = a.b.c
and theorem 15:
Theorem (15) [serial 1263] used for:
  Associativity: (b.c).a = a.b.c [serial 1261]
 


Theorem (17)                               [serial 1257] 
P [247] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING>>
S [260] Warning!(No_Warning)
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Enumeration Type Port Output 
and theorems 14 16:
Theorem (14) [serial 1260] used for:
  applied port output of enumeration type  Warning!(No_Warning) [serial 1257]
 
Theorem (16) [serial 1261] used for:
  applied port output <<pre and (Warning=No_Warning)@now>> -> <<post>> [serial 1257]
 


Theorem (18)                               [serial 1012] 
P [247] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and NO_ALARM and 
NO_WARNING>>
S [260] Alarm!(No_Alarm)
&
Warning!(No_Warning)
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 13 17:
Theorem (13) [serial 1256] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1012]
 
Theorem (17) [serial 1257] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1012]
 


Theorem (19)                               [serial 1264] 
P [263] <<(currentWarning = Over_Max_Drug_Per_Hour) and true and true and true and 
true>>
S [264] ->
Q [250] <<currentWarning = Over_Max_Drug_Per_Hour>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (20)                               [serial 1278] 
P [262] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [263] ->
Q [264] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (21)                               [serial 1273] 
P [262] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [263] ->
Q [264] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 20:
Theorem (20) [serial 1278] used for:
  Associativity: (b.c).a = a.b.c [serial 1273]
 


Theorem (22)                               [serial 1268] 
P [262] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [263] ->
Q [264] <<Over_Max_Drug_Per_Hour = Over_Max_Drug_Per_Hour>>
by Equality Law (idistr):  a=a <-> true
and theorem 21:
Theorem (21) [serial 1273] used for:
  Equality Law (idistr):  a=a <-> true [serial 1268]
 


Theorem (23)                               [serial 1265] 
P [262] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [263] currentWarning := Over_Max_Drug_Per_Hour
Q [264] <<currentWarning = Over_Max_Drug_Per_Hour>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 22:
Theorem (22) [serial 1268] used for:
  applied wp for assignment [serial 1265]
 


Theorem (24)                               [serial 1288] 
P [262] <<No_Alarm = currentAlarm and No_Warning = currentWarning and MAX_DOSE_WARNING and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [265] ->
Q [90] <<MAX_DOSE_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (25)                               [serial 1283] 
P [262] <<MAX_DOSE_WARNING@now and No_Alarm = currentAlarm and No_Warning = currentWarning and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [265] ->
Q [90] <<MAX_DOSE_WARNING>>
by Assume Present:  P = P@now = P^0 
and theorem 24:
Theorem (24) [serial 1288] used for:
  Assume Present:  P = P@now = P^0  [serial 1283]
 


Theorem (26)                               [serial 1274] 
P [262] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [265] ->
Q [90] <<MAX_DOSE_WARNING>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 25:
Theorem (25) [serial 1283] used for:
    normalization of [serial 1274]
 


Theorem (27)                               [serial 1269] 
P [262] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [265] ->
Q [90] <<MAX_DOSE_WARNING>>
by Associativity: (b.c).a = a.b.c
and theorem 26:
Theorem (26) [serial 1274] used for:
  Associativity: (b.c).a = a.b.c [serial 1269]
 


Theorem (28)                               [serial 1279] 
P [265] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (Warning = Over_Max_Drug_Per_Hour)@now>>
S [265] ->
Q [266] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (29)                               [serial 1275] 
P [265] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (Warning = Over_Max_Drug_Per_Hour)@now>>
S [265] ->
Q [266] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 28:
Theorem (28) [serial 1279] used for:
  Associativity: (b.c).a = a.b.c [serial 1275]
 


Theorem (30)                               [serial 1270] 
P [265] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Warning = Over_Max_Drug_Per_Hour)@now>>
S [265] ->
Q [266] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 29:
Theorem (29) [serial 1275] used for:
  Associativity: (b.c).a = a.b.c [serial 1270]
 


Theorem (31)                               [serial 1266] 
P [262] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [265] Warning!(Over_Max_Drug_Per_Hour)
Q [266] <<true>>
by Enumeration Type Port Output 
and theorems 27 30:
Theorem (27) [serial 1269] used for:
  applied port output of enumeration type  Warning!(Over_Max_Drug_Per_Hour) [serial 1266]
 
Theorem (30) [serial 1270] used for:
  applied port output <<pre and (Warning=Over_Max_Drug_Per_Hour)@now>> -> <<post>> [serial 1266]
 


Theorem (32)                               [serial 1289] 
P [262] <<No_Alarm = currentAlarm and No_Warning = currentWarning and MAX_DOSE_WARNING and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [269] ->
Q [177] <<BASAL_OVERINFUSION or BOLUS_OVERINFUSION or LOW_BATTERY or MAX_DOSE_WARNING or 
SQUARE_OVERINFUSION>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (33)                               [serial 1285] 
P [262] <<MAX_DOSE_WARNING@now and No_Alarm = currentAlarm and No_Warning = currentWarning and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [269] ->
Q [177] <<BASAL_OVERINFUSION or BOLUS_OVERINFUSION or LOW_BATTERY or MAX_DOSE_WARNING or 
SQUARE_OVERINFUSION>>
by Assume Present:  P = P@now = P^0 
and theorem 32:
Theorem (32) [serial 1289] used for:
  Assume Present:  P = P@now = P^0  [serial 1285]
 


Theorem (34)                               [serial 1281] 
P [262] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [269] ->
Q [177] <<(BASAL_OVERINFUSION or BOLUS_OVERINFUSION or SQUARE_OVERINFUSION or MAX_DOSE_WARNING or 
LOW_BATTERY)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 33:
Theorem (33) [serial 1285] used for:
    normalization of [serial 1281]
 


Theorem (35)                               [serial 1276] 
P [262] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [269] ->
Q [177] <<PUMP_KVO()>>
by Substitution of Assertion Labels
and theorem 34:
Theorem (34) [serial 1281] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1276]
 


Theorem (36)                               [serial 1271] 
P [262] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [269] ->
Q [177] <<PUMP_KVO()>>
by Associativity: (b.c).a = a.b.c
and theorem 35:
Theorem (35) [serial 1276] used for:
  Associativity: (b.c).a = a.b.c [serial 1271]
 


Theorem (37)                               [serial 1280] 
P [269] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and Pump_At_KVO_Rate@now>>
S [269] ->
Q [270] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (38)                               [serial 1277] 
P [269] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and Pump_At_KVO_Rate@now>>
S [269] ->
Q [270] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 37:
Theorem (37) [serial 1280] used for:
  Associativity: (b.c).a = a.b.c [serial 1277]
 


Theorem (39)                               [serial 1272] 
P [269] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and Pump_At_KVO_Rate@now>>
S [269] ->
Q [270] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 38:
Theorem (38) [serial 1277] used for:
  Associativity: (b.c).a = a.b.c [serial 1272]
 


Theorem (40)                               [serial 1267] 
P [262] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [269] Pump_At_KVO_Rate!
Q [270] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 36 39:
Theorem (36) [serial 1271] used for:
  applied port output <<pre>> -> <<M(Pump_At_KVO_Rate)>> [serial 1267]
 
Theorem (39) [serial 1272] used for:
  applied port output <<pre and Pump_At_KVO_Rate@now>> -> <<post>> [serial 1267]
 


Theorem (41)                               [serial 1013] 
P [262] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and MAX_DOSE_WARNING@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [263] currentWarning := Over_Max_Drug_Per_Hour
<<currentWarning = Over_Max_Drug_Per_Hour>>
&
Warning!(Over_Max_Drug_Per_Hour)
<<true>>
&
Pump_At_KVO_Rate!
<<true>>
Q [250] <<currentWarning = Over_Max_Drug_Per_Hour>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 19 23 31 40:
Theorem (19) [serial 1264] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1013]
 
Theorem (23) [serial 1265] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1013]
 
Theorem (31) [serial 1266] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1013]
 
Theorem (40) [serial 1267] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1013]
 


Theorem (42)                               [serial 1290] 
P [274] <<(currentWarning = Hard_Limit_Violated) and true and true>>
S [275] ->
Q [251] <<currentWarning = Hard_Limit_Violated>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (43)                               [serial 1300] 
P [273] <<No_Alarm = currentAlarm and No_Warning = currentWarning and HARD_LIMIT_VIOLATED and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [274] ->
Q [275] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (44)                               [serial 1298] 
P [273] <<HARD_LIMIT_VIOLATED and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [274] ->
Q [275] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 43:
Theorem (43) [serial 1300] used for:
  Associativity: (b.c).a = a.b.c [serial 1298]
 


Theorem (45)                               [serial 1296] 
P [273] <<HARD_LIMIT_VIOLATED and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [274] ->
Q [275] <<Hard_Limit_Violated = Hard_Limit_Violated>>
by Equality Law (idistr):  a=a <-> true
and theorem 44:
Theorem (44) [serial 1298] used for:
  Equality Law (idistr):  a=a <-> true [serial 1296]
 


Theorem (46)                               [serial 1293] 
P [273] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and HARD_LIMIT_VIOLATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [274] ->
Q [275] <<Hard_Limit_Violated = Hard_Limit_Violated>>
by Assume Present:  P = P@now = P^0 
and theorem 45:
Theorem (45) [serial 1296] used for:
  Assume Present:  P = P@now = P^0  [serial 1293]
 


Theorem (47)                               [serial 1291] 
P [273] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and HARD_LIMIT_VIOLATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [274] currentWarning := Hard_Limit_Violated
Q [275] <<currentWarning = Hard_Limit_Violated>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 46:
Theorem (46) [serial 1293] used for:
  applied wp for assignment [serial 1291]
 


Theorem (48)                               [serial 1299] 
P [273] <<No_Alarm = currentAlarm and No_Warning = currentWarning and HARD_LIMIT_VIOLATED and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [276] ->
Q [103] <<HARD_LIMIT_VIOLATED>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (49)                               [serial 1297] 
P [273] <<HARD_LIMIT_VIOLATED and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [276] ->
Q [103] <<HARD_LIMIT_VIOLATED>>
by Associativity: (b.c).a = a.b.c
and theorem 48:
Theorem (48) [serial 1299] used for:
  Associativity: (b.c).a = a.b.c [serial 1297]
 


Theorem (50)                               [serial 1294] 
P [273] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and HARD_LIMIT_VIOLATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [276] ->
Q [103] <<HARD_LIMIT_VIOLATED>>
by Assume Present:  P = P@now = P^0 
and theorem 49:
Theorem (49) [serial 1297] used for:
  Assume Present:  P = P@now = P^0  [serial 1294]
 


Theorem (51)                               [serial 1295] 
P [276] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and HARD_LIMIT_VIOLATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Warning = Hard_Limit_Violated)@now>>
S [276] ->
Q [277] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (52)                               [serial 1292] 
P [273] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and HARD_LIMIT_VIOLATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [276] Warning!(Hard_Limit_Violated)
Q [277] <<true>>
by Enumeration Type Port Output 
and theorems 50 51:
Theorem (50) [serial 1294] used for:
  applied port output of enumeration type  Warning!(Hard_Limit_Violated) [serial 1292]
 
Theorem (51) [serial 1295] used for:
  applied port output <<pre and (Warning=Hard_Limit_Violated)@now>> -> <<post>> [serial 1292]
 


Theorem (53)                               [serial 1014] 
P [273] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and HARD_LIMIT_VIOLATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [274] currentWarning := Hard_Limit_Violated
<<currentWarning = Hard_Limit_Violated>>
&
Warning!(Hard_Limit_Violated)
<<true>>
Q [251] <<currentWarning = Hard_Limit_Violated>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 42 47 52:
Theorem (42) [serial 1290] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1014]
 
Theorem (47) [serial 1291] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1014]
 
Theorem (52) [serial 1292] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1014]
 


Theorem (54)                               [serial 1301] 
P [282] <<(currentAlarm = Empty_Reservoir) and true and true and true and true>>
S [283] ->
Q [252] <<currentAlarm = Empty_Reservoir>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (55)                               [serial 1317] 
P [281] <<No_Alarm = currentAlarm and No_Warning = currentWarning and EMPTY_RESERVOIR and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [282] ->
Q [283] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (56)                               [serial 1314] 
P [281] <<EMPTY_RESERVOIR and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [282] ->
Q [283] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 55:
Theorem (55) [serial 1317] used for:
  Associativity: (b.c).a = a.b.c [serial 1314]
 


Theorem (57)                               [serial 1311] 
P [281] <<EMPTY_RESERVOIR and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [282] ->
Q [283] <<Empty_Reservoir = Empty_Reservoir>>
by Equality Law (idistr):  a=a <-> true
and theorem 56:
Theorem (56) [serial 1314] used for:
  Equality Law (idistr):  a=a <-> true [serial 1311]
 


Theorem (58)                               [serial 1305] 
P [281] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [282] ->
Q [283] <<Empty_Reservoir = Empty_Reservoir>>
by Assume Present:  P = P@now = P^0 
and theorem 57:
Theorem (57) [serial 1311] used for:
  Assume Present:  P = P@now = P^0  [serial 1305]
 


Theorem (59)                               [serial 1302] 
P [281] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [282] currentAlarm := Empty_Reservoir
Q [283] <<currentAlarm = Empty_Reservoir>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 58:
Theorem (58) [serial 1305] used for:
  applied wp for assignment [serial 1302]
 


Theorem (60)                               [serial 1315] 
P [281] <<No_Alarm = currentAlarm and No_Warning = currentWarning and EMPTY_RESERVOIR and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [284] ->
Q [82] <<EMPTY_RESERVOIR>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (61)                               [serial 1312] 
P [281] <<EMPTY_RESERVOIR and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [284] ->
Q [82] <<EMPTY_RESERVOIR>>
by Associativity: (b.c).a = a.b.c
and theorem 60:
Theorem (60) [serial 1315] used for:
  Associativity: (b.c).a = a.b.c [serial 1312]
 


Theorem (62)                               [serial 1306] 
P [281] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [284] ->
Q [82] <<EMPTY_RESERVOIR>>
by Assume Present:  P = P@now = P^0 
and theorem 61:
Theorem (61) [serial 1312] used for:
  Assume Present:  P = P@now = P^0  [serial 1306]
 


Theorem (63)                               [serial 1307] 
P [284] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Alarm = Empty_Reservoir)@now>>
S [284] ->
Q [285] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (64)                               [serial 1303] 
P [281] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [284] Alarm!(Empty_Reservoir)
Q [285] <<true>>
by Enumeration Type Port Output 
and theorems 62 63:
Theorem (62) [serial 1306] used for:
  applied port output of enumeration type  Alarm!(Empty_Reservoir) [serial 1303]
 
Theorem (63) [serial 1307] used for:
  applied port output <<pre and (Alarm=Empty_Reservoir)@now>> -> <<post>> [serial 1303]
 


Theorem (65)                               [serial 1316] 
P [281] <<No_Alarm = currentAlarm and No_Warning = currentWarning and EMPTY_RESERVOIR and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [287] ->
Q [175] <<AIR_IN_LINE or DEFECTIVE_BATTERY or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR or 
PUMP_OVERHEATED or THREAD_MONITOR_FAIL or UPSTREAM_OCCLUSION>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (66)                               [serial 1313] 
P [281] <<EMPTY_RESERVOIR and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [287] ->
Q [175] <<AIR_IN_LINE or DEFECTIVE_BATTERY or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR or 
PUMP_OVERHEATED or THREAD_MONITOR_FAIL or UPSTREAM_OCCLUSION>>
by Associativity: (b.c).a = a.b.c
and theorem 65:
Theorem (65) [serial 1316] used for:
  Associativity: (b.c).a = a.b.c [serial 1313]
 


Theorem (67)                               [serial 1310] 
P [281] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [287] ->
Q [175] <<(PUMP_OVERHEATED or DEFECTIVE_BATTERY or THREAD_MONITOR_FAIL or AIR_IN_LINE or 
UPSTREAM_OCCLUSION or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR)>>
by Assume Present:  P = P@now = P^0 
and theorem 66:
Theorem (66) [serial 1313] used for:
  Assume Present:  P = P@now = P^0  [serial 1310]
 


Theorem (68)                               [serial 1308] 
P [281] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [287] ->
Q [175] <<STOP_PUMP()>>
by Substitution of Assertion Labels
and theorem 67:
Theorem (67) [serial 1310] used for:
  substituted Assertions' predicates for  labels  [serial 1308]
 


Theorem (69)                               [serial 1309] 
P [287] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and Stop_Pump_Completely@now>>
S [287] ->
Q [288] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (70)                               [serial 1304] 
P [281] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [287] Stop_Pump_Completely!
Q [288] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 68 69:
Theorem (68) [serial 1308] used for:
  applied port output <<pre>> -> <<M(Stop_Pump_Completely)>> [serial 1304]
 
Theorem (69) [serial 1309] used for:
  applied port output <<pre and Stop_Pump_Completely@now>> -> <<post>> [serial 1304]
 


Theorem (71)                               [serial 1015] 
P [281] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and EMPTY_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [282] currentAlarm := Empty_Reservoir
<<currentAlarm = Empty_Reservoir>>
&
Alarm!(Empty_Reservoir)
<<true>>
&
Stop_Pump_Completely!
<<true>>
Q [252] <<currentAlarm = Empty_Reservoir>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 54 59 64 70:
Theorem (54) [serial 1301] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1015]
 
Theorem (59) [serial 1302] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1015]
 
Theorem (64) [serial 1303] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1015]
 
Theorem (70) [serial 1304] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1015]
 


Theorem (72)                               [serial 1318] 
P [292] <<(currentWarning = Low_Reservoir) and true and true>>
S [293] ->
Q [253] <<currentWarning = Low_Reservoir>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (73)                               [serial 1328] 
P [291] <<No_Alarm = currentAlarm and No_Warning = currentWarning and LOW_RESERVOIR and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [292] ->
Q [293] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (74)                               [serial 1326] 
P [291] <<LOW_RESERVOIR and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [292] ->
Q [293] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 73:
Theorem (73) [serial 1328] used for:
  Associativity: (b.c).a = a.b.c [serial 1326]
 


Theorem (75)                               [serial 1324] 
P [291] <<LOW_RESERVOIR and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [292] ->
Q [293] <<Low_Reservoir = Low_Reservoir>>
by Equality Law (idistr):  a=a <-> true
and theorem 74:
Theorem (74) [serial 1326] used for:
  Equality Law (idistr):  a=a <-> true [serial 1324]
 


Theorem (76)                               [serial 1321] 
P [291] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [292] ->
Q [293] <<Low_Reservoir = Low_Reservoir>>
by Assume Present:  P = P@now = P^0 
and theorem 75:
Theorem (75) [serial 1324] used for:
  Assume Present:  P = P@now = P^0  [serial 1321]
 


Theorem (77)                               [serial 1319] 
P [291] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [292] currentWarning := Low_Reservoir
Q [293] <<currentWarning = Low_Reservoir>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 76:
Theorem (76) [serial 1321] used for:
  applied wp for assignment [serial 1319]
 


Theorem (78)                               [serial 1327] 
P [291] <<No_Alarm = currentAlarm and No_Warning = currentWarning and LOW_RESERVOIR and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [294] ->
Q [96] <<LOW_RESERVOIR>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (79)                               [serial 1325] 
P [291] <<LOW_RESERVOIR and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [294] ->
Q [96] <<LOW_RESERVOIR>>
by Associativity: (b.c).a = a.b.c
and theorem 78:
Theorem (78) [serial 1327] used for:
  Associativity: (b.c).a = a.b.c [serial 1325]
 


Theorem (80)                               [serial 1322] 
P [291] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [294] ->
Q [96] <<LOW_RESERVOIR>>
by Assume Present:  P = P@now = P^0 
and theorem 79:
Theorem (79) [serial 1325] used for:
  Assume Present:  P = P@now = P^0  [serial 1322]
 


Theorem (81)                               [serial 1323] 
P [294] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Warning = Low_Reservoir)@now>>
S [294] ->
Q [295] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (82)                               [serial 1320] 
P [291] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [294] Warning!(Low_Reservoir)
Q [295] <<true>>
by Enumeration Type Port Output 
and theorems 80 81:
Theorem (80) [serial 1322] used for:
  applied port output of enumeration type  Warning!(Low_Reservoir) [serial 1320]
 
Theorem (81) [serial 1323] used for:
  applied port output <<pre and (Warning=Low_Reservoir)@now>> -> <<post>> [serial 1320]
 


Theorem (83)                               [serial 1016] 
P [291] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_RESERVOIR@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [292] currentWarning := Low_Reservoir
<<currentWarning = Low_Reservoir>>
&
Warning!(Low_Reservoir)
<<true>>
Q [253] <<currentWarning = Low_Reservoir>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 72 77 82:
Theorem (72) [serial 1318] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1016]
 
Theorem (77) [serial 1319] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1016]
 
Theorem (82) [serial 1320] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1016]
 


Theorem (84)                               [serial 1345] 
P [300] <<Priming_Failure = currentWarning>>
S [301] ->
Q [254] <<Priming_Failure = currentWarning>>
by Identity (id):  P->P is tautology


Theorem (85)                               [serial 1338] 
P [300] <<((currentWarning = Priming_Failure))>>
S [301] ->
Q [254] <<currentWarning = Priming_Failure>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 84:
Theorem (84) [serial 1345] used for:
    normalization of [serial 1338]
 


Theorem (86)                               [serial 1329] 
P [300] <<(currentWarning = Priming_Failure) and true and true>>
S [301] ->
Q [254] <<currentWarning = Priming_Failure>>
by Law of And-Simplification:  P and true is P
and theorem 85:
Theorem (85) [serial 1338] used for:
  Law of And-Simplification:  P and true is P [serial 1329]
 


Theorem (87)                               [serial 1342] 
P [299] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PRIME_FAIL and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [300] ->
Q [301] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (88)                               [serial 1339] 
P [299] <<PRIME_FAIL and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [300] ->
Q [301] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 87:
Theorem (87) [serial 1342] used for:
  Associativity: (b.c).a = a.b.c [serial 1339]
 


Theorem (89)                               [serial 1335] 
P [299] <<PRIME_FAIL and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [300] ->
Q [301] <<Priming_Failure = Priming_Failure>>
by Equality Law (idistr):  a=a <-> true
and theorem 88:
Theorem (88) [serial 1339] used for:
  Equality Law (idistr):  a=a <-> true [serial 1335]
 


Theorem (90)                               [serial 1332] 
P [299] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PRIME_FAIL@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [300] ->
Q [301] <<Priming_Failure = Priming_Failure>>
by Assume Present:  P = P@now = P^0 
and theorem 89:
Theorem (89) [serial 1335] used for:
  Assume Present:  P = P@now = P^0  [serial 1332]
 


Theorem (91)                               [serial 1330] 
P [299] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PRIME_FAIL@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [300] currentWarning := Priming_Failure
Q [301] <<currentWarning = Priming_Failure>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 90:
Theorem (90) [serial 1332] used for:
  applied wp for assignment [serial 1330]
 


Theorem (92)                               [serial 1340] 
P [299] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PRIME_FAIL and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [302] ->
Q [105] <<PRIME_FAIL>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (93)                               [serial 1336] 
P [299] <<PRIME_FAIL and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [302] ->
Q [105] <<PRIME_FAIL>>
by Associativity: (b.c).a = a.b.c
and theorem 92:
Theorem (92) [serial 1340] used for:
  Associativity: (b.c).a = a.b.c [serial 1336]
 


Theorem (94)                               [serial 1333] 
P [299] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PRIME_FAIL@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [302] ->
Q [105] <<PRIME_FAIL>>
by Assume Present:  P = P@now = P^0 
and theorem 93:
Theorem (93) [serial 1336] used for:
  Assume Present:  P = P@now = P^0  [serial 1333]
 


Theorem (95)                               [serial 1349] 
P [302] <<No_Alarm = currentAlarm and No_Warning = currentWarning and Priming_Failure = Warning and 
PRIME_FAIL and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [302] ->
Q [303] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (96)                               [serial 1343] 
P [302] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PRIME_FAIL and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and Priming_Failure = Warning>>
S [302] ->
Q [303] <<true>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 95:
Theorem (95) [serial 1349] used for:
    normalization of [serial 1343]
 


Theorem (97)                               [serial 1341] 
P [302] <<PRIME_FAIL and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning) and 
Priming_Failure = Warning>>
S [302] ->
Q [303] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 96:
Theorem (96) [serial 1343] used for:
  Associativity: (b.c).a = a.b.c [serial 1341]
 


Theorem (98)                               [serial 1337] 
P [302] <<Priming_Failure = Warning and (PRIME_FAIL and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning))>>
S [302] ->
Q [303] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 97:
Theorem (97) [serial 1341] used for:
  Associativity: (b.c).a = a.b.c [serial 1337]
 


Theorem (99)                               [serial 1334] 
P [302] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PRIME_FAIL@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Warning = Priming_Failure)@now>>
S [302] ->
Q [303] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 98:
Theorem (98) [serial 1337] used for:
  Assume Present:  P = P@now = P^0  [serial 1334]
 


Theorem (100)                               [serial 1331] 
P [299] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PRIME_FAIL@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [302] Warning!(Priming_Failure)
Q [303] <<true>>
by Enumeration Type Port Output 
and theorems 94 99:
Theorem (94) [serial 1333] used for:
  applied port output of enumeration type  Warning!(Priming_Failure) [serial 1331]
 
Theorem (99) [serial 1334] used for:
  applied port output <<pre and (Warning=Priming_Failure)@now>> -> <<post>> [serial 1331]
 


Theorem (101)                               [serial 1017] 
P [299] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PRIME_FAIL@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [300] currentWarning := Priming_Failure
<<currentWarning = Priming_Failure>>
&
Warning!(Priming_Failure)
<<true>>
Q [254] <<currentWarning = Priming_Failure>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 86 91 100:
Theorem (86) [serial 1329] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1017]
 
Theorem (91) [serial 1330] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1017]
 
Theorem (100) [serial 1331] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1017]
 


Theorem (102)                               [serial 1352] 
P [308] <<(currentAlarm = Pump_Overheated) and true and true and true and true>>
S [309] ->
Q [255] <<currentAlarm = Pump_Overheated>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (103)                               [serial 1377] 
P [307] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PUMP_OVERHEATED and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [308] ->
Q [309] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (104)                               [serial 1374] 
P [307] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [308] ->
Q [309] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 103:
Theorem (103) [serial 1377] used for:
  Assume Present:  P = P@now = P^0  [serial 1374]
 


Theorem (105)                               [serial 1371] 
P [307] <<PUMP_OVERHEATED@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [308] ->
Q [309] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 104:
Theorem (104) [serial 1374] used for:
  Associativity: (b.c).a = a.b.c [serial 1371]
 


Theorem (106)                               [serial 1362] 
P [307] <<PUMP_OVERHEATED@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [308] ->
Q [309] <<Pump_Overheated = Pump_Overheated>>
by Equality Law (idistr):  a=a <-> true
and theorem 105:
Theorem (105) [serial 1371] used for:
  Equality Law (idistr):  a=a <-> true [serial 1362]
 


Theorem (107)                               [serial 1356] 
P [307] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [308] ->
Q [309] <<Pump_Overheated = Pump_Overheated>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 106:
Theorem (106) [serial 1362] used for:
    normalization of [serial 1356]
 


Theorem (108)                               [serial 1353] 
P [307] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [308] currentAlarm := Pump_Overheated
Q [309] <<currentAlarm = Pump_Overheated>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 107:
Theorem (107) [serial 1356] used for:
  applied wp for assignment [serial 1353]
 


Theorem (109)                               [serial 1375] 
P [307] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PUMP_OVERHEATED and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [310] ->
Q [71] <<PUMP_OVERHEATED>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (110)                               [serial 1372] 
P [307] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [310] ->
Q [71] <<PUMP_OVERHEATED>>
by Assume Present:  P = P@now = P^0 
and theorem 109:
Theorem (109) [serial 1375] used for:
  Assume Present:  P = P@now = P^0  [serial 1372]
 


Theorem (111)                               [serial 1364] 
P [307] <<PUMP_OVERHEATED@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [310] ->
Q [71] <<PUMP_OVERHEATED>>
by Associativity: (b.c).a = a.b.c
and theorem 110:
Theorem (110) [serial 1372] used for:
  Associativity: (b.c).a = a.b.c [serial 1364]
 


Theorem (112)                               [serial 1357] 
P [307] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [310] ->
Q [71] <<PUMP_OVERHEATED>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 111:
Theorem (111) [serial 1364] used for:
    normalization of [serial 1357]
 


Theorem (113)                               [serial 1358] 
P [310] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Alarm = Pump_Overheated)@now>>
S [310] ->
Q [311] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (114)                               [serial 1354] 
P [307] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [310] Alarm!(Pump_Overheated)
Q [311] <<true>>
by Enumeration Type Port Output 
and theorems 112 113:
Theorem (112) [serial 1357] used for:
  applied port output of enumeration type  Alarm!(Pump_Overheated) [serial 1354]
 
Theorem (113) [serial 1358] used for:
  applied port output <<pre and (Alarm=Pump_Overheated)@now>> -> <<post>> [serial 1354]
 


Theorem (115)                               [serial 1376] 
P [307] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PUMP_OVERHEATED and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [313] ->
Q [175] <<AIR_IN_LINE or DEFECTIVE_BATTERY or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR or 
PUMP_OVERHEATED or THREAD_MONITOR_FAIL or UPSTREAM_OCCLUSION>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (116)                               [serial 1373] 
P [307] <<No_Alarm = currentAlarm and No_Warning = currentWarning and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [313] ->
Q [175] <<(PUMP_OVERHEATED or DEFECTIVE_BATTERY or THREAD_MONITOR_FAIL or AIR_IN_LINE or 
UPSTREAM_OCCLUSION or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR)>>
by Assume Present:  P = P@now = P^0 
and theorem 115:
Theorem (115) [serial 1376] used for:
  Assume Present:  P = P@now = P^0  [serial 1373]
 


Theorem (117)                               [serial 1370] 
P [307] <<PUMP_OVERHEATED@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [313] ->
Q [175] <<(PUMP_OVERHEATED or DEFECTIVE_BATTERY or THREAD_MONITOR_FAIL or AIR_IN_LINE or 
UPSTREAM_OCCLUSION or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR)>>
by Associativity: (b.c).a = a.b.c
and theorem 116:
Theorem (116) [serial 1373] used for:
  Associativity: (b.c).a = a.b.c [serial 1370]
 


Theorem (118)                               [serial 1366] 
P [307] <<PUMP_OVERHEATED@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [313] ->
Q [175] <<STOP_PUMP()>>
by Substitution of Assertion Labels
and theorem 117:
Theorem (117) [serial 1370] used for:
  substituted Assertions' predicates for  labels  [serial 1366]
 


Theorem (119)                               [serial 1359] 
P [307] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [313] ->
Q [175] <<STOP_PUMP()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 118:
Theorem (118) [serial 1366] used for:
    normalization of [serial 1359]
 


Theorem (120)                               [serial 1360] 
P [313] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and Stop_Pump_Completely@now>>
S [313] ->
Q [314] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (121)                               [serial 1355] 
P [307] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [313] Stop_Pump_Completely!
Q [314] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 119 120:
Theorem (119) [serial 1359] used for:
  applied port output <<pre>> -> <<M(Stop_Pump_Completely)>> [serial 1355]
 
Theorem (120) [serial 1360] used for:
  applied port output <<pre and Stop_Pump_Completely@now>> -> <<post>> [serial 1355]
 


Theorem (122)                               [serial 1018] 
P [307] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and PUMP_OVERHEATED@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [308] currentAlarm := Pump_Overheated
<<currentAlarm = Pump_Overheated>>
&
Alarm!(Pump_Overheated)
<<true>>
&
Stop_Pump_Completely!
<<true>>
Q [255] <<currentAlarm = Pump_Overheated>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 102 108 114 121:
Theorem (102) [serial 1352] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1018]
 
Theorem (108) [serial 1353] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1018]
 
Theorem (114) [serial 1354] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1018]
 
Theorem (121) [serial 1355] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1018]
 


Theorem (123)                               [serial 1378] 
P [318] <<(currentAlarm = Defective_Battery) and true and true and true and true>>
S [319] ->
Q [256] <<(currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (124)                               [serial 1403] 
P [317] <<No_Alarm = currentAlarm and No_Warning = currentWarning and DEFECTIVE_BATTERY and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [318] ->
Q [319] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (125)                               [serial 1400] 
P [317] <<No_Alarm = currentAlarm and No_Warning = currentWarning and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [318] ->
Q [319] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 124:
Theorem (124) [serial 1403] used for:
  Assume Present:  P = P@now = P^0  [serial 1400]
 


Theorem (126)                               [serial 1397] 
P [317] <<DEFECTIVE_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [318] ->
Q [319] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 125:
Theorem (125) [serial 1400] used for:
  Associativity: (b.c).a = a.b.c [serial 1397]
 


Theorem (127)                               [serial 1388] 
P [317] <<DEFECTIVE_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [318] ->
Q [319] <<Defective_Battery = Defective_Battery>>
by Equality Law (idistr):  a=a <-> true
and theorem 126:
Theorem (126) [serial 1397] used for:
  Equality Law (idistr):  a=a <-> true [serial 1388]
 


Theorem (128)                               [serial 1382] 
P [317] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [318] ->
Q [319] <<Defective_Battery = Defective_Battery>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 127:
Theorem (127) [serial 1388] used for:
    normalization of [serial 1382]
 


Theorem (129)                               [serial 1379] 
P [317] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [318] currentAlarm := Defective_Battery
Q [319] <<currentAlarm = Defective_Battery>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 128:
Theorem (128) [serial 1382] used for:
  applied wp for assignment [serial 1379]
 


Theorem (130)                               [serial 1401] 
P [317] <<No_Alarm = currentAlarm and No_Warning = currentWarning and DEFECTIVE_BATTERY and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [320] ->
Q [72] <<DEFECTIVE_BATTERY>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (131)                               [serial 1398] 
P [317] <<No_Alarm = currentAlarm and No_Warning = currentWarning and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [320] ->
Q [72] <<DEFECTIVE_BATTERY>>
by Assume Present:  P = P@now = P^0 
and theorem 130:
Theorem (130) [serial 1401] used for:
  Assume Present:  P = P@now = P^0  [serial 1398]
 


Theorem (132)                               [serial 1390] 
P [317] <<DEFECTIVE_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [320] ->
Q [72] <<DEFECTIVE_BATTERY>>
by Associativity: (b.c).a = a.b.c
and theorem 131:
Theorem (131) [serial 1398] used for:
  Associativity: (b.c).a = a.b.c [serial 1390]
 


Theorem (133)                               [serial 1383] 
P [317] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [320] ->
Q [72] <<DEFECTIVE_BATTERY>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 132:
Theorem (132) [serial 1390] used for:
    normalization of [serial 1383]
 


Theorem (134)                               [serial 1384] 
P [320] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Alarm = Defective_Battery)@now>>
S [320] ->
Q [321] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (135)                               [serial 1380] 
P [317] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [320] Alarm!(Defective_Battery)
Q [321] <<true>>
by Enumeration Type Port Output 
and theorems 133 134:
Theorem (133) [serial 1383] used for:
  applied port output of enumeration type  Alarm!(Defective_Battery) [serial 1380]
 
Theorem (134) [serial 1384] used for:
  applied port output <<pre and (Alarm=Defective_Battery)@now>> -> <<post>> [serial 1380]
 


Theorem (136)                               [serial 1402] 
P [317] <<No_Alarm = currentAlarm and No_Warning = currentWarning and DEFECTIVE_BATTERY and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [323] ->
Q [175] <<AIR_IN_LINE or DEFECTIVE_BATTERY or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR or 
PUMP_OVERHEATED or THREAD_MONITOR_FAIL or UPSTREAM_OCCLUSION>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (137)                               [serial 1399] 
P [317] <<No_Alarm = currentAlarm and No_Warning = currentWarning and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [323] ->
Q [175] <<(PUMP_OVERHEATED or DEFECTIVE_BATTERY or THREAD_MONITOR_FAIL or AIR_IN_LINE or 
UPSTREAM_OCCLUSION or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR)>>
by Assume Present:  P = P@now = P^0 
and theorem 136:
Theorem (136) [serial 1402] used for:
  Assume Present:  P = P@now = P^0  [serial 1399]
 


Theorem (138)                               [serial 1396] 
P [317] <<DEFECTIVE_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [323] ->
Q [175] <<(PUMP_OVERHEATED or DEFECTIVE_BATTERY or THREAD_MONITOR_FAIL or AIR_IN_LINE or 
UPSTREAM_OCCLUSION or DOWNSTREAM_OCCLUSION or EMPTY_RESERVOIR)>>
by Associativity: (b.c).a = a.b.c
and theorem 137:
Theorem (137) [serial 1399] used for:
  Associativity: (b.c).a = a.b.c [serial 1396]
 


Theorem (139)                               [serial 1392] 
P [317] <<DEFECTIVE_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [323] ->
Q [175] <<STOP_PUMP()>>
by Substitution of Assertion Labels
and theorem 138:
Theorem (138) [serial 1396] used for:
  substituted Assertions' predicates for  labels  [serial 1392]
 


Theorem (140)                               [serial 1385] 
P [317] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [323] ->
Q [175] <<STOP_PUMP()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 139:
Theorem (139) [serial 1392] used for:
    normalization of [serial 1385]
 


Theorem (141)                               [serial 1386] 
P [323] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and Stop_Pump_Completely@now>>
S [323] ->
Q [324] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (142)                               [serial 1381] 
P [317] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [323] Stop_Pump_Completely!
Q [324] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 140 141:
Theorem (140) [serial 1385] used for:
  applied port output <<pre>> -> <<M(Stop_Pump_Completely)>> [serial 1381]
 
Theorem (141) [serial 1386] used for:
  applied port output <<pre and Stop_Pump_Completely@now>> -> <<post>> [serial 1381]
 


Theorem (143)                               [serial 1019] 
P [317] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and DEFECTIVE_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [318] currentAlarm := Defective_Battery
<<currentAlarm = Defective_Battery>>
&
Alarm!(Defective_Battery)
<<true>>
&
Stop_Pump_Completely!
<<true>>
Q [256] <<(currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 123 129 135 142:
Theorem (123) [serial 1378] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1019]
 
Theorem (129) [serial 1379] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1019]
 
Theorem (135) [serial 1380] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1019]
 
Theorem (142) [serial 1381] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1019]
 


Theorem (144)                               [serial 1404] 
P [328] <<(currentAlarm = Low_Battery) and true and true and true and true>>
S [329] ->
Q [256] <<(currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (145)                               [serial 1429] 
P [327] <<No_Alarm = currentAlarm and No_Warning = currentWarning and LOW_BATTERY and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [328] ->
Q [329] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (146)                               [serial 1426] 
P [327] <<No_Alarm = currentAlarm and No_Warning = currentWarning and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [328] ->
Q [329] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 145:
Theorem (145) [serial 1429] used for:
  Assume Present:  P = P@now = P^0  [serial 1426]
 


Theorem (147)                               [serial 1423] 
P [327] <<LOW_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [328] ->
Q [329] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 146:
Theorem (146) [serial 1426] used for:
  Associativity: (b.c).a = a.b.c [serial 1423]
 


Theorem (148)                               [serial 1414] 
P [327] <<LOW_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [328] ->
Q [329] <<Low_Battery = Low_Battery>>
by Equality Law (idistr):  a=a <-> true
and theorem 147:
Theorem (147) [serial 1423] used for:
  Equality Law (idistr):  a=a <-> true [serial 1414]
 


Theorem (149)                               [serial 1408] 
P [327] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [328] ->
Q [329] <<Low_Battery = Low_Battery>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 148:
Theorem (148) [serial 1414] used for:
    normalization of [serial 1408]
 


Theorem (150)                               [serial 1405] 
P [327] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [328] currentAlarm := Low_Battery
Q [329] <<currentAlarm = Low_Battery>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 149:
Theorem (149) [serial 1408] used for:
  applied wp for assignment [serial 1405]
 


Theorem (151)                               [serial 1427] 
P [327] <<No_Alarm = currentAlarm and No_Warning = currentWarning and LOW_BATTERY and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [330] ->
Q [73] <<LOW_BATTERY>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (152)                               [serial 1424] 
P [327] <<No_Alarm = currentAlarm and No_Warning = currentWarning and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [330] ->
Q [73] <<LOW_BATTERY>>
by Assume Present:  P = P@now = P^0 
and theorem 151:
Theorem (151) [serial 1427] used for:
  Assume Present:  P = P@now = P^0  [serial 1424]
 


Theorem (153)                               [serial 1416] 
P [327] <<LOW_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [330] ->
Q [73] <<LOW_BATTERY>>
by Associativity: (b.c).a = a.b.c
and theorem 152:
Theorem (152) [serial 1424] used for:
  Associativity: (b.c).a = a.b.c [serial 1416]
 


Theorem (154)                               [serial 1409] 
P [327] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [330] ->
Q [73] <<LOW_BATTERY>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 153:
Theorem (153) [serial 1416] used for:
    normalization of [serial 1409]
 


Theorem (155)                               [serial 1410] 
P [330] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Alarm = Low_Battery)@now>>
S [330] ->
Q [331] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (156)                               [serial 1406] 
P [327] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [330] Alarm!(Low_Battery)
Q [331] <<true>>
by Enumeration Type Port Output 
and theorems 154 155:
Theorem (154) [serial 1409] used for:
  applied port output of enumeration type  Alarm!(Low_Battery) [serial 1406]
 
Theorem (155) [serial 1410] used for:
  applied port output <<pre and (Alarm=Low_Battery)@now>> -> <<post>> [serial 1406]
 


Theorem (157)                               [serial 1428] 
P [327] <<No_Alarm = currentAlarm and No_Warning = currentWarning and LOW_BATTERY and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [333] ->
Q [177] <<BASAL_OVERINFUSION or BOLUS_OVERINFUSION or LOW_BATTERY or MAX_DOSE_WARNING or 
SQUARE_OVERINFUSION>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (158)                               [serial 1425] 
P [327] <<No_Alarm = currentAlarm and No_Warning = currentWarning and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [333] ->
Q [177] <<(BASAL_OVERINFUSION or BOLUS_OVERINFUSION or SQUARE_OVERINFUSION or MAX_DOSE_WARNING or 
LOW_BATTERY)>>
by Assume Present:  P = P@now = P^0 
and theorem 157:
Theorem (157) [serial 1428] used for:
  Assume Present:  P = P@now = P^0  [serial 1425]
 


Theorem (159)                               [serial 1422] 
P [327] <<LOW_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [333] ->
Q [177] <<(BASAL_OVERINFUSION or BOLUS_OVERINFUSION or SQUARE_OVERINFUSION or MAX_DOSE_WARNING or 
LOW_BATTERY)>>
by Associativity: (b.c).a = a.b.c
and theorem 158:
Theorem (158) [serial 1425] used for:
  Associativity: (b.c).a = a.b.c [serial 1422]
 


Theorem (160)                               [serial 1418] 
P [327] <<LOW_BATTERY@now and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and (No_Alarm = currentAlarm and No_Warning = currentWarning)>>
S [333] ->
Q [177] <<PUMP_KVO()>>
by Substitution of Assertion Labels
and theorem 159:
Theorem (159) [serial 1422] used for:
  substituted Assertions' predicates for  labels  [serial 1418]
 


Theorem (161)                               [serial 1411] 
P [327] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [333] ->
Q [177] <<PUMP_KVO()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 160:
Theorem (160) [serial 1418] used for:
    normalization of [serial 1411]
 


Theorem (162)                               [serial 1412] 
P [333] <<(((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and Pump_At_KVO_Rate@now>>
S [333] ->
Q [334] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (163)                               [serial 1407] 
P [327] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [333] Pump_At_KVO_Rate!
Q [334] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 161 162:
Theorem (161) [serial 1411] used for:
  applied port output <<pre>> -> <<M(Pump_At_KVO_Rate)>> [serial 1407]
 
Theorem (162) [serial 1412] used for:
  applied port output <<pre and Pump_At_KVO_Rate@now>> -> <<post>> [serial 1407]
 


Theorem (164)                               [serial 1020] 
P [327] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and LOW_BATTERY@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [328] currentAlarm := Low_Battery
<<currentAlarm = Low_Battery>>
&
Alarm!(Low_Battery)
<<true>>
&
Pump_At_KVO_Rate!
<<true>>
Q [256] <<(currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 144 150 156 163:
Theorem (144) [serial 1404] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1020]
 
Theorem (150) [serial 1405] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1020]
 
Theorem (156) [serial 1406] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1020]
 
Theorem (163) [serial 1407] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1020]
 


Theorem (165)                               [serial 1430] 
P [340] <<(currentWarning = No_Warning) and true and true and (currentAlarm = No_Alarm) and 
true and true>>
S [341] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (166)                               [serial 1461] 
P [339] <<NO_ALARM and NO_WARNING and Over_Max_Drug_Per_Hour = currentWarning and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (167)                               [serial 1457] 
P [339] <<Over_Max_Drug_Per_Hour = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 166:
Theorem (166) [serial 1461] used for:
  Associativity: (b.c).a = a.b.c [serial 1457]
 


Theorem (168)                               [serial 1453] 
P [339] <<Over_Max_Drug_Per_Hour = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Equality Law (idistr):  a=a <-> true
and theorem 167:
Theorem (167) [serial 1457] used for:
  Equality Law (idistr):  a=a <-> true [serial 1453]
 


Theorem (169)                               [serial 1442] 
P [339] <<(NO_ALARM and NO_WARNING)@now and Over_Max_Drug_Per_Hour = currentWarning and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Assume Present:  P = P@now = P^0 
and theorem 168:
Theorem (168) [serial 1453] used for:
  Assume Present:  P = P@now = P^0  [serial 1442]
 


Theorem (170)                               [serial 1435] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 169:
Theorem (169) [serial 1442] used for:
    normalization of [serial 1435]
 


Theorem (171)                               [serial 1431] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
Q [341] <<currentWarning = No_Warning>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 170:
Theorem (170) [serial 1435] used for:
  applied wp for assignment [serial 1431]
 


Theorem (172)                               [serial 1458] 
P [339] <<NO_ALARM and NO_WARNING and Over_Max_Drug_Per_Hour = currentWarning and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (173)                               [serial 1454] 
P [339] <<Over_Max_Drug_Per_Hour = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [342] ->
Q [106] <<NO_WARNING>>
by Associativity: (b.c).a = a.b.c
and theorem 172:
Theorem (172) [serial 1458] used for:
  Associativity: (b.c).a = a.b.c [serial 1454]
 


Theorem (174)                               [serial 1444] 
P [339] <<(NO_ALARM and NO_WARNING)@now and Over_Max_Drug_Per_Hour = currentWarning and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by Assume Present:  P = P@now = P^0 
and theorem 173:
Theorem (173) [serial 1454] used for:
  Assume Present:  P = P@now = P^0  [serial 1444]
 


Theorem (175)                               [serial 1436] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 174:
Theorem (174) [serial 1444] used for:
    normalization of [serial 1436]
 


Theorem (176)                               [serial 1437] 
P [342] <<((currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Warning = No_Warning)@now>>
S [342] ->
Q [343] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (177)                               [serial 1432] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] Warning!(No_Warning)
Q [343] <<true>>
by Enumeration Type Port Output 
and theorems 175 176:
Theorem (175) [serial 1436] used for:
  applied port output of enumeration type  Warning!(No_Warning) [serial 1432]
 
Theorem (176) [serial 1437] used for:
  applied port output <<pre and (Warning=No_Warning)@now>> -> <<post>> [serial 1432]
 


Theorem (178)                               [serial 1462] 
P [339] <<NO_ALARM and NO_WARNING and Over_Max_Drug_Per_Hour = currentWarning and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (179)                               [serial 1459] 
P [339] <<Over_Max_Drug_Per_Hour = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 178:
Theorem (178) [serial 1462] used for:
  Associativity: (b.c).a = a.b.c [serial 1459]
 


Theorem (180)                               [serial 1455] 
P [339] <<Over_Max_Drug_Per_Hour = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Equality Law (idistr):  a=a <-> true
and theorem 179:
Theorem (179) [serial 1459] used for:
  Equality Law (idistr):  a=a <-> true [serial 1455]
 


Theorem (181)                               [serial 1446] 
P [339] <<(NO_ALARM and NO_WARNING)@now and Over_Max_Drug_Per_Hour = currentWarning and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Assume Present:  P = P@now = P^0 
and theorem 180:
Theorem (180) [serial 1455] used for:
  Assume Present:  P = P@now = P^0  [serial 1446]
 


Theorem (182)                               [serial 1438] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 181:
Theorem (181) [serial 1446] used for:
    normalization of [serial 1438]
 


Theorem (183)                               [serial 1433] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] currentAlarm := No_Alarm
Q [345] <<currentAlarm = No_Alarm>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 182:
Theorem (182) [serial 1438] used for:
  applied wp for assignment [serial 1433]
 


Theorem (184)                               [serial 1460] 
P [339] <<NO_ALARM and NO_WARNING and Over_Max_Drug_Per_Hour = currentWarning and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (185)                               [serial 1456] 
P [339] <<Over_Max_Drug_Per_Hour = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [346] ->
Q [86] <<NO_ALARM>>
by Associativity: (b.c).a = a.b.c
and theorem 184:
Theorem (184) [serial 1460] used for:
  Associativity: (b.c).a = a.b.c [serial 1456]
 


Theorem (186)                               [serial 1448] 
P [339] <<(NO_ALARM and NO_WARNING)@now and Over_Max_Drug_Per_Hour = currentWarning and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by Assume Present:  P = P@now = P^0 
and theorem 185:
Theorem (185) [serial 1456] used for:
  Assume Present:  P = P@now = P^0  [serial 1448]
 


Theorem (187)                               [serial 1439] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 186:
Theorem (186) [serial 1448] used for:
    normalization of [serial 1439]
 


Theorem (188)                               [serial 1440] 
P [346] <<((currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Alarm = No_Alarm)@now>>
S [346] ->
Q [347] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (189)                               [serial 1434] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] Alarm!(No_Alarm)
Q [347] <<true>>
by Enumeration Type Port Output 
and theorems 187 188:
Theorem (187) [serial 1439] used for:
  applied port output of enumeration type  Alarm!(No_Alarm) [serial 1434]
 
Theorem (188) [serial 1440] used for:
  applied port output <<pre and (Alarm=No_Alarm)@now>> -> <<post>> [serial 1434]
 


Theorem (190)                               [serial 1021] 
P [339] <<(currentWarning = Over_Max_Drug_Per_Hour) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
<<currentWarning = No_Warning>>
&
Warning!(No_Warning)
<<true>>
&
currentAlarm := No_Alarm
<<currentAlarm = No_Alarm>>
&
Alarm!(No_Alarm)
<<true>>
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 165 171 177 183 189:
Theorem (165) [serial 1430] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1021]
 
Theorem (171) [serial 1431] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1021]
 
Theorem (177) [serial 1432] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1021]
 
Theorem (183) [serial 1433] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1021]
 
Theorem (189) [serial 1434] used for:
  <<P>> S4 <<Q4>> in concurrent composition for [serial 1021]
 


Theorem (191)                               [serial 1495] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Identity (id):  P->P is tautology


Theorem (192)                               [serial 1481] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning and true and true and 
true and true>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Law of And-Simplification:  P and true is P
and theorem 191:
Theorem (191) [serial 1495] used for:
  Law of And-Simplification:  P and true is P [serial 1481]
 


Theorem (193)                               [serial 1463] 
P [340] <<(currentWarning = No_Warning) and true and true and (currentAlarm = No_Alarm) and 
true and true>>
S [341] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 192:
Theorem (192) [serial 1481] used for:
    normalization of [serial 1463]
 


Theorem (194)                               [serial 1496] 
P [339] <<NO_ALARM and NO_WARNING and Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (195)                               [serial 1489] 
P [339] <<Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 194:
Theorem (194) [serial 1496] used for:
  Associativity: (b.c).a = a.b.c [serial 1489]
 


Theorem (196)                               [serial 1474] 
P [339] <<Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Equality Law (idistr):  a=a <-> true
and theorem 195:
Theorem (195) [serial 1489] used for:
  Equality Law (idistr):  a=a <-> true [serial 1474]
 


Theorem (197)                               [serial 1468] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Assume Present:  P = P@now = P^0 
and theorem 196:
Theorem (196) [serial 1474] used for:
  Assume Present:  P = P@now = P^0  [serial 1468]
 


Theorem (198)                               [serial 1464] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
Q [341] <<currentWarning = No_Warning>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 197:
Theorem (197) [serial 1468] used for:
  applied wp for assignment [serial 1464]
 


Theorem (199)                               [serial 1490] 
P [339] <<NO_ALARM and NO_WARNING and Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (200)                               [serial 1475] 
P [339] <<Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [342] ->
Q [106] <<NO_WARNING>>
by Associativity: (b.c).a = a.b.c
and theorem 199:
Theorem (199) [serial 1490] used for:
  Associativity: (b.c).a = a.b.c [serial 1475]
 


Theorem (201)                               [serial 1469] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by Assume Present:  P = P@now = P^0 
and theorem 200:
Theorem (200) [serial 1475] used for:
  Assume Present:  P = P@now = P^0  [serial 1469]
 


Theorem (202)                               [serial 1497] 
P [342] <<NO_ALARM and NO_WARNING and Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (203)                               [serial 1491] 
P [342] <<Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 202:
Theorem (202) [serial 1497] used for:
  Associativity: (b.c).a = a.b.c [serial 1491]
 


Theorem (204)                               [serial 1476] 
P [342] <<No_Warning = Warning and (Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 203:
Theorem (203) [serial 1491] used for:
  Associativity: (b.c).a = a.b.c [serial 1476]
 


Theorem (205)                               [serial 1470] 
P [342] <<((currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Warning = No_Warning)@now>>
S [342] ->
Q [343] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 204:
Theorem (204) [serial 1476] used for:
  Assume Present:  P = P@now = P^0  [serial 1470]
 


Theorem (206)                               [serial 1465] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] Warning!(No_Warning)
Q [343] <<true>>
by Enumeration Type Port Output 
and theorems 201 205:
Theorem (201) [serial 1469] used for:
  applied port output of enumeration type  Warning!(No_Warning) [serial 1465]
 
Theorem (205) [serial 1470] used for:
  applied port output <<pre and (Warning=No_Warning)@now>> -> <<post>> [serial 1465]
 


Theorem (207)                               [serial 1498] 
P [339] <<NO_ALARM and NO_WARNING and Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (208)                               [serial 1492] 
P [339] <<Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 207:
Theorem (207) [serial 1498] used for:
  Associativity: (b.c).a = a.b.c [serial 1492]
 


Theorem (209)                               [serial 1477] 
P [339] <<Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Equality Law (idistr):  a=a <-> true
and theorem 208:
Theorem (208) [serial 1492] used for:
  Equality Law (idistr):  a=a <-> true [serial 1477]
 


Theorem (210)                               [serial 1471] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Assume Present:  P = P@now = P^0 
and theorem 209:
Theorem (209) [serial 1477] used for:
  Assume Present:  P = P@now = P^0  [serial 1471]
 


Theorem (211)                               [serial 1466] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] currentAlarm := No_Alarm
Q [345] <<currentAlarm = No_Alarm>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 210:
Theorem (210) [serial 1471] used for:
  applied wp for assignment [serial 1466]
 


Theorem (212)                               [serial 1493] 
P [339] <<NO_ALARM and NO_WARNING and Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (213)                               [serial 1478] 
P [339] <<Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [346] ->
Q [86] <<NO_ALARM>>
by Associativity: (b.c).a = a.b.c
and theorem 212:
Theorem (212) [serial 1493] used for:
  Associativity: (b.c).a = a.b.c [serial 1478]
 


Theorem (214)                               [serial 1472] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by Assume Present:  P = P@now = P^0 
and theorem 213:
Theorem (213) [serial 1478] used for:
  Assume Present:  P = P@now = P^0  [serial 1472]
 


Theorem (215)                               [serial 1499] 
P [346] <<NO_ALARM and NO_WARNING and Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (216)                               [serial 1494] 
P [346] <<Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 215:
Theorem (215) [serial 1499] used for:
  Associativity: (b.c).a = a.b.c [serial 1494]
 


Theorem (217)                               [serial 1479] 
P [346] <<Alarm = No_Alarm and (Hard_Limit_Violated = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 216:
Theorem (216) [serial 1494] used for:
  Associativity: (b.c).a = a.b.c [serial 1479]
 


Theorem (218)                               [serial 1473] 
P [346] <<((currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Alarm = No_Alarm)@now>>
S [346] ->
Q [347] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 217:
Theorem (217) [serial 1479] used for:
  Assume Present:  P = P@now = P^0  [serial 1473]
 


Theorem (219)                               [serial 1467] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] Alarm!(No_Alarm)
Q [347] <<true>>
by Enumeration Type Port Output 
and theorems 214 218:
Theorem (214) [serial 1472] used for:
  applied port output of enumeration type  Alarm!(No_Alarm) [serial 1467]
 
Theorem (218) [serial 1473] used for:
  applied port output <<pre and (Alarm=No_Alarm)@now>> -> <<post>> [serial 1467]
 


Theorem (220)                               [serial 1022] 
P [339] <<(currentWarning = Hard_Limit_Violated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
<<currentWarning = No_Warning>>
&
Warning!(No_Warning)
<<true>>
&
currentAlarm := No_Alarm
<<currentAlarm = No_Alarm>>
&
Alarm!(No_Alarm)
<<true>>
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 193 198 206 211 219:
Theorem (193) [serial 1463] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1022]
 
Theorem (198) [serial 1464] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1022]
 
Theorem (206) [serial 1465] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1022]
 
Theorem (211) [serial 1466] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1022]
 
Theorem (219) [serial 1467] used for:
  <<P>> S4 <<Q4>> in concurrent composition for [serial 1022]
 


Theorem (221)                               [serial 1532] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Identity (id):  P->P is tautology


Theorem (222)                               [serial 1518] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning and true and true and 
true and true>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Law of And-Simplification:  P and true is P
and theorem 221:
Theorem (221) [serial 1532] used for:
  Law of And-Simplification:  P and true is P [serial 1518]
 


Theorem (223)                               [serial 1500] 
P [340] <<(currentWarning = No_Warning) and true and true and (currentAlarm = No_Alarm) and 
true and true>>
S [341] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 222:
Theorem (222) [serial 1518] used for:
    normalization of [serial 1500]
 


Theorem (224)                               [serial 1533] 
P [339] <<NO_ALARM and NO_WARNING and Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (225)                               [serial 1526] 
P [339] <<Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 224:
Theorem (224) [serial 1533] used for:
  Associativity: (b.c).a = a.b.c [serial 1526]
 


Theorem (226)                               [serial 1511] 
P [339] <<Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Equality Law (idistr):  a=a <-> true
and theorem 225:
Theorem (225) [serial 1526] used for:
  Equality Law (idistr):  a=a <-> true [serial 1511]
 


Theorem (227)                               [serial 1505] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Assume Present:  P = P@now = P^0 
and theorem 226:
Theorem (226) [serial 1511] used for:
  Assume Present:  P = P@now = P^0  [serial 1505]
 


Theorem (228)                               [serial 1501] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
Q [341] <<currentWarning = No_Warning>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 227:
Theorem (227) [serial 1505] used for:
  applied wp for assignment [serial 1501]
 


Theorem (229)                               [serial 1527] 
P [339] <<NO_ALARM and NO_WARNING and Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (230)                               [serial 1512] 
P [339] <<Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [342] ->
Q [106] <<NO_WARNING>>
by Associativity: (b.c).a = a.b.c
and theorem 229:
Theorem (229) [serial 1527] used for:
  Associativity: (b.c).a = a.b.c [serial 1512]
 


Theorem (231)                               [serial 1506] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by Assume Present:  P = P@now = P^0 
and theorem 230:
Theorem (230) [serial 1512] used for:
  Assume Present:  P = P@now = P^0  [serial 1506]
 


Theorem (232)                               [serial 1534] 
P [342] <<NO_ALARM and NO_WARNING and Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (233)                               [serial 1528] 
P [342] <<Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 232:
Theorem (232) [serial 1534] used for:
  Associativity: (b.c).a = a.b.c [serial 1528]
 


Theorem (234)                               [serial 1513] 
P [342] <<No_Warning = Warning and (Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 233:
Theorem (233) [serial 1528] used for:
  Associativity: (b.c).a = a.b.c [serial 1513]
 


Theorem (235)                               [serial 1507] 
P [342] <<((currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Warning = No_Warning)@now>>
S [342] ->
Q [343] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 234:
Theorem (234) [serial 1513] used for:
  Assume Present:  P = P@now = P^0  [serial 1507]
 


Theorem (236)                               [serial 1502] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] Warning!(No_Warning)
Q [343] <<true>>
by Enumeration Type Port Output 
and theorems 231 235:
Theorem (231) [serial 1506] used for:
  applied port output of enumeration type  Warning!(No_Warning) [serial 1502]
 
Theorem (235) [serial 1507] used for:
  applied port output <<pre and (Warning=No_Warning)@now>> -> <<post>> [serial 1502]
 


Theorem (237)                               [serial 1535] 
P [339] <<NO_ALARM and NO_WARNING and Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (238)                               [serial 1529] 
P [339] <<Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 237:
Theorem (237) [serial 1535] used for:
  Associativity: (b.c).a = a.b.c [serial 1529]
 


Theorem (239)                               [serial 1514] 
P [339] <<Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Equality Law (idistr):  a=a <-> true
and theorem 238:
Theorem (238) [serial 1529] used for:
  Equality Law (idistr):  a=a <-> true [serial 1514]
 


Theorem (240)                               [serial 1508] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Assume Present:  P = P@now = P^0 
and theorem 239:
Theorem (239) [serial 1514] used for:
  Assume Present:  P = P@now = P^0  [serial 1508]
 


Theorem (241)                               [serial 1503] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] currentAlarm := No_Alarm
Q [345] <<currentAlarm = No_Alarm>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 240:
Theorem (240) [serial 1508] used for:
  applied wp for assignment [serial 1503]
 


Theorem (242)                               [serial 1530] 
P [339] <<NO_ALARM and NO_WARNING and Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (243)                               [serial 1515] 
P [339] <<Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [346] ->
Q [86] <<NO_ALARM>>
by Associativity: (b.c).a = a.b.c
and theorem 242:
Theorem (242) [serial 1530] used for:
  Associativity: (b.c).a = a.b.c [serial 1515]
 


Theorem (244)                               [serial 1509] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by Assume Present:  P = P@now = P^0 
and theorem 243:
Theorem (243) [serial 1515] used for:
  Assume Present:  P = P@now = P^0  [serial 1509]
 


Theorem (245)                               [serial 1536] 
P [346] <<NO_ALARM and NO_WARNING and Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (246)                               [serial 1531] 
P [346] <<Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 245:
Theorem (245) [serial 1536] used for:
  Associativity: (b.c).a = a.b.c [serial 1531]
 


Theorem (247)                               [serial 1516] 
P [346] <<Alarm = No_Alarm and (Empty_Reservoir = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 246:
Theorem (246) [serial 1531] used for:
  Associativity: (b.c).a = a.b.c [serial 1516]
 


Theorem (248)                               [serial 1510] 
P [346] <<((currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Alarm = No_Alarm)@now>>
S [346] ->
Q [347] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 247:
Theorem (247) [serial 1516] used for:
  Assume Present:  P = P@now = P^0  [serial 1510]
 


Theorem (249)                               [serial 1504] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] Alarm!(No_Alarm)
Q [347] <<true>>
by Enumeration Type Port Output 
and theorems 244 248:
Theorem (244) [serial 1509] used for:
  applied port output of enumeration type  Alarm!(No_Alarm) [serial 1504]
 
Theorem (248) [serial 1510] used for:
  applied port output <<pre and (Alarm=No_Alarm)@now>> -> <<post>> [serial 1504]
 


Theorem (250)                               [serial 1023] 
P [339] <<(currentAlarm = Empty_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
<<currentWarning = No_Warning>>
&
Warning!(No_Warning)
<<true>>
&
currentAlarm := No_Alarm
<<currentAlarm = No_Alarm>>
&
Alarm!(No_Alarm)
<<true>>
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 223 228 236 241 249:
Theorem (223) [serial 1500] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1023]
 
Theorem (228) [serial 1501] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1023]
 
Theorem (236) [serial 1502] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1023]
 
Theorem (241) [serial 1503] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1023]
 
Theorem (249) [serial 1504] used for:
  <<P>> S4 <<Q4>> in concurrent composition for [serial 1023]
 


Theorem (251)                               [serial 1569] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Identity (id):  P->P is tautology


Theorem (252)                               [serial 1555] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning and true and true and 
true and true>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Law of And-Simplification:  P and true is P
and theorem 251:
Theorem (251) [serial 1569] used for:
  Law of And-Simplification:  P and true is P [serial 1555]
 


Theorem (253)                               [serial 1537] 
P [340] <<(currentWarning = No_Warning) and true and true and (currentAlarm = No_Alarm) and 
true and true>>
S [341] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 252:
Theorem (252) [serial 1555] used for:
    normalization of [serial 1537]
 


Theorem (254)                               [serial 1570] 
P [339] <<NO_ALARM and NO_WARNING and Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (255)                               [serial 1563] 
P [339] <<Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 254:
Theorem (254) [serial 1570] used for:
  Associativity: (b.c).a = a.b.c [serial 1563]
 


Theorem (256)                               [serial 1548] 
P [339] <<Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Equality Law (idistr):  a=a <-> true
and theorem 255:
Theorem (255) [serial 1563] used for:
  Equality Law (idistr):  a=a <-> true [serial 1548]
 


Theorem (257)                               [serial 1542] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Assume Present:  P = P@now = P^0 
and theorem 256:
Theorem (256) [serial 1548] used for:
  Assume Present:  P = P@now = P^0  [serial 1542]
 


Theorem (258)                               [serial 1538] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
Q [341] <<currentWarning = No_Warning>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 257:
Theorem (257) [serial 1542] used for:
  applied wp for assignment [serial 1538]
 


Theorem (259)                               [serial 1564] 
P [339] <<NO_ALARM and NO_WARNING and Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (260)                               [serial 1549] 
P [339] <<Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [342] ->
Q [106] <<NO_WARNING>>
by Associativity: (b.c).a = a.b.c
and theorem 259:
Theorem (259) [serial 1564] used for:
  Associativity: (b.c).a = a.b.c [serial 1549]
 


Theorem (261)                               [serial 1543] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by Assume Present:  P = P@now = P^0 
and theorem 260:
Theorem (260) [serial 1549] used for:
  Assume Present:  P = P@now = P^0  [serial 1543]
 


Theorem (262)                               [serial 1571] 
P [342] <<NO_ALARM and NO_WARNING and Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (263)                               [serial 1565] 
P [342] <<Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 262:
Theorem (262) [serial 1571] used for:
  Associativity: (b.c).a = a.b.c [serial 1565]
 


Theorem (264)                               [serial 1550] 
P [342] <<No_Warning = Warning and (Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 263:
Theorem (263) [serial 1565] used for:
  Associativity: (b.c).a = a.b.c [serial 1550]
 


Theorem (265)                               [serial 1544] 
P [342] <<((currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Warning = No_Warning)@now>>
S [342] ->
Q [343] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 264:
Theorem (264) [serial 1550] used for:
  Assume Present:  P = P@now = P^0  [serial 1544]
 


Theorem (266)                               [serial 1539] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] Warning!(No_Warning)
Q [343] <<true>>
by Enumeration Type Port Output 
and theorems 261 265:
Theorem (261) [serial 1543] used for:
  applied port output of enumeration type  Warning!(No_Warning) [serial 1539]
 
Theorem (265) [serial 1544] used for:
  applied port output <<pre and (Warning=No_Warning)@now>> -> <<post>> [serial 1539]
 


Theorem (267)                               [serial 1572] 
P [339] <<NO_ALARM and NO_WARNING and Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (268)                               [serial 1566] 
P [339] <<Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 267:
Theorem (267) [serial 1572] used for:
  Associativity: (b.c).a = a.b.c [serial 1566]
 


Theorem (269)                               [serial 1551] 
P [339] <<Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Equality Law (idistr):  a=a <-> true
and theorem 268:
Theorem (268) [serial 1566] used for:
  Equality Law (idistr):  a=a <-> true [serial 1551]
 


Theorem (270)                               [serial 1545] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Assume Present:  P = P@now = P^0 
and theorem 269:
Theorem (269) [serial 1551] used for:
  Assume Present:  P = P@now = P^0  [serial 1545]
 


Theorem (271)                               [serial 1540] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] currentAlarm := No_Alarm
Q [345] <<currentAlarm = No_Alarm>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 270:
Theorem (270) [serial 1545] used for:
  applied wp for assignment [serial 1540]
 


Theorem (272)                               [serial 1567] 
P [339] <<NO_ALARM and NO_WARNING and Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (273)                               [serial 1552] 
P [339] <<Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [346] ->
Q [86] <<NO_ALARM>>
by Associativity: (b.c).a = a.b.c
and theorem 272:
Theorem (272) [serial 1567] used for:
  Associativity: (b.c).a = a.b.c [serial 1552]
 


Theorem (274)                               [serial 1546] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by Assume Present:  P = P@now = P^0 
and theorem 273:
Theorem (273) [serial 1552] used for:
  Assume Present:  P = P@now = P^0  [serial 1546]
 


Theorem (275)                               [serial 1573] 
P [346] <<NO_ALARM and NO_WARNING and Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (276)                               [serial 1568] 
P [346] <<Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 275:
Theorem (275) [serial 1573] used for:
  Associativity: (b.c).a = a.b.c [serial 1568]
 


Theorem (277)                               [serial 1553] 
P [346] <<Alarm = No_Alarm and (Low_Reservoir = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 276:
Theorem (276) [serial 1568] used for:
  Associativity: (b.c).a = a.b.c [serial 1553]
 


Theorem (278)                               [serial 1547] 
P [346] <<((currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Alarm = No_Alarm)@now>>
S [346] ->
Q [347] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 277:
Theorem (277) [serial 1553] used for:
  Assume Present:  P = P@now = P^0  [serial 1547]
 


Theorem (279)                               [serial 1541] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] Alarm!(No_Alarm)
Q [347] <<true>>
by Enumeration Type Port Output 
and theorems 274 278:
Theorem (274) [serial 1546] used for:
  applied port output of enumeration type  Alarm!(No_Alarm) [serial 1541]
 
Theorem (278) [serial 1547] used for:
  applied port output <<pre and (Alarm=No_Alarm)@now>> -> <<post>> [serial 1541]
 


Theorem (280)                               [serial 1024] 
P [339] <<(currentWarning = Low_Reservoir) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
<<currentWarning = No_Warning>>
&
Warning!(No_Warning)
<<true>>
&
currentAlarm := No_Alarm
<<currentAlarm = No_Alarm>>
&
Alarm!(No_Alarm)
<<true>>
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 253 258 266 271 279:
Theorem (253) [serial 1537] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1024]
 
Theorem (258) [serial 1538] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1024]
 
Theorem (266) [serial 1539] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1024]
 
Theorem (271) [serial 1540] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1024]
 
Theorem (279) [serial 1541] used for:
  <<P>> S4 <<Q4>> in concurrent composition for [serial 1024]
 


Theorem (281)                               [serial 1606] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Identity (id):  P->P is tautology


Theorem (282)                               [serial 1592] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning and true and true and 
true and true>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Law of And-Simplification:  P and true is P
and theorem 281:
Theorem (281) [serial 1606] used for:
  Law of And-Simplification:  P and true is P [serial 1592]
 


Theorem (283)                               [serial 1574] 
P [340] <<(currentWarning = No_Warning) and true and true and (currentAlarm = No_Alarm) and 
true and true>>
S [341] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 282:
Theorem (282) [serial 1592] used for:
    normalization of [serial 1574]
 


Theorem (284)                               [serial 1607] 
P [339] <<NO_ALARM and NO_WARNING and Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (285)                               [serial 1600] 
P [339] <<Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 284:
Theorem (284) [serial 1607] used for:
  Associativity: (b.c).a = a.b.c [serial 1600]
 


Theorem (286)                               [serial 1585] 
P [339] <<Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Equality Law (idistr):  a=a <-> true
and theorem 285:
Theorem (285) [serial 1600] used for:
  Equality Law (idistr):  a=a <-> true [serial 1585]
 


Theorem (287)                               [serial 1579] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Assume Present:  P = P@now = P^0 
and theorem 286:
Theorem (286) [serial 1585] used for:
  Assume Present:  P = P@now = P^0  [serial 1579]
 


Theorem (288)                               [serial 1575] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
Q [341] <<currentWarning = No_Warning>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 287:
Theorem (287) [serial 1579] used for:
  applied wp for assignment [serial 1575]
 


Theorem (289)                               [serial 1601] 
P [339] <<NO_ALARM and NO_WARNING and Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (290)                               [serial 1586] 
P [339] <<Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [342] ->
Q [106] <<NO_WARNING>>
by Associativity: (b.c).a = a.b.c
and theorem 289:
Theorem (289) [serial 1601] used for:
  Associativity: (b.c).a = a.b.c [serial 1586]
 


Theorem (291)                               [serial 1580] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by Assume Present:  P = P@now = P^0 
and theorem 290:
Theorem (290) [serial 1586] used for:
  Assume Present:  P = P@now = P^0  [serial 1580]
 


Theorem (292)                               [serial 1608] 
P [342] <<NO_ALARM and NO_WARNING and Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (293)                               [serial 1602] 
P [342] <<Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 292:
Theorem (292) [serial 1608] used for:
  Associativity: (b.c).a = a.b.c [serial 1602]
 


Theorem (294)                               [serial 1587] 
P [342] <<No_Warning = Warning and (Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 293:
Theorem (293) [serial 1602] used for:
  Associativity: (b.c).a = a.b.c [serial 1587]
 


Theorem (295)                               [serial 1581] 
P [342] <<((currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Warning = No_Warning)@now>>
S [342] ->
Q [343] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 294:
Theorem (294) [serial 1587] used for:
  Assume Present:  P = P@now = P^0  [serial 1581]
 


Theorem (296)                               [serial 1576] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] Warning!(No_Warning)
Q [343] <<true>>
by Enumeration Type Port Output 
and theorems 291 295:
Theorem (291) [serial 1580] used for:
  applied port output of enumeration type  Warning!(No_Warning) [serial 1576]
 
Theorem (295) [serial 1581] used for:
  applied port output <<pre and (Warning=No_Warning)@now>> -> <<post>> [serial 1576]
 


Theorem (297)                               [serial 1609] 
P [339] <<NO_ALARM and NO_WARNING and Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (298)                               [serial 1603] 
P [339] <<Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 297:
Theorem (297) [serial 1609] used for:
  Associativity: (b.c).a = a.b.c [serial 1603]
 


Theorem (299)                               [serial 1588] 
P [339] <<Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Equality Law (idistr):  a=a <-> true
and theorem 298:
Theorem (298) [serial 1603] used for:
  Equality Law (idistr):  a=a <-> true [serial 1588]
 


Theorem (300)                               [serial 1582] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Assume Present:  P = P@now = P^0 
and theorem 299:
Theorem (299) [serial 1588] used for:
  Assume Present:  P = P@now = P^0  [serial 1582]
 


Theorem (301)                               [serial 1577] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] currentAlarm := No_Alarm
Q [345] <<currentAlarm = No_Alarm>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 300:
Theorem (300) [serial 1582] used for:
  applied wp for assignment [serial 1577]
 


Theorem (302)                               [serial 1604] 
P [339] <<NO_ALARM and NO_WARNING and Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (303)                               [serial 1589] 
P [339] <<Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [346] ->
Q [86] <<NO_ALARM>>
by Associativity: (b.c).a = a.b.c
and theorem 302:
Theorem (302) [serial 1604] used for:
  Associativity: (b.c).a = a.b.c [serial 1589]
 


Theorem (304)                               [serial 1583] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by Assume Present:  P = P@now = P^0 
and theorem 303:
Theorem (303) [serial 1589] used for:
  Assume Present:  P = P@now = P^0  [serial 1583]
 


Theorem (305)                               [serial 1610] 
P [346] <<NO_ALARM and NO_WARNING and Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (306)                               [serial 1605] 
P [346] <<Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 305:
Theorem (305) [serial 1610] used for:
  Associativity: (b.c).a = a.b.c [serial 1605]
 


Theorem (307)                               [serial 1590] 
P [346] <<Alarm = No_Alarm and (Priming_Failure = currentWarning and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 306:
Theorem (306) [serial 1605] used for:
  Associativity: (b.c).a = a.b.c [serial 1590]
 


Theorem (308)                               [serial 1584] 
P [346] <<((currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Alarm = No_Alarm)@now>>
S [346] ->
Q [347] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 307:
Theorem (307) [serial 1590] used for:
  Assume Present:  P = P@now = P^0  [serial 1584]
 


Theorem (309)                               [serial 1578] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] Alarm!(No_Alarm)
Q [347] <<true>>
by Enumeration Type Port Output 
and theorems 304 308:
Theorem (304) [serial 1583] used for:
  applied port output of enumeration type  Alarm!(No_Alarm) [serial 1578]
 
Theorem (308) [serial 1584] used for:
  applied port output <<pre and (Alarm=No_Alarm)@now>> -> <<post>> [serial 1578]
 


Theorem (310)                               [serial 1025] 
P [339] <<(currentWarning = Priming_Failure) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
<<currentWarning = No_Warning>>
&
Warning!(No_Warning)
<<true>>
&
currentAlarm := No_Alarm
<<currentAlarm = No_Alarm>>
&
Alarm!(No_Alarm)
<<true>>
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 283 288 296 301 309:
Theorem (283) [serial 1574] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1025]
 
Theorem (288) [serial 1575] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1025]
 
Theorem (296) [serial 1576] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1025]
 
Theorem (301) [serial 1577] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1025]
 
Theorem (309) [serial 1578] used for:
  <<P>> S4 <<Q4>> in concurrent composition for [serial 1025]
 


Theorem (311)                               [serial 1643] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Identity (id):  P->P is tautology


Theorem (312)                               [serial 1629] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning and true and true and 
true and true>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Law of And-Simplification:  P and true is P
and theorem 311:
Theorem (311) [serial 1643] used for:
  Law of And-Simplification:  P and true is P [serial 1629]
 


Theorem (313)                               [serial 1611] 
P [340] <<(currentWarning = No_Warning) and true and true and (currentAlarm = No_Alarm) and 
true and true>>
S [341] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 312:
Theorem (312) [serial 1629] used for:
    normalization of [serial 1611]
 


Theorem (314)                               [serial 1644] 
P [339] <<NO_ALARM and NO_WARNING and Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (315)                               [serial 1637] 
P [339] <<Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 314:
Theorem (314) [serial 1644] used for:
  Associativity: (b.c).a = a.b.c [serial 1637]
 


Theorem (316)                               [serial 1622] 
P [339] <<Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Equality Law (idistr):  a=a <-> true
and theorem 315:
Theorem (315) [serial 1637] used for:
  Equality Law (idistr):  a=a <-> true [serial 1622]
 


Theorem (317)                               [serial 1616] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Assume Present:  P = P@now = P^0 
and theorem 316:
Theorem (316) [serial 1622] used for:
  Assume Present:  P = P@now = P^0  [serial 1616]
 


Theorem (318)                               [serial 1612] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
Q [341] <<currentWarning = No_Warning>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 317:
Theorem (317) [serial 1616] used for:
  applied wp for assignment [serial 1612]
 


Theorem (319)                               [serial 1638] 
P [339] <<NO_ALARM and NO_WARNING and Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (320)                               [serial 1623] 
P [339] <<Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [342] ->
Q [106] <<NO_WARNING>>
by Associativity: (b.c).a = a.b.c
and theorem 319:
Theorem (319) [serial 1638] used for:
  Associativity: (b.c).a = a.b.c [serial 1623]
 


Theorem (321)                               [serial 1617] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by Assume Present:  P = P@now = P^0 
and theorem 320:
Theorem (320) [serial 1623] used for:
  Assume Present:  P = P@now = P^0  [serial 1617]
 


Theorem (322)                               [serial 1645] 
P [342] <<NO_ALARM and NO_WARNING and Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (323)                               [serial 1639] 
P [342] <<Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 322:
Theorem (322) [serial 1645] used for:
  Associativity: (b.c).a = a.b.c [serial 1639]
 


Theorem (324)                               [serial 1624] 
P [342] <<No_Warning = Warning and (Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 323:
Theorem (323) [serial 1639] used for:
  Associativity: (b.c).a = a.b.c [serial 1624]
 


Theorem (325)                               [serial 1618] 
P [342] <<((currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Warning = No_Warning)@now>>
S [342] ->
Q [343] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 324:
Theorem (324) [serial 1624] used for:
  Assume Present:  P = P@now = P^0  [serial 1618]
 


Theorem (326)                               [serial 1613] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] Warning!(No_Warning)
Q [343] <<true>>
by Enumeration Type Port Output 
and theorems 321 325:
Theorem (321) [serial 1617] used for:
  applied port output of enumeration type  Warning!(No_Warning) [serial 1613]
 
Theorem (325) [serial 1618] used for:
  applied port output <<pre and (Warning=No_Warning)@now>> -> <<post>> [serial 1613]
 


Theorem (327)                               [serial 1646] 
P [339] <<NO_ALARM and NO_WARNING and Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (328)                               [serial 1640] 
P [339] <<Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 327:
Theorem (327) [serial 1646] used for:
  Associativity: (b.c).a = a.b.c [serial 1640]
 


Theorem (329)                               [serial 1625] 
P [339] <<Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Equality Law (idistr):  a=a <-> true
and theorem 328:
Theorem (328) [serial 1640] used for:
  Equality Law (idistr):  a=a <-> true [serial 1625]
 


Theorem (330)                               [serial 1619] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Assume Present:  P = P@now = P^0 
and theorem 329:
Theorem (329) [serial 1625] used for:
  Assume Present:  P = P@now = P^0  [serial 1619]
 


Theorem (331)                               [serial 1614] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] currentAlarm := No_Alarm
Q [345] <<currentAlarm = No_Alarm>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 330:
Theorem (330) [serial 1619] used for:
  applied wp for assignment [serial 1614]
 


Theorem (332)                               [serial 1641] 
P [339] <<NO_ALARM and NO_WARNING and Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (333)                               [serial 1626] 
P [339] <<Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING)>>
S [346] ->
Q [86] <<NO_ALARM>>
by Associativity: (b.c).a = a.b.c
and theorem 332:
Theorem (332) [serial 1641] used for:
  Associativity: (b.c).a = a.b.c [serial 1626]
 


Theorem (334)                               [serial 1620] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by Assume Present:  P = P@now = P^0 
and theorem 333:
Theorem (333) [serial 1626] used for:
  Assume Present:  P = P@now = P^0  [serial 1620]
 


Theorem (335)                               [serial 1647] 
P [346] <<NO_ALARM and NO_WARNING and Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (336)                               [serial 1642] 
P [346] <<Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 335:
Theorem (335) [serial 1647] used for:
  Associativity: (b.c).a = a.b.c [serial 1642]
 


Theorem (337)                               [serial 1627] 
P [346] <<Alarm = No_Alarm and (Pump_Overheated = currentAlarm and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING))>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 336:
Theorem (336) [serial 1642] used for:
  Associativity: (b.c).a = a.b.c [serial 1627]
 


Theorem (338)                               [serial 1621] 
P [346] <<((currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Alarm = No_Alarm)@now>>
S [346] ->
Q [347] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 337:
Theorem (337) [serial 1627] used for:
  Assume Present:  P = P@now = P^0  [serial 1621]
 


Theorem (339)                               [serial 1615] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] Alarm!(No_Alarm)
Q [347] <<true>>
by Enumeration Type Port Output 
and theorems 334 338:
Theorem (334) [serial 1620] used for:
  applied port output of enumeration type  Alarm!(No_Alarm) [serial 1615]
 
Theorem (338) [serial 1621] used for:
  applied port output <<pre and (Alarm=No_Alarm)@now>> -> <<post>> [serial 1615]
 


Theorem (340)                               [serial 1026] 
P [339] <<(currentAlarm = Pump_Overheated) and (NO_ALARM and NO_WARNING)@now and 
not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
<<currentWarning = No_Warning>>
&
Warning!(No_Warning)
<<true>>
&
currentAlarm := No_Alarm
<<currentAlarm = No_Alarm>>
&
Alarm!(No_Alarm)
<<true>>
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 313 318 326 331 339:
Theorem (313) [serial 1611] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1026]
 
Theorem (318) [serial 1612] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1026]
 
Theorem (326) [serial 1613] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1026]
 
Theorem (331) [serial 1614] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1026]
 
Theorem (339) [serial 1615] used for:
  <<P>> S4 <<Q4>> in concurrent composition for [serial 1026]
 


Theorem (341)                               [serial 1680] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Identity (id):  P->P is tautology


Theorem (342)                               [serial 1666] 
P [340] <<No_Alarm = currentAlarm and No_Warning = currentWarning and true and true and 
true and true>>
S [341] ->
Q [249] <<No_Alarm = currentAlarm and No_Warning = currentWarning>>
by Law of And-Simplification:  P and true is P
and theorem 341:
Theorem (341) [serial 1680] used for:
  Law of And-Simplification:  P and true is P [serial 1666]
 


Theorem (343)                               [serial 1648] 
P [340] <<(currentWarning = No_Warning) and true and true and (currentAlarm = No_Alarm) and 
true and true>>
S [341] ->
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 342:
Theorem (342) [serial 1666] used for:
    normalization of [serial 1648]
 


Theorem (344)                               [serial 1681] 
P [339] <<NO_ALARM and NO_WARNING and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (Defective_Battery = currentAlarm or 
Low_Battery = currentAlarm)>>
S [340] ->
Q [341] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (345)                               [serial 1674] 
P [339] <<not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm)>>
S [340] ->
Q [341] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 344:
Theorem (344) [serial 1681] used for:
  Associativity: (b.c).a = a.b.c [serial 1674]
 


Theorem (346)                               [serial 1659] 
P [339] <<not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm)>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Equality Law (idistr):  a=a <-> true
and theorem 345:
Theorem (345) [serial 1674] used for:
  Equality Law (idistr):  a=a <-> true [serial 1659]
 


Theorem (347)                               [serial 1653] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] ->
Q [341] <<No_Warning = No_Warning>>
by Assume Present:  P = P@now = P^0 
and theorem 346:
Theorem (346) [serial 1659] used for:
  Assume Present:  P = P@now = P^0  [serial 1653]
 


Theorem (348)                               [serial 1649] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
Q [341] <<currentWarning = No_Warning>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 347:
Theorem (347) [serial 1653] used for:
  applied wp for assignment [serial 1649]
 


Theorem (349)                               [serial 1675] 
P [339] <<NO_ALARM and NO_WARNING and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (Defective_Battery = currentAlarm or 
Low_Battery = currentAlarm)>>
S [342] ->
Q [106] <<NO_WARNING>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (350)                               [serial 1660] 
P [339] <<not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm)>>
S [342] ->
Q [106] <<NO_WARNING>>
by Associativity: (b.c).a = a.b.c
and theorem 349:
Theorem (349) [serial 1675] used for:
  Associativity: (b.c).a = a.b.c [serial 1660]
 


Theorem (351)                               [serial 1654] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] ->
Q [106] <<NO_WARNING>>
by Assume Present:  P = P@now = P^0 
and theorem 350:
Theorem (350) [serial 1660] used for:
  Assume Present:  P = P@now = P^0  [serial 1654]
 


Theorem (352)                               [serial 1682] 
P [342] <<NO_ALARM and NO_WARNING and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (Defective_Battery = currentAlarm or 
Low_Battery = currentAlarm) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (353)                               [serial 1676] 
P [342] <<not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm) and No_Warning = Warning>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 352:
Theorem (352) [serial 1682] used for:
  Associativity: (b.c).a = a.b.c [serial 1676]
 


Theorem (354)                               [serial 1661] 
P [342] <<No_Warning = Warning and (not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm))>>
S [342] ->
Q [343] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 353:
Theorem (353) [serial 1676] used for:
  Associativity: (b.c).a = a.b.c [serial 1661]
 


Theorem (355)                               [serial 1655] 
P [342] <<(((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Warning = No_Warning)@now>>
S [342] ->
Q [343] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 354:
Theorem (354) [serial 1661] used for:
  Assume Present:  P = P@now = P^0  [serial 1655]
 


Theorem (356)                               [serial 1650] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [342] Warning!(No_Warning)
Q [343] <<true>>
by Enumeration Type Port Output 
and theorems 351 355:
Theorem (351) [serial 1654] used for:
  applied port output of enumeration type  Warning!(No_Warning) [serial 1650]
 
Theorem (355) [serial 1655] used for:
  applied port output <<pre and (Warning=No_Warning)@now>> -> <<post>> [serial 1650]
 


Theorem (357)                               [serial 1683] 
P [339] <<NO_ALARM and NO_WARNING and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (Defective_Battery = currentAlarm or 
Low_Battery = currentAlarm)>>
S [344] ->
Q [345] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (358)                               [serial 1677] 
P [339] <<not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm)>>
S [344] ->
Q [345] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 357:
Theorem (357) [serial 1683] used for:
  Associativity: (b.c).a = a.b.c [serial 1677]
 


Theorem (359)                               [serial 1662] 
P [339] <<not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm)>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Equality Law (idistr):  a=a <-> true
and theorem 358:
Theorem (358) [serial 1677] used for:
  Equality Law (idistr):  a=a <-> true [serial 1662]
 


Theorem (360)                               [serial 1656] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] ->
Q [345] <<No_Alarm = No_Alarm>>
by Assume Present:  P = P@now = P^0 
and theorem 359:
Theorem (359) [serial 1662] used for:
  Assume Present:  P = P@now = P^0  [serial 1656]
 


Theorem (361)                               [serial 1651] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [344] currentAlarm := No_Alarm
Q [345] <<currentAlarm = No_Alarm>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 360:
Theorem (360) [serial 1656] used for:
  applied wp for assignment [serial 1651]
 


Theorem (362)                               [serial 1678] 
P [339] <<NO_ALARM and NO_WARNING and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (Defective_Battery = currentAlarm or 
Low_Battery = currentAlarm)>>
S [346] ->
Q [86] <<NO_ALARM>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (363)                               [serial 1663] 
P [339] <<not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm)>>
S [346] ->
Q [86] <<NO_ALARM>>
by Associativity: (b.c).a = a.b.c
and theorem 362:
Theorem (362) [serial 1678] used for:
  Associativity: (b.c).a = a.b.c [serial 1663]
 


Theorem (364)                               [serial 1657] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] ->
Q [86] <<NO_ALARM>>
by Assume Present:  P = P@now = P^0 
and theorem 363:
Theorem (363) [serial 1663] used for:
  Assume Present:  P = P@now = P^0  [serial 1657]
 


Theorem (365)                               [serial 1684] 
P [346] <<NO_ALARM and NO_WARNING and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (Defective_Battery = currentAlarm or 
Low_Battery = currentAlarm) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (366)                               [serial 1679] 
P [346] <<not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm) and Alarm = No_Alarm>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 365:
Theorem (365) [serial 1684] used for:
  Associativity: (b.c).a = a.b.c [serial 1679]
 


Theorem (367)                               [serial 1664] 
P [346] <<Alarm = No_Alarm and (not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u ) and (NO_ALARM and NO_WARNING) and (
Defective_Battery = currentAlarm or Low_Battery = currentAlarm))>>
S [346] ->
Q [347] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 366:
Theorem (366) [serial 1679] used for:
  Associativity: (b.c).a = a.b.c [serial 1664]
 


Theorem (368)                               [serial 1658] 
P [346] <<(((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )) and (Alarm = No_Alarm)@now>>
S [346] ->
Q [347] <<true>>
by Assume Present:  P = P@now = P^0 
and theorem 367:
Theorem (367) [serial 1664] used for:
  Assume Present:  P = P@now = P^0  [serial 1658]
 


Theorem (369)                               [serial 1652] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [346] Alarm!(No_Alarm)
Q [347] <<true>>
by Enumeration Type Port Output 
and theorems 364 368:
Theorem (364) [serial 1657] used for:
  applied port output of enumeration type  Alarm!(No_Alarm) [serial 1652]
 
Theorem (368) [serial 1658] used for:
  applied port output <<pre and (Alarm=No_Alarm)@now>> -> <<post>> [serial 1652]
 


Theorem (370)                               [serial 1027] 
P [339] <<((currentAlarm = Defective_Battery) or (currentAlarm = Low_Battery)) and 
(NO_ALARM and NO_WARNING)@now and not (exists u:time
  in tops,,now 
  that (NO_ALARM and NO_WARNING)@u )>>
S [340] currentWarning := No_Warning
<<currentWarning = No_Warning>>
&
Warning!(No_Warning)
<<true>>
&
currentAlarm := No_Alarm
<<currentAlarm = No_Alarm>>
&
Alarm!(No_Alarm)
<<true>>
Q [249] <<(currentAlarm = No_Alarm) and (currentWarning = No_Warning)>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 343 348 356 361 369:
Theorem (343) [serial 1648] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1027]
 
Theorem (348) [serial 1649] used for:
  <<P>> S1 <<Q1>> in concurrent composition for [serial 1027]
 
Theorem (356) [serial 1650] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1027]
 
Theorem (361) [serial 1651] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1027]
 
Theorem (369) [serial 1652] used for:
  <<P>> S4 <<Q4>> in concurrent composition for [serial 1027]
 


Theorem (371)                               [serial 1028] 
P [350] <<((currentAlarm = No_Alarm) and (currentWarning = No_Warning)) and stop@now and 
not (exists u:time
  in tops,,now 
  that MAX_DOSE_WARNING@u ) and not (exists u:time
  in tops,,now 
  that HARD_LIMIT_VIOLATED@u ) and not (exists u:time
  in tops,,now 
  that EMPTY_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that LOW_RESERVOIR@u ) and not (exists u:time
  in tops,,now 
  that PRIME_FAIL@u ) and not (exists u:time
  in tops,,now 
  that PUMP_OVERHEATED@u ) and not (exists u:time
  in tops,,now 
  that DEFECTIVE_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that LOW_BATTERY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [350] ->
Q [257] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (372)                               [serial 1002] 
P [241] << >>
S [241] ->
Q [241] <<alarm_thread.imp proof obligations>>
by Initial Thread Obligations
and theorems 1 2 3 4 5 6 7 8 9 18 41 53 71 83 101 122 143 164 190 220 250 280 310 340 370 371:
Theorem (1) [serial 1003] used for:
  <<M(normal)>> -> <<I>> from invariant I when complete state normal has Assertion <<M(normal)>> in its definition.
 
Theorem (2) [serial 1004] used for:
  <<M(max_dose)>> -> <<I>> from invariant I when complete state max_dose has Assertion <<M(max_dose)>> in its definition.
 
Theorem (3) [serial 1005] used for:
  <<M(low)>> -> <<I>> from invariant I when complete state low has Assertion <<M(low)>> in its definition.
 
Theorem (4) [serial 1006] used for:
  <<M(pump_hot)>> -> <<I>> from invariant I when complete state pump_hot has Assertion <<M(pump_hot)>> in its definition.
 
Theorem (5) [serial 1007] used for:
  <<M(btty)>> -> <<I>> from invariant I when complete state btty has Assertion <<M(btty)>> in its definition.
 
Theorem (6) [serial 1008] used for:
  <<M(hard_limit)>> -> <<I>> from invariant I when complete state hard_limit has Assertion <<M(hard_limit)>> in its definition.
 
Theorem (7) [serial 1009] used for:
  <<M(empty)>> -> <<I>> from invariant I when complete state empty has Assertion <<M(empty)>> in its definition.
 
Theorem (8) [serial 1010] used for:
  <<M(prime_fail)>> -> <<I>> from invariant I when complete state prime_fail has Assertion <<M(prime_fail)>> in its definition.
 
Theorem (9) [serial 1011] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (18) [serial 1012] used for:
   <<M(start)>> A <<M(normal)>> for go:start-[ ]->normal{A};
 
Theorem (41) [serial 1013] used for:
   <<M(normal) and x>> A <<M(max_dose)>> for md:normal-[x]->max_dose{A};
 
Theorem (53) [serial 1014] used for:
   <<M(normal) and x>> A <<M(hard_limit)>> for hlv:normal-[x]->hard_limit{A};
 
Theorem (71) [serial 1015] used for:
   <<M(normal) and x>> A <<M(empty)>> for er:normal-[x]->empty{A};
 
Theorem (83) [serial 1016] used for:
   <<M(normal) and x>> A <<M(low)>> for lr:normal-[x]->low{A};
 
Theorem (101) [serial 1017] used for:
   <<M(normal) and x>> A <<M(prime_fail)>> for pf:normal-[x]->prime_fail{A};
 
Theorem (122) [serial 1018] used for:
   <<M(normal) and x>> A <<M(pump_hot)>> for ph:normal-[x]->pump_hot{A};
 
Theorem (143) [serial 1019] used for:
   <<M(normal) and x>> A <<M(btty)>> for d:normal-[x]->btty{A};
 
Theorem (164) [serial 1020] used for:
   <<M(normal) and x>> A <<M(btty)>> for btlo:normal-[x]->btty{A};
 
Theorem (190) [serial 1021] used for:
   <<M(max_dose) and x>> A <<M(normal)>> for reset:max_dose-[x]->normal{A};
 
Theorem (220) [serial 1022] used for:
   <<M(hard_limit) and x>> A <<M(normal)>> for reset:hard_limit-[x]->normal{A};
 
Theorem (250) [serial 1023] used for:
   <<M(empty) and x>> A <<M(normal)>> for reset:empty-[x]->normal{A};
 
Theorem (280) [serial 1024] used for:
   <<M(low) and x>> A <<M(normal)>> for reset:low-[x]->normal{A};
 
Theorem (310) [serial 1025] used for:
   <<M(prime_fail) and x>> A <<M(normal)>> for reset:prime_fail-[x]->normal{A};
 
Theorem (340) [serial 1026] used for:
   <<M(pump_hot) and x>> A <<M(normal)>> for reset:pump_hot-[x]->normal{A};
 
Theorem (370) [serial 1027] used for:
   <<M(btty) and x>> A <<M(normal)>> for reset:btty-[x]->normal{A};
 
Theorem (371) [serial 1028] used for:
   <<M(normal) and x>> -> <<M(done)>> for quit:normal-[x]->done{};
 


Theorem (373)                               [serial 1030] 
P [167] <<true>>
S [162] ->
Q [162] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (374)                               [serial 1031] 
P [166] <<true>>
S [166] ->
Q [166] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (375)                               [serial 1032] 
P [166] <<true>>
S [170] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (376)                               [serial 2979] 
P [167] <<true>>
S [191] ->
Q [191] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (377)                               [serial 2979] 
P [167] <<true>>
S [191] ->
Q [191] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (378)                               [serial 2947] 
P [167] <<true>>
S [191] ->
Q [191] <<AXIOM_RBT()>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 377 377:
Theorem (377) [serial 2979] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (377) [serial 2979] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (379)                               [serial 3033] 
P [167] <<true>>
S [173] ->
Q [173] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (380)                               [serial 3022] 
P [167] <<true>>
S [173] ->
Q [173] <<not BATTERY_VOLTAGE@now < #PCA_Properties::Defective_Battery_Voltage or 
BATTERY_VOLTAGE@now < #PCA_Properties::Defective_Battery_Voltage>>
by Law of Excluded Middle: P or not P is tautology
and theorem 379:
Theorem (379) [serial 3033] used for:
  Law of Excluded Middle: P or not P is tautology [serial 3022]
 


Theorem (381)                               [serial 3012] 
P [167] <<true>>
S [173] ->
Q [173] <<(not (BATTERY_VOLTAGE@now < #PCA_Properties::Defective_Battery_Voltage)) or 
BATTERY_VOLTAGE@now < #PCA_Properties::Defective_Battery_Voltage>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 380:
Theorem (380) [serial 3022] used for:
    normalization of [serial 3012]
 


Theorem (382)                               [serial 2986] 
P [167] <<true>>
S [173] ->
Q [173] <<#PCA_Properties::Defective_Battery_Voltage <= BATTERY_VOLTAGE@now or BATTERY_VOLTAGE@now < #PCA_Properties::Defective_Battery_Voltage>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 381:
Theorem (381) [serial 3012] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2986]
 


Theorem (383)                               [serial 2953] 
P [167] <<true>>
S [173] ->
Q [173] <<((BATTERY_VOLTAGE)@now < #PCA_Properties::Defective_Battery_Voltage) or 
((BATTERY_VOLTAGE)@now >= #PCA_Properties::Defective_Battery_Voltage)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 382:
Theorem (382) [serial 2986] used for:
    normalization of [serial 2953]
 


Theorem (384)                               [serial 3037] 
P [173] <<BATTERY_VOLTAGE < #PCA_Properties::Defective_Battery_Voltage>>
S [173] ->
Q [126] <<BATTERY_VOLTAGE < #PCA_Properties::Defective_Battery_Voltage>>
by Identity (id):  P->P is tautology


Theorem (385)                               [serial 2994] 
P [173] <<BATTERY_VOLTAGE@now < #PCA_Properties::Defective_Battery_Voltage>>
S [173] ->
Q [126] <<BATTERY_VOLTAGE < #PCA_Properties::Defective_Battery_Voltage>>
by Assume Present:  P = P@now = P^0 
and theorem 384:
Theorem (384) [serial 3037] used for:
  Assume Present:  P = P@now = P^0  [serial 2994]
 


Theorem (386)                               [serial 2980] 
P [173] <<(((BATTERY_VOLTAGE)@now < #PCA_Properties::Defective_Battery_Voltage))>>
S [173] ->
Q [126] <<BATTERY_VOLTAGE < #PCA_Properties::Defective_Battery_Voltage>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 385:
Theorem (385) [serial 2994] used for:
    normalization of [serial 2980]
 


Theorem (387)                               [serial 2965] 
P [173] <<true and ((BATTERY_VOLTAGE)@now < #PCA_Properties::Defective_Battery_Voltage)>>
S [173] ->
Q [126] <<BATTERY_VOLTAGE < #PCA_Properties::Defective_Battery_Voltage>>
by Law of And-Simplification:  P and true is P
and theorem 386:
Theorem (386) [serial 2980] used for:
  Law of And-Simplification:  P and true is P [serial 2965]
 


Theorem (388)                               [serial 2966] 
P [173] <<(true and ((BATTERY_VOLTAGE)@now < #PCA_Properties::Defective_Battery_Voltage)) and 
Defective_Battery@now>>
S [173] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (389)                               [serial 2954] 
P [173] <<true and ((BATTERY_VOLTAGE)@now < #PCA_Properties::Defective_Battery_Voltage)>>
S [173] Defective_Battery!
Q [167] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 387 388:
Theorem (387) [serial 2965] used for:
  applied port output <<pre>> -> <<M(Defective_Battery)>> [serial 2954]
 
Theorem (388) [serial 2966] used for:
  applied port output <<pre and Defective_Battery@now>> -> <<post>> [serial 2954]
 


Theorem (390)                               [serial 2967] 
P [173] <<true and ((BATTERY_VOLTAGE)@now >= #PCA_Properties::Defective_Battery_Voltage)>>
S [174] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (391)                               [serial 2955] 
P [173] <<true and ((BATTERY_VOLTAGE)@now >= #PCA_Properties::Defective_Battery_Voltage)>>
S [174] skip
Q [167] <<true>>
by Skip Means Implication:  <<P>> skip <<Q>>  is  <<P>> -> <<Q>> (bl.skip)
and theorem 390:
Theorem (390) [serial 2967] used for:
    <<P>> -> <<Q>>
  for [serial 2955]
 


Theorem (392)                               [serial 2948] 
P [167] <<true>>
S [173] if 
(Battery_Voltage? < #PCA_Properties::Defective_Battery_Voltage)~> 
  Defective_Battery! 
[]
(Battery_Voltage? >= #PCA_Properties::Defective_Battery_Voltage)~> 
  skip 
fi
Q [167] <<true>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 383 389 391:
Theorem (383) [serial 2953] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2948]
 
Theorem (389) [serial 2954] used for:
    <<P and B0>> S0 <<Q>>  for [serial 2948]
 
Theorem (391) [serial 2955] used for:
    <<P and B1>> S1 <<Q>>  for [serial 2948]
 


Theorem (393)                               [serial 3034] 
P [167] <<true>>
S [177] ->
Q [177] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (394)                               [serial 3024] 
P [167] <<true>>
S [177] ->
Q [177] <<not BATTERY_VOLTAGE@now < #PCA_Properties::Low_Battery_Voltage or BATTERY_VOLTAGE@now < #PCA_Properties::Low_Battery_Voltage>>
by Law of Excluded Middle: P or not P is tautology
and theorem 393:
Theorem (393) [serial 3034] used for:
  Law of Excluded Middle: P or not P is tautology [serial 3024]
 


Theorem (395)                               [serial 3013] 
P [167] <<true>>
S [177] ->
Q [177] <<(not (BATTERY_VOLTAGE@now < #PCA_Properties::Low_Battery_Voltage)) or 
BATTERY_VOLTAGE@now < #PCA_Properties::Low_Battery_Voltage>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 394:
Theorem (394) [serial 3024] used for:
    normalization of [serial 3013]
 


Theorem (396)                               [serial 2988] 
P [167] <<true>>
S [177] ->
Q [177] <<#PCA_Properties::Low_Battery_Voltage <= BATTERY_VOLTAGE@now or BATTERY_VOLTAGE@now < #PCA_Properties::Low_Battery_Voltage>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 395:
Theorem (395) [serial 3013] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2988]
 


Theorem (397)                               [serial 2956] 
P [167] <<true>>
S [177] ->
Q [177] <<((BATTERY_VOLTAGE)@now < #PCA_Properties::Low_Battery_Voltage) or ((BATTERY_VOLTAGE)@now >= #PCA_Properties::Low_Battery_Voltage)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 396:
Theorem (396) [serial 2988] used for:
    normalization of [serial 2956]
 


Theorem (398)                               [serial 3038] 
P [177] <<BATTERY_VOLTAGE < #PCA_Properties::Low_Battery_Voltage>>
S [177] ->
Q [123] <<BATTERY_VOLTAGE < #PCA_Properties::Low_Battery_Voltage>>
by Identity (id):  P->P is tautology


Theorem (399)                               [serial 2996] 
P [177] <<BATTERY_VOLTAGE@now < #PCA_Properties::Low_Battery_Voltage>>
S [177] ->
Q [123] <<BATTERY_VOLTAGE < #PCA_Properties::Low_Battery_Voltage>>
by Assume Present:  P = P@now = P^0 
and theorem 398:
Theorem (398) [serial 3038] used for:
  Assume Present:  P = P@now = P^0  [serial 2996]
 


Theorem (400)                               [serial 2981] 
P [177] <<(((BATTERY_VOLTAGE)@now < #PCA_Properties::Low_Battery_Voltage))>>
S [177] ->
Q [123] <<BATTERY_VOLTAGE < #PCA_Properties::Low_Battery_Voltage>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 399:
Theorem (399) [serial 2996] used for:
    normalization of [serial 2981]
 


Theorem (401)                               [serial 2968] 
P [177] <<true and ((BATTERY_VOLTAGE)@now < #PCA_Properties::Low_Battery_Voltage)>>
S [177] ->
Q [123] <<BATTERY_VOLTAGE < #PCA_Properties::Low_Battery_Voltage>>
by Law of And-Simplification:  P and true is P
and theorem 400:
Theorem (400) [serial 2981] used for:
  Law of And-Simplification:  P and true is P [serial 2968]
 


Theorem (402)                               [serial 2969] 
P [177] <<(true and ((BATTERY_VOLTAGE)@now < #PCA_Properties::Low_Battery_Voltage)) and 
Low_Battery_Warning@now>>
S [177] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (403)                               [serial 2957] 
P [177] <<true and ((BATTERY_VOLTAGE)@now < #PCA_Properties::Low_Battery_Voltage)>>
S [177] Low_Battery_Warning!
Q [167] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 401 402:
Theorem (401) [serial 2968] used for:
  applied port output <<pre>> -> <<M(Low_Battery_Warning)>> [serial 2957]
 
Theorem (402) [serial 2969] used for:
  applied port output <<pre and Low_Battery_Warning@now>> -> <<post>> [serial 2957]
 


Theorem (404)                               [serial 2970] 
P [177] <<true and ((BATTERY_VOLTAGE)@now >= #PCA_Properties::Low_Battery_Voltage)>>
S [178] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (405)                               [serial 2958] 
P [177] <<true and ((BATTERY_VOLTAGE)@now >= #PCA_Properties::Low_Battery_Voltage)>>
S [178] skip
Q [167] <<true>>
by Skip Means Implication:  <<P>> skip <<Q>>  is  <<P>> -> <<Q>> (bl.skip)
and theorem 404:
Theorem (404) [serial 2970] used for:
    <<P>> -> <<Q>>
  for [serial 2958]
 


Theorem (406)                               [serial 2949] 
P [167] <<true>>
S [177] if 
(Battery_Voltage? < #PCA_Properties::Low_Battery_Voltage)~> 
  Low_Battery_Warning! 
[]
(Battery_Voltage? >= #PCA_Properties::Low_Battery_Voltage)~> 
  skip 
fi
Q [167] <<true>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 397 403 405:
Theorem (397) [serial 2956] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2949]
 
Theorem (403) [serial 2957] used for:
    <<P and B0>> S0 <<Q>>  for [serial 2949]
 
Theorem (405) [serial 2958] used for:
    <<P and B1>> S1 <<Q>>  for [serial 2949]
 


Theorem (407)                               [serial 3049] 
P [167] <<true>>
S [181] ->
Q [181] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (408)                               [serial 3046] 
P [167] <<true>>
S [181] ->
Q [181] <<(true)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 407:
Theorem (407) [serial 3049] used for:
    normalization of [serial 3046]
 


Theorem (409)                               [serial 3045] 
P [167] <<true>>
S [181] ->
Q [181] <<(true) and (true)>>
by Law of And-Simplification:  P and P is P
and theorem 408:
Theorem (408) [serial 3046] used for:
  Law of And-Simplification:  P and P is P [serial 3045]
 


Theorem (410)                               [serial 3044] 
P [167] <<true>>
S [181] ->
Q [181] <<(not POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage or POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage or 
#PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE) and (not #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE or 
POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage or #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE)>>
by Law of Excluded Middle: P or not P is tautology
and theorem 409:
Theorem (409) [serial 3045] used for:
  Law of Excluded Middle: P or not P is tautology [serial 3044]
 


Theorem (411)                               [serial 3041] 
P [167] <<true>>
S [181] ->
Q [181] <<(not POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage and not #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE) or 
POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage or #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE>>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 410:
Theorem (410) [serial 3044] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 3041]
 


Theorem (412)                               [serial 3028] 
P [167] <<true>>
S [181] ->
Q [181] <<(not POWER_VOLTAGE@now < #PCA_Properties::Minimum_Power_Voltage and not #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE@now) or 
POWER_VOLTAGE@now < #PCA_Properties::Minimum_Power_Voltage or #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE@now>>
by Assume Present:  P = P@now = P^0 
and theorem 411:
Theorem (411) [serial 3041] used for:
  Assume Present:  P = P@now = P^0  [serial 3028]
 


Theorem (413)                               [serial 3015] 
P [167] <<true>>
S [181] ->
Q [181] <<((not (#PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE@now)) and 
(not (POWER_VOLTAGE@now < #PCA_Properties::Minimum_Power_Voltage))) or POWER_VOLTAGE@now < #PCA_Properties::Minimum_Power_Voltage or 
#PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE@now>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 412:
Theorem (412) [serial 3028] used for:
    normalization of [serial 3015]
 


Theorem (414)                               [serial 2998] 
P [167] <<true>>
S [181] ->
Q [181] <<(POWER_VOLTAGE@now <= #PCA_Properties::Maximum_Power_Voltage and #PCA_Properties::Minimum_Power_Voltage <= POWER_VOLTAGE@now) or 
POWER_VOLTAGE@now < #PCA_Properties::Minimum_Power_Voltage or #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE@now>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 413:
Theorem (413) [serial 3015] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2998]
 


Theorem (415)                               [serial 2982] 
P [167] <<true>>
S [181] ->
Q [181] <<((POWER_VOLTAGE)@now < #PCA_Properties::Minimum_Power_Voltage) or ((POWER_VOLTAGE)@now > #PCA_Properties::Maximum_Power_Voltage) or 
(((POWER_VOLTAGE)@now >= #PCA_Properties::Minimum_Power_Voltage) and ((POWER_VOLTAGE)@now <= #PCA_Properties::Maximum_Power_Voltage))>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 414:
Theorem (414) [serial 2998] used for:
    normalization of [serial 2982]
 


Theorem (416)                               [serial 2959] 
P [167] <<true>>
S [181] ->
Q [181] <<(((POWER_VOLTAGE)@now < #PCA_Properties::Minimum_Power_Voltage) or ((POWER_VOLTAGE)@now > #PCA_Properties::Maximum_Power_Voltage)) or 
(((POWER_VOLTAGE)@now >= #PCA_Properties::Minimum_Power_Voltage) and ((POWER_VOLTAGE)@now <= #PCA_Properties::Maximum_Power_Voltage))>>
by Associativity: (b.c).a = a.b.c
and theorem 415:
Theorem (415) [serial 2982] used for:
  Associativity: (b.c).a = a.b.c [serial 2959]
 


Theorem (417)                               [serial 3039] 
P [181] <<POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage or #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE>>
S [182] ->
Q [129] <<POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage or #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE>>
by Identity (id):  P->P is tautology


Theorem (418)                               [serial 3000] 
P [181] <<POWER_VOLTAGE@now < #PCA_Properties::Minimum_Power_Voltage or #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE@now>>
S [182] ->
Q [129] <<POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage or #PCA_Properties::Maximum_Power_Voltage < POWER_VOLTAGE>>
by Assume Present:  P = P@now = P^0 
and theorem 417:
Theorem (417) [serial 3039] used for:
  Assume Present:  P = P@now = P^0  [serial 3000]
 


Theorem (419)                               [serial 2983] 
P [181] <<((((POWER_VOLTAGE)@now < #PCA_Properties::Minimum_Power_Voltage) or ((POWER_VOLTAGE)@now > #PCA_Properties::Maximum_Power_Voltage)))>>
S [182] ->
Q [129] <<(POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage) or (POWER_VOLTAGE > #PCA_Properties::Maximum_Power_Voltage)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 418:
Theorem (418) [serial 3000] used for:
    normalization of [serial 2983]
 


Theorem (420)                               [serial 2971] 
P [181] <<true and (((POWER_VOLTAGE)@now < #PCA_Properties::Minimum_Power_Voltage) or 
((POWER_VOLTAGE)@now > #PCA_Properties::Maximum_Power_Voltage))>>
S [182] ->
Q [129] <<(POWER_VOLTAGE < #PCA_Properties::Minimum_Power_Voltage) or (POWER_VOLTAGE > #PCA_Properties::Maximum_Power_Voltage)>>
by Law of And-Simplification:  P and true is P
and theorem 419:
Theorem (419) [serial 2983] used for:
  Law of And-Simplification:  P and true is P [serial 2971]
 


Theorem (421)                               [serial 2972] 
P [182] <<(true and (((POWER_VOLTAGE)@now < #PCA_Properties::Minimum_Power_Voltage) or 
((POWER_VOLTAGE)@now > #PCA_Properties::Maximum_Power_Voltage))) and Voltage_OOR@now>>
S [182] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (422)                               [serial 2960] 
P [181] <<true and (((POWER_VOLTAGE)@now < #PCA_Properties::Minimum_Power_Voltage) or 
((POWER_VOLTAGE)@now > #PCA_Properties::Maximum_Power_Voltage))>>
S [182] Voltage_OOR!
Q [167] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 420 421:
Theorem (420) [serial 2971] used for:
  applied port output <<pre>> -> <<M(Voltage_OOR)>> [serial 2960]
 
Theorem (421) [serial 2972] used for:
  applied port output <<pre and Voltage_OOR@now>> -> <<post>> [serial 2960]
 


Theorem (423)                               [serial 2973] 
P [181] <<true and (((POWER_VOLTAGE)@now >= #PCA_Properties::Minimum_Power_Voltage) and 
((POWER_VOLTAGE)@now <= #PCA_Properties::Maximum_Power_Voltage))>>
S [184] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (424)                               [serial 2961] 
P [181] <<true and (((POWER_VOLTAGE)@now >= #PCA_Properties::Minimum_Power_Voltage) and 
((POWER_VOLTAGE)@now <= #PCA_Properties::Maximum_Power_Voltage))>>
S [184] skip
Q [167] <<true>>
by Skip Means Implication:  <<P>> skip <<Q>>  is  <<P>> -> <<Q>> (bl.skip)
and theorem 423:
Theorem (423) [serial 2973] used for:
    <<P>> -> <<Q>>
  for [serial 2961]
 


Theorem (425)                               [serial 2950] 
P [167] <<true>>
S [181] if 
((Power_Voltage? < #PCA_Properties::Minimum_Power_Voltage) or (Power_Voltage? > #PCA_Properties::Maximum_Power_Voltage))~> 
  Voltage_OOR! 
[]
((Power_Voltage? >= #PCA_Properties::Minimum_Power_Voltage) and (Power_Voltage? <= #PCA_Properties::Maximum_Power_Voltage))~> 
  skip 
fi
Q [167] <<true>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 416 422 424:
Theorem (416) [serial 2959] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2950]
 
Theorem (422) [serial 2960] used for:
    <<P and B0>> S0 <<Q>>  for [serial 2950]
 
Theorem (424) [serial 2961] used for:
    <<P and B1>> S1 <<Q>>  for [serial 2950]
 


Theorem (426)                               [serial 3035] 
P [167] <<true>>
S [187] ->
Q [187] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (427)                               [serial 3026] 
P [167] <<true>>
S [187] ->
Q [187] <<not 0 < BATTERY_CURRENT@now or 0 < BATTERY_CURRENT@now>>
by Law of Excluded Middle: P or not P is tautology
and theorem 426:
Theorem (426) [serial 3035] used for:
  Law of Excluded Middle: P or not P is tautology [serial 3026]
 


Theorem (428)                               [serial 3014] 
P [167] <<true>>
S [187] ->
Q [187] <<(not (0 < BATTERY_CURRENT@now)) or 0 < BATTERY_CURRENT@now>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 427:
Theorem (427) [serial 3026] used for:
    normalization of [serial 3014]
 


Theorem (429)                               [serial 2990] 
P [167] <<true>>
S [187] ->
Q [187] <<BATTERY_CURRENT@now <= 0 or 0 < BATTERY_CURRENT@now>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 428:
Theorem (428) [serial 3014] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2990]
 


Theorem (430)                               [serial 2962] 
P [167] <<true>>
S [187] ->
Q [187] <<((BATTERY_CURRENT)@now > 0) or ((BATTERY_CURRENT)@now <= 0)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 429:
Theorem (429) [serial 2990] used for:
    normalization of [serial 2962]
 


Theorem (431)                               [serial 3040] 
P [187] <<0 < BATTERY_CURRENT>>
S [187] ->
Q [136] <<0 < BATTERY_CURRENT>>
by Identity (id):  P->P is tautology


Theorem (432)                               [serial 3002] 
P [187] <<0 < BATTERY_CURRENT@now>>
S [187] ->
Q [136] <<0 < BATTERY_CURRENT>>
by Assume Present:  P = P@now = P^0 
and theorem 431:
Theorem (431) [serial 3040] used for:
  Assume Present:  P = P@now = P^0  [serial 3002]
 


Theorem (433)                               [serial 2984] 
P [187] <<(((BATTERY_CURRENT)@now > 0))>>
S [187] ->
Q [136] <<BATTERY_CURRENT > 0>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 432:
Theorem (432) [serial 3002] used for:
    normalization of [serial 2984]
 


Theorem (434)                               [serial 2974] 
P [187] <<true and ((BATTERY_CURRENT)@now > 0)>>
S [187] ->
Q [136] <<BATTERY_CURRENT > 0>>
by Law of And-Simplification:  P and true is P
and theorem 433:
Theorem (433) [serial 2984] used for:
  Law of And-Simplification:  P and true is P [serial 2974]
 


Theorem (435)                               [serial 2975] 
P [187] <<(true and ((BATTERY_CURRENT)@now > 0)) and Using_Battery_Power@now>>
S [187] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (436)                               [serial 2963] 
P [187] <<true and ((BATTERY_CURRENT)@now > 0)>>
S [187] Using_Battery_Power!
Q [167] <<true>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 434 435:
Theorem (434) [serial 2974] used for:
  applied port output <<pre>> -> <<M(Using_Battery_Power)>> [serial 2963]
 
Theorem (435) [serial 2975] used for:
  applied port output <<pre and Using_Battery_Power@now>> -> <<post>> [serial 2963]
 


Theorem (437)                               [serial 2976] 
P [187] <<true and ((BATTERY_CURRENT)@now <= 0)>>
S [188] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (438)                               [serial 2964] 
P [187] <<true and ((BATTERY_CURRENT)@now <= 0)>>
S [188] skip
Q [167] <<true>>
by Skip Means Implication:  <<P>> skip <<Q>>  is  <<P>> -> <<Q>> (bl.skip)
and theorem 437:
Theorem (437) [serial 2976] used for:
    <<P>> -> <<Q>>
  for [serial 2964]
 


Theorem (439)                               [serial 2951] 
P [167] <<true>>
S [187] if 
(Battery_Current? > 0)~> 
  Using_Battery_Power! 
[]
(Battery_Current? <= 0)~> 
  skip 
fi
Q [167] <<true>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 430 436 438:
Theorem (430) [serial 2962] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2951]
 
Theorem (436) [serial 2963] used for:
    <<P and B0>> S0 <<Q>>  for [serial 2951]
 
Theorem (438) [serial 2964] used for:
    <<P and B1>> S1 <<Q>>  for [serial 2951]
 


Theorem (440)                               [serial 2977] 
P [192] <<(AXIOM_RBT()) and (Remaining_Battery_Time = remaining_btty_time)@now>>
S [192] ->
Q [167] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (441)                               [serial 3055] 
P [192] <<REMAINING_BATTERY_TIME = remaining_btty_time and Remaining_Battery_Time = remaining_btty_time>>
S [192] ->
Q [192] <<REMAINING_BATTERY_TIME = remaining_btty_time>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (442)                               [serial 3053] 
P [192] <<REMAINING_BATTERY_TIME = remaining_btty_time and Remaining_Battery_Time = remaining_btty_time>>
S [192] ->
Q [192] <<REMAINING_BATTERY_TIME = Remaining_Battery_Time>>
by Guided Substitution of Equals
and theorem 441:
Theorem (441) [serial 3055] used for:
  Guided Substitution of Equals
 replacing "Remaining_Battery_Time" with its = "remaining_btty_time" in its postcondition [serial 3053]
 


Theorem (443)                               [serial 3051] 
P [192] <<Remaining_Battery_Time = remaining_btty_time and (remaining_btty_time = REMAINING_BATTERY_TIME)>>
S [192] ->
Q [192] <<REMAINING_BATTERY_TIME = Remaining_Battery_Time>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 442:
Theorem (442) [serial 3053] used for:
    normalization of [serial 3051]
 


Theorem (444)                               [serial 3036] 
P [192] <<Remaining_Battery_Time = remaining_btty_time and AXIOM_RBT()>>
S [192] ->
Q [192] <<REMAINING_BATTERY_TIME = Remaining_Battery_Time>>
by Substitution of Assertion Labels
and theorem 443:
Theorem (443) [serial 3051] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3036]
 


Theorem (445)                               [serial 2992] 
P [192] <<(Remaining_Battery_Time = remaining_btty_time)@now and AXIOM_RBT()>>
S [192] ->
Q [192] <<(REMAINING_BATTERY_TIME = Remaining_Battery_Time)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 444:
Theorem (444) [serial 3036] used for:
  Assume Present:  P = P@now = P^0  [serial 2992]
 


Theorem (446)                               [serial 2978] 
P [192] <<(AXIOM_RBT()) and (Remaining_Battery_Time = remaining_btty_time)@now>>
S [192] ->
Q [192] <<(Remaining_Battery_Time = REMAINING_BATTERY_TIME)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 445:
Theorem (445) [serial 2992] used for:
    normalization of [serial 2978]
 


Theorem (447)                               [serial 2952] 
P [191] <<AXIOM_RBT()>>
S [192] Remaining_Battery_Time!(remaining_btty_time)
Q [167] <<true>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 440 446:
Theorem (440) [serial 2977] used for:
  applied port output <<pre and (Remaining_Battery_Time=remaining_btty_time)@now>> -> <<post>> [serial 2952]
 
Theorem (446) [serial 2978] used for:
  applied port output <<pre and (Remaining_Battery_Time=remaining_btty_time)@now>> -> <<(Remaining_Battery_Time=REMAINING_BATTERY_TIME)@now>> [serial 2952]
 


Theorem (448)                               [serial 1033] 
P [167] <<true>>
S [173] if 
(Battery_Voltage? < #PCA_Properties::Defective_Battery_Voltage)~> 
  Defective_Battery! 
[]
(Battery_Voltage? >= #PCA_Properties::Defective_Battery_Voltage)~> 
  skip 
fi
&
if 
(Battery_Voltage? < #PCA_Properties::Low_Battery_Voltage)~> 
  Low_Battery_Warning! 
[]
(Battery_Voltage? >= #PCA_Properties::Low_Battery_Voltage)~> 
  skip 
fi
&
if 
((Power_Voltage? < #PCA_Properties::Minimum_Power_Voltage) or (Power_Voltage? > #PCA_Properties::Maximum_Power_Voltage))~> 
  Voltage_OOR! 
[]
((Power_Voltage? >= #PCA_Properties::Minimum_Power_Voltage) and (Power_Voltage? <= #PCA_Properties::Maximum_Power_Voltage))~> 
  skip 
fi
&
if 
(Battery_Current? > 0)~> 
  Using_Battery_Power! 
[]
(Battery_Current? <= 0)~> 
  skip 
fi
&
<<AXIOM_RBT()>>
Remaining_Battery_Time!(remaining_btty_time)
Q [167] <<true>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 378 392 406 425 439 447:
Theorem (378) [serial 2947] used for:
  P -> P5 in concurrent composition for [serial 1033]
 
Theorem (392) [serial 2948] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1033]
 
Theorem (406) [serial 2949] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1033]
 
Theorem (425) [serial 2950] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1033]
 
Theorem (439) [serial 2951] used for:
  <<P>> S4 <<Q>> in concurrent composition for [serial 1033]
 
Theorem (447) [serial 2952] used for:
  <<P5>> S5 <<Q>> in concurrent composition for [serial 1033]
 


Theorem (449)                               [serial 1029] 
P [159] << >>
S [162] ->
Q [159] <<power_control.imp proof obligations>>
by Initial Thread Obligations
and theorems 373 374 375 448:
Theorem (373) [serial 1030] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (374) [serial 1031] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (375) [serial 1032] used for:
   <<M(start)>> -> <<M(run)>> for bbc0:start-[ ]->run{};
 
Theorem (448) [serial 1033] used for:
   <<M(run) and x>> A <<M(run)>> for bbc1:run-[x]->run{A};
 


Theorem (450)                               [serial 1035] 
P [739] <<ELT(event_count)>>
S [732] ->
Q [732] <<ELT(event_count)>>
by Identity (id):  P->P is tautology


Theorem (451)                               [serial 1036] 
P [738] <<ELT(event_count)>>
S [738] ->
Q [738] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (452)                               [serial 1037] 
P [738] <<ELT(event_count)>>
S [742] ->
Q [739] <<ELT(event_count)>>
by Identity (id):  P->P is tautology


Theorem (453)                               [serial 1182] 
P [743] <<EVENT_RECORD@now and ELT(event_count) and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [743] ->
Q [744] <<ELT(event_count)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (454)                               [serial 1176] 
P [743] <<(ELT(event_count)) and EVENT_RECORD@now and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [743] ->
Q [744] <<ELT(event_count)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 453:
Theorem (453) [serial 1182] used for:
    normalization of [serial 1176]
 


Theorem (455)                               [serial 1216] 
P [739] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
S [739] ->
Q [739] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by Identity (id):  P->P is tautology


Theorem (456)                               [serial 1211] 
P [750] <<EVENT_RECORD = log[event_count] and (all k:integer
  in 1..event_count-1 
  are EVENT_RECORD = log[k] )>>
S [739] ->
Q [739] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 455:
Theorem (455) [serial 1216] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 1211]
 


Theorem (457)                               [serial 1208] 
P [750] <<EVENT_RECORD = log[event_count] and (all k:integer
  in 1..event_count-1 
  are EVENT_RECORD = log[k] )>>
S [739] ->
Q [739] <<(all k:integer
  in 1..event_count 
  are log[k] = EVENT_RECORD )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 456:
Theorem (456) [serial 1211] used for:
    normalization of [serial 1208]
 


Theorem (458)                               [serial 1184] 
P [750] <<EVENT_RECORD = log[event_count] and (all k:integer
  in 1..event_count-1 
  are EVENT_RECORD = log[k] )>>
S [739] ->
Q [739] <<ELT(event_count)>>
by Substitution of Assertion Labels
and theorem 457:
Theorem (457) [serial 1208] used for:
  substituted Assertions' predicates for  labels  [serial 1184]
 


Theorem (459)                               [serial 1177] 
P [750] <<(log[event_count] = EVENT_RECORD) and (all k:integer
  in 1..event_count-1 
  are log[k] = EVENT_RECORD )>>
S [739] ->
Q [739] <<ELT(event_count)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 458:
Theorem (458) [serial 1184] used for:
    normalization of [serial 1177]
 


Theorem (460)                               [serial 1202] 
P [745] <<EVENT_RECORD = an_event and ELT(event_count)>>
S [745] ->
Q [746] <<EVENT_RECORD = an_event and ELT(event_count)>>
by Identity (id):  P->P is tautology


Theorem (461)                               [serial 1196] 
P [745] <<(ELT(event_count)) and an_event = EVENT_RECORD>>
S [745] ->
Q [746] <<EVENT_RECORD = an_event and ELT(event_count)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 460:
Theorem (460) [serial 1202] used for:
    normalization of [serial 1196]
 


Theorem (462)                               [serial 1186] 
P [744] <<ELT(event_count)>>
S [745] Log_Event?(an_event)
Q [746] <<EVENT_RECORD = an_event and ELT(event_count)>>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 461:
Theorem (461) [serial 1196] used for:
  applied port input of value <<pre and an_event=M(Log_Event)>> -> <<post>> [serial 1186]
 


Theorem (463)                               [serial 1178] 
P [744] <<ELT(event_count)>>
S [745] Log_Event?(an_event)
Q [746] <<ELT(event_count) and (an_event = EVENT_RECORD)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 462:
Theorem (462) [serial 1186] used for:
    normalization of [serial 1178]
 


Theorem (464)                               [serial 1204] 
P [746] <<EVENT_RECORD = an_event and ELT(event_count)>>
S [747] ->
Q [748] <<EVENT_RECORD = an_event and ELT(event_count)>>
by Identity (id):  P->P is tautology


Theorem (465)                               [serial 1197] 
P [746] <<EVENT_RECORD = an_event and ELT(event_count)>>
S [747] ->
Q [748] <<EVENT_RECORD = an_event and ELT((1+event_count)-1)>>
by Normalization
  Normalization Axioms:
    Subtaction of Added Value:  (a+b)-a is b
    Reflexivity of Addition: a+b=b+a
and theorem 464:
Theorem (464) [serial 1204] used for:
    normalization of [serial 1197]
 


Theorem (466)                               [serial 1188] 
P [746] <<EVENT_RECORD = an_event and ELT(event_count)>>
S [747] event_count := 1+event_count
Q [748] <<EVENT_RECORD = an_event and ELT(event_count-1)>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 465:
Theorem (465) [serial 1197] used for:
  applied wp for assignment [serial 1188]
 


Theorem (467)                               [serial 1179] 
P [746] <<ELT(event_count) and (an_event = EVENT_RECORD)>>
S [747] event_count := event_count+1
Q [748] <<ELT(event_count-1) and (an_event = EVENT_RECORD)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 466:
Theorem (466) [serial 1188] used for:
    normalization of [serial 1179]
 


Theorem (468)                               [serial 1213] 
P [748] <<EVENT_RECORD = an_event and (all k:integer
  in 1..event_count-1 
  are EVENT_RECORD = log[k] )>>
S [749] ->
Q [750] <<EVENT_RECORD = an_event and (all k:integer
  in 1..event_count-1 
  are EVENT_RECORD = log[k] )>>
by Identity (id):  P->P is tautology


Theorem (469)                               [serial 1209] 
P [748] <<EVENT_RECORD = an_event and (all k:integer
  in 1..event_count-1 
  are log[k] = EVENT_RECORD )>>
S [749] ->
Q [750] <<EVENT_RECORD = an_event and (all k:integer
  in 1..event_count-1 
  are EVENT_RECORD = log[k] )>>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 468:
Theorem (468) [serial 1213] used for:
    normalization of [serial 1209]
 


Theorem (470)                               [serial 1198] 
P [748] <<EVENT_RECORD = an_event and ELT(event_count-1)>>
S [749] ->
Q [750] <<EVENT_RECORD = an_event and (all k:integer
  in 1..event_count-1 
  are EVENT_RECORD = log[k] )>>
by Substitution of Assertion Labels
and theorem 469:
Theorem (469) [serial 1209] used for:
  substituted Assertions' predicates for  labels  [serial 1198]
 


Theorem (471)                               [serial 1190] 
P [748] <<EVENT_RECORD = an_event and ELT(event_count-1)>>
S [749] log[event_count] := an_event
Q [750] <<EVENT_RECORD = log[event_count] and (all k:integer
  in 1..event_count-1 
  are EVENT_RECORD = log[k] )>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 470:
Theorem (470) [serial 1198] used for:
  applied wp for assignment [serial 1190]
 


Theorem (472)                               [serial 1180] 
P [748] <<ELT(event_count-1) and (an_event = EVENT_RECORD)>>
S [749] log[event_count] := an_event
Q [750] <<(log[event_count] = EVENT_RECORD) and (all k:integer
  in 1..event_count-1 
  are log[k] = EVENT_RECORD )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 471:
Theorem (471) [serial 1190] used for:
    normalization of [serial 1180]
 


Theorem (473)                               [serial 1038] 
P [743] <<(ELT(event_count)) and EVENT_RECORD@now and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [744] <<ELT(event_count)>>
Log_Event?(an_event)
;
<<ELT(event_count) and (an_event = EVENT_RECORD)>>
event_count := event_count+1
;
<<ELT(event_count-1) and (an_event = EVENT_RECORD)>>
log[event_count] := an_event
<<(log[event_count] = EVENT_RECORD) and (all k:integer
  in 1..event_count-1 
  are log[k] = EVENT_RECORD )>>
Q [739] <<ELT(event_count)>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 454 459 463 467 472:
Theorem (454) [serial 1176] used for:
  P -> P1 in sequential composition for [serial 1038]
 
Theorem (459) [serial 1177] used for:
  Q2 -> Q in sequential composition for [serial 1038]
 
Theorem (463) [serial 1178] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1038]
 
Theorem (467) [serial 1179] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1038]
 
Theorem (472) [serial 1180] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1038]
 


Theorem (474)                               [serial 1233] 
P [752] <<Get_Event_Log@now and ELT(event_count) and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<ELT(event_count)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (475)                               [serial 1229] 
P [752] <<Get_Event_Log@now and ELT(event_count) and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<(ELT(event_count))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 474:
Theorem (474) [serial 1233] used for:
    normalization of [serial 1229]
 


Theorem (476)                               [serial 1224] 
P [752] <<Get_Event_Log@now and ELT(event_count) and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<ELT(event_count) and true>>
by Law of And-Simplification:  P and true is P
and theorem 475:
Theorem (475) [serial 1229] used for:
  Law of And-Simplification:  P and true is P [serial 1224]
 


Theorem (477)                               [serial 1220] 
P [752] <<(ELT(event_count)) and Get_Event_Log@now and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<true and ELT(event_count)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 476:
Theorem (476) [serial 1224] used for:
    normalization of [serial 1220]
 


Theorem (478)                               [serial 1233] 
P [752] <<Get_Event_Log@now and ELT(event_count) and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<ELT(event_count)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (479)                               [serial 1229] 
P [752] <<Get_Event_Log@now and ELT(event_count) and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<(ELT(event_count))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 478:
Theorem (478) [serial 1233] used for:
    normalization of [serial 1229]
 


Theorem (480)                               [serial 1224] 
P [752] <<Get_Event_Log@now and ELT(event_count) and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<ELT(event_count) and true>>
by Law of And-Simplification:  P and true is P
and theorem 479:
Theorem (479) [serial 1229] used for:
  Law of And-Simplification:  P and true is P [serial 1224]
 


Theorem (481)                               [serial 1220] 
P [752] <<(ELT(event_count)) and Get_Event_Log@now and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<true and ELT(event_count)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 480:
Theorem (480) [serial 1224] used for:
    normalization of [serial 1220]
 


Theorem (482)                               [serial 1217] 
P [752] <<(ELT(event_count)) and Get_Event_Log@now and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [752] ->
Q [753] <<AXIOM_LOG() and ELT(event_count)>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 481 481:
Theorem (481) [serial 1220] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (481) [serial 1220] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (483)                               [serial 1218] 
P [755] <<AXIOM_LOG() and ELT(event_count)>>
S [739] ->
Q [739] <<ELT(event_count)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (484)                               [serial 1250] 
P [754] <<EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ) and (The_Event_Log = log)@now>>
S [754] ->
Q [755] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (485)                               [serial 1245] 
P [754] <<(The_Event_Log = log)@now and (EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ))>>
S [754] ->
Q [755] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by Associativity: (b.c).a = a.b.c
and theorem 484:
Theorem (484) [serial 1250] used for:
  Associativity: (b.c).a = a.b.c [serial 1245]
 


Theorem (486)                               [serial 1242] 
P [754] <<(EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] )) and (The_Event_Log = log)@now>>
S [754] ->
Q [755] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 485:
Theorem (485) [serial 1245] used for:
    normalization of [serial 1242]
 


Theorem (487)                               [serial 1254] 
P [754] <<(The_Event_Log = log)@now and EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] )>>
S [754] ->
Q [754] <<(The_Event_Log = log)@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (488)                               [serial 1252] 
P [754] <<EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ) and (The_Event_Log = log)@now>>
S [754] ->
Q [754] <<(log = The_Event_Log)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 487:
Theorem (487) [serial 1254] used for:
    normalization of [serial 1252]
 


Theorem (489)                               [serial 1251] 
P [754] <<EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ) and (The_Event_Log = log)@now>>
S [754] ->
Q [754] <<(EVENT_LOG = The_Event_Log)@now>>
by Substitution in Postcondition of All Equivalents in Precondition
and theorem 488:
Theorem (488) [serial 1252] used for:
  Substitution in Postcondition of All Equivalents in Precondition
 substituting in postcondition all equivalents in precondition [serial 1251]
 


Theorem (490)                               [serial 1247] 
P [754] <<(The_Event_Log = log)@now and (EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ))>>
S [754] ->
Q [754] <<(EVENT_LOG = The_Event_Log)@now>>
by Associativity: (b.c).a = a.b.c
and theorem 489:
Theorem (489) [serial 1251] used for:
  Associativity: (b.c).a = a.b.c [serial 1247]
 


Theorem (491)                               [serial 1243] 
P [754] <<(EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] )) and (The_Event_Log = log)@now>>
S [754] ->
Q [754] <<(The_Event_Log = EVENT_LOG)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 490:
Theorem (490) [serial 1247] used for:
    normalization of [serial 1243]
 


Theorem (492)                               [serial 1240] 
P [753] <<EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] )>>
S [754] The_Event_Log!(log)
Q [755] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 486 491:
Theorem (486) [serial 1242] used for:
  applied port output <<pre and (The_Event_Log=log)@now>> -> <<post>> [serial 1240]
 
Theorem (491) [serial 1243] used for:
  applied port output <<pre and (The_Event_Log=log)@now>> -> <<(The_Event_Log=EVENT_LOG)@now>> [serial 1240]
 


Theorem (493)                               [serial 1238] 
P [753] <<(log = EVENT_LOG) and (all k:integer
  in 1..event_count 
  are log[k] = EVENT_RECORD )>>
S [754] The_Event_Log!(log)
Q [755] <<(all k:integer
  in 1..event_count 
  are log[k] = EVENT_RECORD )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 492:
Theorem (492) [serial 1240] used for:
    normalization of [serial 1238]
 


Theorem (494)                               [serial 1235] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<ELT(event_count)>>
by Substitution of Assertion Labels
and theorem 493:
Theorem (493) [serial 1238] used for:
  substituted Assertions' predicates for  labels  [serial 1235]
 


Theorem (495)                               [serial 1230] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<(ELT(event_count))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 494:
Theorem (494) [serial 1235] used for:
    normalization of [serial 1230]
 


Theorem (496)                               [serial 1226] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<ELT(event_count) and true>>
by Law of And-Simplification:  P and true is P
and theorem 495:
Theorem (495) [serial 1230] used for:
  Law of And-Simplification:  P and true is P [serial 1226]
 


Theorem (497)                               [serial 1221] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<true and ELT(event_count)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 496:
Theorem (496) [serial 1226] used for:
    normalization of [serial 1221]
 


Theorem (498)                               [serial 1250] 
P [754] <<EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ) and (The_Event_Log = log)@now>>
S [754] ->
Q [755] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (499)                               [serial 1245] 
P [754] <<(The_Event_Log = log)@now and (EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ))>>
S [754] ->
Q [755] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by Associativity: (b.c).a = a.b.c
and theorem 498:
Theorem (498) [serial 1250] used for:
  Associativity: (b.c).a = a.b.c [serial 1245]
 


Theorem (500)                               [serial 1242] 
P [754] <<(EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] )) and (The_Event_Log = log)@now>>
S [754] ->
Q [755] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 499:
Theorem (499) [serial 1245] used for:
    normalization of [serial 1242]
 


Theorem (501)                               [serial 1254] 
P [754] <<(The_Event_Log = log)@now and EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] )>>
S [754] ->
Q [754] <<(The_Event_Log = log)@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (502)                               [serial 1252] 
P [754] <<EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ) and (The_Event_Log = log)@now>>
S [754] ->
Q [754] <<(log = The_Event_Log)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 501:
Theorem (501) [serial 1254] used for:
    normalization of [serial 1252]
 


Theorem (503)                               [serial 1251] 
P [754] <<EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ) and (The_Event_Log = log)@now>>
S [754] ->
Q [754] <<(EVENT_LOG = The_Event_Log)@now>>
by Substitution in Postcondition of All Equivalents in Precondition
and theorem 502:
Theorem (502) [serial 1252] used for:
  Substitution in Postcondition of All Equivalents in Precondition
 substituting in postcondition all equivalents in precondition [serial 1251]
 


Theorem (504)                               [serial 1247] 
P [754] <<(The_Event_Log = log)@now and (EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] ))>>
S [754] ->
Q [754] <<(EVENT_LOG = The_Event_Log)@now>>
by Associativity: (b.c).a = a.b.c
and theorem 503:
Theorem (503) [serial 1251] used for:
  Associativity: (b.c).a = a.b.c [serial 1247]
 


Theorem (505)                               [serial 1243] 
P [754] <<(EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] )) and (The_Event_Log = log)@now>>
S [754] ->
Q [754] <<(The_Event_Log = EVENT_LOG)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 504:
Theorem (504) [serial 1247] used for:
    normalization of [serial 1243]
 


Theorem (506)                               [serial 1240] 
P [753] <<EVENT_LOG = log and (all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] )>>
S [754] The_Event_Log!(log)
Q [755] <<all k:integer
  in 1..event_count 
  are EVENT_RECORD = log[k] >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 500 505:
Theorem (500) [serial 1242] used for:
  applied port output <<pre and (The_Event_Log=log)@now>> -> <<post>> [serial 1240]
 
Theorem (505) [serial 1243] used for:
  applied port output <<pre and (The_Event_Log=log)@now>> -> <<(The_Event_Log=EVENT_LOG)@now>> [serial 1240]
 


Theorem (507)                               [serial 1238] 
P [753] <<(log = EVENT_LOG) and (all k:integer
  in 1..event_count 
  are log[k] = EVENT_RECORD )>>
S [754] The_Event_Log!(log)
Q [755] <<(all k:integer
  in 1..event_count 
  are log[k] = EVENT_RECORD )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 506:
Theorem (506) [serial 1240] used for:
    normalization of [serial 1238]
 


Theorem (508)                               [serial 1235] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<ELT(event_count)>>
by Substitution of Assertion Labels
and theorem 507:
Theorem (507) [serial 1238] used for:
  substituted Assertions' predicates for  labels  [serial 1235]
 


Theorem (509)                               [serial 1230] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<(ELT(event_count))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 508:
Theorem (508) [serial 1235] used for:
    normalization of [serial 1230]
 


Theorem (510)                               [serial 1226] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<ELT(event_count) and true>>
by Law of And-Simplification:  P and true is P
and theorem 509:
Theorem (509) [serial 1230] used for:
  Law of And-Simplification:  P and true is P [serial 1226]
 


Theorem (511)                               [serial 1221] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<true and ELT(event_count)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 510:
Theorem (510) [serial 1226] used for:
    normalization of [serial 1221]
 


Theorem (512)                               [serial 1219] 
P [753] <<AXIOM_LOG() and ELT(event_count)>>
S [754] The_Event_Log!(log)
Q [755] <<AXIOM_LOG() and ELT(event_count)>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 511 511:
Theorem (511) [serial 1221] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (511) [serial 1221] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (513)                               [serial 1039] 
P [752] <<(ELT(event_count)) and Get_Event_Log@now and not (exists u:time
  in tops,,now 
  that EVENT_RECORD@u ) and not (exists u:time
  in tops,,now 
  that Get_Event_Log@u )>>
S [753] <<AXIOM_LOG() and ELT(event_count)>>
The_Event_Log!(log)
<<AXIOM_LOG() and ELT(event_count)>>
Q [739] <<ELT(event_count)>>
by Introduction of Existential Quantification (bl.aab)
and theorems 482 483 512:
Theorem (482) [serial 1217] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1039]
 
Theorem (483) [serial 1218] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1039]
 
Theorem (512) [serial 1219] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1039]
 


Theorem (514)                               [serial 1034] 
P [729] << >>
S [732] ->
Q [729] <<event_logger_thread.imp proof obligations>>
by Initial Thread Obligations
and theorems 450 451 452 473 513:
Theorem (450) [serial 1035] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (451) [serial 1036] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (452) [serial 1037] used for:
   <<M(start)>> -> <<M(run)>> for elt0:start-[ ]->run{};
 
Theorem (473) [serial 1038] used for:
   <<M(run) and x>> A <<M(run)>> for elt1:run-[x]->run{A};
 
Theorem (513) [serial 1039] used for:
   <<M(run) and x>> A <<M(run)>> for elt2:run-[x]->run{A};
 


Theorem (515)                               [serial 1041] 
P [632] <<LPB()>>
S [623] ->
Q [623] <<LPB()>>
by Identity (id):  P->P is tautology


Theorem (516)                               [serial 1042] 
P [630] <<last_patient_bolus = 0 and now = 0 and LPB()>>
S [630] ->
Q [630] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (517)                               [serial 2876] 
P [634] <<Patient_Button_Request@now and LPB()>>
S [634] ->
Q [634] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (518)                               [serial 2875] 
P [634] <<Patient_Button_Request@now and LPB()>>
S [634] ->
Q [634] <<(not (last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now))) or last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
by Law of Excluded Middle: P or not P is tautology
and theorem 517:
Theorem (517) [serial 2876] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2875]
 


Theorem (519)                               [serial 2873] 
P [634] <<Patient_Button_Request@now and LPB()>>
S [634] ->
Q [634] <<(now-MINIMUM_TIME_BETWEEN_BOLUS@now) <= last_patient_bolus or last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 518:
Theorem (518) [serial 2875] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2873]
 


Theorem (520)                               [serial 1043] 
P [634] <<LPB() and Patient_Button_Request@now>>
S [634] ->
Q [634] <<((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) > last_patient_bolus) or ((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) <= last_patient_bolus)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 519:
Theorem (519) [serial 2873] used for:
    normalization of [serial 1043]
 


Theorem (521)                               [serial 1044] 
P [630] <<last_patient_bolus = 0 and now = 0 and LPB()>>
S [637] ->
Q [632] <<LPB()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (522)                               [serial 2878] 
P [638] <<Patient_Button_Request@now and LPB() and not (exists u:time
  in tops,,now 
  that Patient_Button_Request@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [638] ->
Q [634] <<Patient_Button_Request@now and LPB()>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (523)                               [serial 1045] 
P [638] <<(LPB()) and Patient_Button_Request@now and not (exists u:time
  in tops,,now 
  that Patient_Button_Request@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [638] ->
Q [634] <<LPB() and Patient_Button_Request@now>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 522:
Theorem (522) [serial 2878] used for:
    normalization of [serial 1045]
 


Theorem (524)                               [serial 2891] 
P [634] <<Patient_Button_Request@now and LPB() and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
S [634] ->
Q [640] <<Patient_Button_Request@now and LPB() and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
by Identity (id):  P->P is tautology


Theorem (525)                               [serial 2880] 
P [634] <<LPB() and Patient_Button_Request@now and ((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) > last_patient_bolus)>>
S [634] ->
Q [640] <<LPB() and Patient_Button_Request@now and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) > last_patient_bolus>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 524:
Theorem (524) [serial 2891] used for:
    normalization of [serial 2880]
 


Theorem (526)                               [serial 2921] 
P [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
S [632] ->
Q [632] <<Patient_Request_Not_Too_Soon@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (527)                               [serial 2918] 
P [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
S [632] ->
Q [632] <<(Patient_Request_Not_Too_Soon@now)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 526:
Theorem (526) [serial 2921] used for:
    normalization of [serial 2918]
 


Theorem (528)                               [serial 2916] 
P [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
S [632] ->
Q [632] <<Patient_Request_Not_Too_Soon@now and true>>
by Law of And-Simplification:  P and true is P
and theorem 527:
Theorem (527) [serial 2918] used for:
  Law of And-Simplification:  P and true is P [serial 2916]
 


Theorem (529)                               [serial 2913] 
P [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
S [632] ->
Q [632] <<Patient_Request_Not_Too_Soon@now and not (false)>>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 528:
Theorem (528) [serial 2916] used for:
    normalization of [serial 2913]
 


Theorem (530)                               [serial 2912] 
P [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
S [632] ->
Q [632] <<Patient_Request_Not_Too_Soon@now and not (exists t:time
  in now,,now 
  that Patient_Request_Not_Too_Soon@t )>>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 529:
Theorem (529) [serial 2913] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2912]
 


Theorem (531)                               [serial 2907] 
P [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
S [632] ->
Q [632] <<Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t )>>
by Guided Substitution of Equals
and theorem 530:
Theorem (530) [serial 2912] used for:
  Guided Substitution of Equals
 replacing "last_patient_bolus" with its = "now" in its postcondition [serial 2907]
 


Theorem (532)                               [serial 2903] 
P [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
S [632] ->
Q [632] <<(Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 531:
Theorem (531) [serial 2907] used for:
    normalization of [serial 2903]
 


Theorem (533)                               [serial 2881] 
P [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
S [632] ->
Q [632] <<LPB()>>
by Substitution of Assertion Labels
and theorem 532:
Theorem (532) [serial 2903] used for:
  substituted Assertions' predicates for  labels  [serial 2881]
 


Theorem (534)                               [serial 2923] 
P [640] <<Patient_Button_Request@now and Patient_Request_Not_Too_Soon@last_patient_bolus and 
not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
S [642] ->
Q [120] <<Patient_Button_Request@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (535)                               [serial 2926] 
P [640] <<Patient_Request_Not_Too_Soon@last_patient_bolus and Patient_Button_Request and 
not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS)>>
S [642] ->
Q [120] <<not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t )>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (536)                               [serial 2925] 
P [640] <<Patient_Request_Not_Too_Soon@last_patient_bolus and Patient_Button_Request and 
not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS)>>
S [642] ->
Q [120] <<not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t )>>
by Extend Existential Quantification Range:  
and theorem 535:
Theorem (535) [serial 2926] used for:
  Extend Existential Quantification Range:   [serial 2925]
 


Theorem (537)                               [serial 2924] 
P [640] <<Patient_Button_Request@now and Patient_Request_Not_Too_Soon@last_patient_bolus and 
not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
S [642] ->
Q [120] <<not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t )>>
by Assume Present:  P = P@now = P^0 
and theorem 536:
Theorem (536) [serial 2925] used for:
  Assume Present:  P = P@now = P^0  [serial 2924]
 


Theorem (538)                               [serial 2909] 
P [640] <<Patient_Button_Request@now and Patient_Request_Not_Too_Soon@last_patient_bolus and 
not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
S [642] ->
Q [615] <<Patient_Button_Request@now and not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t )>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 534 537:
Theorem (534) [serial 2923] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2909]
 
Theorem (537) [serial 2924] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2909]
 


Theorem (539)                               [serial 2905] 
P [640] <<Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and Patient_Button_Request@now and 
last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
S [642] ->
Q [615] <<(Patient_Button_Request@now and not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t ))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 538:
Theorem (538) [serial 2909] used for:
    normalization of [serial 2905]
 


Theorem (540)                               [serial 2904] 
P [640] <<Patient_Button_Request@now and (Patient_Request_Not_Too_Soon@last_patient_bolus and 
not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t )) and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
S [642] ->
Q [615] <<(Patient_Button_Request@now and not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t ))>>
by Associativity: (b.c).a = a.b.c
and theorem 539:
Theorem (539) [serial 2905] used for:
  Associativity: (b.c).a = a.b.c [serial 2904]
 


Theorem (541)                               [serial 2894] 
P [640] <<Patient_Button_Request@now and LPB() and last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
S [642] ->
Q [615] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Substitution of Assertion Labels
and theorem 540:
Theorem (540) [serial 2904] used for:
  substituted Assertions' predicates for  labels  [serial 2894]
 


Theorem (542)                               [serial 2884] 
P [640] <<LPB() and Patient_Button_Request@now and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) > last_patient_bolus>>
S [642] ->
Q [615] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 541:
Theorem (541) [serial 2894] used for:
    normalization of [serial 2884]
 


Theorem (543)                               [serial 2896] 
P [642] <<Patient_Button_Request@now and Patient_Request_Not_Too_Soon@now and LPB() and 
last_patient_bolus < (now-MINIMUM_TIME_BETWEEN_BOLUS@now)>>
S [642] ->
Q [643] <<Patient_Request_Not_Too_Soon@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (544)                               [serial 2887] 
P [642] <<LPB() and Patient_Button_Request@now and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) > last_patient_bolus and 
Patient_Request_Not_Too_Soon@now>>
S [642] ->
Q [643] <<Patient_Request_Not_Too_Soon@now>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 543:
Theorem (543) [serial 2896] used for:
    normalization of [serial 2887]
 


Theorem (545)                               [serial 2885] 
P [642] <<(LPB() and Patient_Button_Request@now and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) > last_patient_bolus) and 
Patient_Request_Not_Too_Soon@now>>
S [642] ->
Q [643] <<Patient_Request_Not_Too_Soon@now>>
by Associativity: (b.c).a = a.b.c
and theorem 544:
Theorem (544) [serial 2887] used for:
  Associativity: (b.c).a = a.b.c [serial 2885]
 


Theorem (546)                               [serial 2882] 
P [640] <<LPB() and Patient_Button_Request@now and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) > last_patient_bolus>>
S [642] Patient_Request_Not_Too_Soon!
Q [643] <<Patient_Request_Not_Too_Soon@now>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 542 545:
Theorem (542) [serial 2884] used for:
  applied port output <<pre>> -> <<M(Patient_Request_Not_Too_Soon)>> [serial 2882]
 
Theorem (545) [serial 2885] used for:
  applied port output <<pre and Patient_Request_Not_Too_Soon@now>> -> <<post>> [serial 2882]
 


Theorem (547)                               [serial 2898] 
P [643] <<Patient_Request_Not_Too_Soon@now>>
S [644] ->
Q [645] <<Patient_Request_Not_Too_Soon@now>>
by Identity (id):  P->P is tautology


Theorem (548)                               [serial 2889] 
P [643] <<Patient_Request_Not_Too_Soon@now>>
S [644] ->
Q [645] <<(Patient_Request_Not_Too_Soon@now)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 547:
Theorem (547) [serial 2898] used for:
    normalization of [serial 2889]
 


Theorem (549)                               [serial 2888] 
P [643] <<Patient_Request_Not_Too_Soon@now>>
S [644] ->
Q [645] <<Patient_Request_Not_Too_Soon@now and true>>
by Law of And-Simplification:  P and true is P
and theorem 548:
Theorem (548) [serial 2889] used for:
  Law of And-Simplification:  P and true is P [serial 2888]
 


Theorem (550)                               [serial 2886] 
P [643] <<Patient_Request_Not_Too_Soon@now>>
S [644] ->
Q [645] <<Patient_Request_Not_Too_Soon@now and now = now>>
by Equality Law (idistr):  a=a <-> true
and theorem 549:
Theorem (549) [serial 2888] used for:
  Equality Law (idistr):  a=a <-> true [serial 2886]
 


Theorem (551)                               [serial 2883] 
P [643] <<Patient_Request_Not_Too_Soon@now>>
S [644] last_patient_bolus := now
Q [645] <<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 550:
Theorem (550) [serial 2886] used for:
  applied wp for assignment [serial 2883]
 


Theorem (552)                               [serial 1046] 
P [634] <<LPB() and Patient_Button_Request@now and ((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) > last_patient_bolus)>>
S [640] <<LPB() and Patient_Button_Request@now and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) > last_patient_bolus>>
Patient_Request_Not_Too_Soon!
;
<<Patient_Request_Not_Too_Soon@now>>
last_patient_bolus := now
<<Patient_Request_Not_Too_Soon@now and last_patient_bolus = now>>
Q [632] <<LPB()>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 525 533 546 551:
Theorem (525) [serial 2880] used for:
  P -> P1 in sequential composition for [serial 1046]
 
Theorem (533) [serial 2881] used for:
  Q1 -> Q in sequential composition for [serial 1046]
 
Theorem (546) [serial 2882] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1046]
 
Theorem (551) [serial 2883] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1046]
 


Theorem (553)                               [serial 2938] 
P [634] <<(now-MINIMUM_TIME_BETWEEN_BOLUS) <= last_patient_bolus and Patient_Request_Not_Too_Soon@last_patient_bolus and 
Patient_Button_Request and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t )>>
S [647] ->
Q [126] <<(now-MINIMUM_TIME_BETWEEN_BOLUS) <= last_patient_bolus>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (554)                               [serial 2935] 
P [634] <<Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) <= last_patient_bolus and 
Patient_Button_Request@now>>
S [647] ->
Q [126] <<(now-MINIMUM_TIME_BETWEEN_BOLUS) <= last_patient_bolus>>
by Assume Present:  P = P@now = P^0 
and theorem 553:
Theorem (553) [serial 2938] used for:
  Assume Present:  P = P@now = P^0  [serial 2935]
 


Theorem (555)                               [serial 2936] 
P [634] <<Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) <= last_patient_bolus and 
Patient_Button_Request@now>>
S [647] ->
Q [125] <<Patient_Button_Request@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (556)                               [serial 2937] 
P [634] <<Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) <= last_patient_bolus and 
Patient_Button_Request@now>>
S [647] ->
Q [125] <<Patient_Request_Not_Too_Soon@last_patient_bolus>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (557)                               [serial 2934] 
P [634] <<Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ) and (now-MINIMUM_TIME_BETWEEN_BOLUS@now) <= last_patient_bolus and 
Patient_Button_Request@now>>
S [647] ->
Q [617] <<(now-MINIMUM_TIME_BETWEEN_BOLUS) <= last_patient_bolus and Patient_Button_Request@now and 
Patient_Request_Not_Too_Soon@last_patient_bolus>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 554 555 556:
Theorem (554) [serial 2935] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2934]
 
Theorem (555) [serial 2936] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2934]
 
Theorem (556) [serial 2937] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2934]
 


Theorem (558)                               [serial 2932] 
P [634] <<(now-MINIMUM_TIME_BETWEEN_BOLUS@now) <= last_patient_bolus and Patient_Button_Request@now and 
(Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t ))>>
S [647] ->
Q [617] <<(now-MINIMUM_TIME_BETWEEN_BOLUS) <= last_patient_bolus and Patient_Button_Request@now and 
Patient_Request_Not_Too_Soon@last_patient_bolus>>
by Associativity: (b.c).a = a.b.c
and theorem 557:
Theorem (557) [serial 2934] used for:
  Associativity: (b.c).a = a.b.c [serial 2932]
 


Theorem (559)                               [serial 2930] 
P [634] <<(Patient_Request_Not_Too_Soon@last_patient_bolus and not (exists t:time
  in last_patient_bolus,,now 
  that Patient_Request_Not_Too_Soon@t )) and Patient_Button_Request@now and 
((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) <= last_patient_bolus)>>
S [647] ->
Q [617] <<(Patient_Button_Request@now and Patient_Request_Not_Too_Soon@last_patient_bolus and 
(now-MINIMUM_TIME_BETWEEN_BOLUS) <= last_patient_bolus)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 558:
Theorem (558) [serial 2932] used for:
    normalization of [serial 2930]
 


Theorem (560)                               [serial 2927] 
P [634] <<LPB() and Patient_Button_Request@now and ((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) <= last_patient_bolus)>>
S [647] ->
Q [617] <<PATIENT_REQUEST_TOO_SOON(now)>>
by Substitution of Assertion Labels
and theorem 559:
Theorem (559) [serial 2930] used for:
  substituted Assertions' predicates for  labels  [serial 2927]
 


Theorem (561)                               [serial 2929] 
P [647] <<LPB() and Patient_Button_Request@now and ((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) <= last_patient_bolus) and 
Patient_Request_Too_Soon@now>>
S [647] ->
Q [632] <<LPB()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (562)                               [serial 2928] 
P [647] <<(LPB() and Patient_Button_Request@now and ((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) <= last_patient_bolus)) and 
Patient_Request_Too_Soon@now>>
S [647] ->
Q [632] <<LPB()>>
by Associativity: (b.c).a = a.b.c
and theorem 561:
Theorem (561) [serial 2929] used for:
  Associativity: (b.c).a = a.b.c [serial 2928]
 


Theorem (563)                               [serial 1047] 
P [634] <<LPB() and Patient_Button_Request@now and ((now-(MINIMUM_TIME_BETWEEN_BOLUS)@now) <= last_patient_bolus)>>
S [647] Patient_Request_Too_Soon!
Q [632] <<LPB()>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 560 562:
Theorem (560) [serial 2927] used for:
  applied port output <<pre>> -> <<M(Patient_Request_Too_Soon)>> [serial 1047]
 
Theorem (562) [serial 2928] used for:
  applied port output <<pre and Patient_Request_Too_Soon@now>> -> <<post>> [serial 1047]
 


Theorem (564)                               [serial 1048] 
P [648] <<(LPB()) and stop@now and not (exists u:time
  in tops,,now 
  that Patient_Button_Request@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [648] ->
Q [635] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (565)                               [serial 1040] 
P [623] << >>
S [623] ->
Q [623] <<Patient_Bolus_Checker.imp proof obligations>>
by Initial Thread Obligations
and theorems 515 516 520 521 523 552 563 564:
Theorem (515) [serial 1041] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (516) [serial 1042] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (520) [serial 1043] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_last_bolus_time, <<M(check_last_bolus_time)>> -> <<e1 or e2 or . . . en>>
 
Theorem (521) [serial 1044] used for:
   <<M(start)>> -> <<M(run)>> for go:start-[ ]->run{};
 
Theorem (523) [serial 1045] used for:
   <<M(run) and x>> -> <<M(check_last_bolus_time)>> for button:run-[x]->check_last_bolus_time{};
 
Theorem (552) [serial 1046] used for:
   <<M(check_last_bolus_time) and x>> A <<M(run)>> for nottoosoon:check_last_bolus_time-[x]->run{A};
 
Theorem (563) [serial 1047] used for:
   <<M(check_last_bolus_time) and x>> A <<M(run)>> for toosoon:check_last_bolus_time-[x]->run{A};
 
Theorem (564) [serial 1048] used for:
   <<M(run) and x>> -> <<M(done)>> for quit:run-[x]->done{};
 


Theorem (566)                               [serial 1050] 
P [452] <<SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
S [436] ->
Q [436] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (567)                               [serial 1051] 
P [455] <<NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or HARD_LIMIT_VIOLATED() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
S [436] ->
Q [436] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (568)                               [serial 1052] 
P [442] <<true>>
S [436] ->
Q [436] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (569)                               [serial 1053] 
P [443] <<true>>
S [436] ->
Q [436] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (570)                               [serial 1054] 
P [450] <<Rx_APPROVED()>>
S [436] ->
Q [436] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (571)                               [serial 1685] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
S [448] ->
Q [448] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (572)                               [serial 1055] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
S [448] ->
Q [448] <<((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)) or 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))>>
by Law of Excluded Middle: P or not P is tautology
and theorem 571:
Theorem (571) [serial 1685] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1055]
 


Theorem (573)                               [serial 1056] 
P [441] <<true>>
S [441] ->
Q [441] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (574)                               [serial 1693] 
P [446] <<Rx_VALID()>>
S [446] ->
Q [446] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (575)                               [serial 1691] 
P [446] <<Rx_VALID()>>
S [446] ->
Q [446] <<not (not myDrugRecord.basal_rate_upper_hard < myRx.basal_flow_rate and 
not myDrugRecord.vtbi_upper_hard < myRx.vtbi and not myRx.basal_flow_rate < myDrugRecord.basal_rate_lower_hard and 
not myRx.vtbi < myDrugRecord.vtbi_lower_hard) or (not myDrugRecord.basal_rate_upper_hard < myRx.basal_flow_rate and 
not myDrugRecord.vtbi_upper_hard < myRx.vtbi and not myRx.basal_flow_rate < myDrugRecord.basal_rate_lower_hard and 
not myRx.vtbi < myDrugRecord.vtbi_lower_hard)>>
by Law of Excluded Middle: P or not P is tautology
and theorem 574:
Theorem (574) [serial 1693] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1691]
 


Theorem (576)                               [serial 1689] 
P [446] <<Rx_VALID()>>
S [446] ->
Q [446] <<not ((not (myRx.basal_flow_rate < myDrugRecord.basal_rate_lower_hard)) and 
(not (myRx.vtbi < myDrugRecord.vtbi_lower_hard)) and (not (myDrugRecord.basal_rate_upper_hard < myRx.basal_flow_rate)) and 
(not (myDrugRecord.vtbi_upper_hard < myRx.vtbi))) or ((not (myRx.basal_flow_rate < myDrugRecord.basal_rate_lower_hard)) and 
(not (myRx.vtbi < myDrugRecord.vtbi_lower_hard)) and (not (myDrugRecord.basal_rate_upper_hard < myRx.basal_flow_rate)) and 
(not (myDrugRecord.vtbi_upper_hard < myRx.vtbi)))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 575:
Theorem (575) [serial 1691] used for:
    normalization of [serial 1689]
 


Theorem (577)                               [serial 1687] 
P [446] <<Rx_VALID()>>
S [446] ->
Q [446] <<not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) or 
(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 576:
Theorem (576) [serial 1689] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1687]
 


Theorem (578)                               [serial 1057] 
P [446] <<Rx_VALID()>>
S [446] ->
Q [446] <<((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)) or 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 577:
Theorem (577) [serial 1687] used for:
    normalization of [serial 1057]
 


Theorem (579)                               [serial 1694] 
P [444] <<true>>
S [444] ->
Q [444] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (580)                               [serial 1058] 
P [444] <<true>>
S [444] ->
Q [444] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) or (not ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)))>>
by Law of Excluded Middle: P or not P is tautology
and theorem 579:
Theorem (579) [serial 1694] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1058]
 


Theorem (581)                               [serial 1059] 
P [441] <<true>>
S [460] ->
Q [442] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (582)                               [serial 1697] 
P [463] <<((true) and Check_Rx@now and not (exists u:time
  in tops,,now 
  that Check_Rx@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and myRx = Prescription>>
S [463] ->
Q [463] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (583)                               [serial 1695] 
P [461] <<(true) and Check_Rx@now and not (exists u:time
  in tops,,now 
  that Check_Rx@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [463] Prescription?(myRx)
Q [463] <<true>>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 582:
Theorem (582) [serial 1697] used for:
  applied port input of value <<pre and myRx=M(Prescription)>> -> <<post>> [serial 1695]
 


Theorem (584)                               [serial 1698] 
P [464] <<(true) and (Get_Drug_Record = (myRx.code))@now>>
S [464] ->
Q [443] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (585)                               [serial 1699] 
P [464] <<(true) and (Get_Drug_Record = (myRx.code))@now>>
S [464] ->
Q [464] <<(Get_Drug_Record = (myRx.code))@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (586)                               [serial 1696] 
P [463] <<true>>
S [464] Get_Drug_Record!(myRx.code)
Q [443] <<true>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 584 585:
Theorem (584) [serial 1698] used for:
  applied port output <<pre and (Get_Drug_Record=myRx.code)@now>> -> <<post>> [serial 1696]
 
Theorem (585) [serial 1699] used for:
  applied port output <<pre and (Get_Drug_Record=myRx.code)@now>> -> <<(Get_Drug_Record=myRx.code)@now>> [serial 1696]
 


Theorem (587)                               [serial 1060] 
P [461] <<(true) and Check_Rx@now and not (exists u:time
  in tops,,now 
  that Check_Rx@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [463] Prescription?(myRx)
;
Get_Drug_Record!(myRx.code)
Q [443] <<true>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 583 586:
Theorem (583) [serial 1695] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1060]
 
Theorem (586) [serial 1696] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1060]
 


Theorem (588)                               [serial 1700] 
P [469] <<myDrugRecord = DRUG_LIBRARY[myRx.code]>>
S [444] ->
Q [444] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (589)                               [serial 1702] 
P [468] <<((true) and (DRUG_LIBRARY[myRx.code])@now and not (exists u:time
  in tops,,now 
  that (DRUG_LIBRARY[myRx.code])@u ) and not (exists u:time
  in tops,,now 
  that (NDF(#PCA_Properties::Drug_Library_Size))@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and myDrugRecord = DRUG_LIBRARY[myRx.code]>>
S [468] ->
Q [469] <<myDrugRecord = DRUG_LIBRARY[myRx.code]>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (590)                               [serial 1701] 
P [466] <<(true) and (DRUG_LIBRARY[myRx.code])@now and not (exists u:time
  in tops,,now 
  that (DRUG_LIBRARY[myRx.code])@u ) and not (exists u:time
  in tops,,now 
  that (NDF(#PCA_Properties::Drug_Library_Size))@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [468] The_Drug_Record?(myDrugRecord)
Q [469] <<myDrugRecord = DRUG_LIBRARY[myRx.code]>>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 589:
Theorem (589) [serial 1702] used for:
  applied port input of value <<pre and myDrugRecord=M(The_Drug_Record)>> -> <<post>> [serial 1701]
 


Theorem (591)                               [serial 1061] 
P [466] <<(true) and (DRUG_LIBRARY[myRx.code])@now and not (exists u:time
  in tops,,now 
  that (DRUG_LIBRARY[myRx.code])@u ) and not (exists u:time
  in tops,,now 
  that (NDF(#PCA_Properties::Drug_Library_Size))@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [468] The_Drug_Record?(myDrugRecord)
<<myDrugRecord = DRUG_LIBRARY[myRx.code]>>
Q [444] <<true>>
by Introduction of Existential Quantification (bl.aapost)
and theorems 588 590:
Theorem (588) [serial 1700] used for:
  as <<post>> -> <<Q>> in <<P>> {  S <<post>> } <<Q>> [serial 1061]
 
Theorem (590) [serial 1701] used for:
  as <<P>> S <<post>> in <<P>> {  S <<post>> } <<Q>> [serial 1061]
 


Theorem (592)                               [serial 1704] 
P [471] <<NDF(#PCA_Properties::Drug_Library_Size) and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY[myRx.code]@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (NDF(#PCA_Properties::Drug_Library_Size))@u )>>
S [471] ->
Q [455] <<HARD_LIMIT_VIOLATED() or NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (593)                               [serial 1703] 
P [471] <<NDF(#PCA_Properties::Drug_Library_Size) and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY[myRx.code]@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (NDF(#PCA_Properties::Drug_Library_Size))@u ) and true>>
S [471] ->
Q [455] <<HARD_LIMIT_VIOLATED() or NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Law of And-Simplification:  P and true is P
and theorem 592:
Theorem (592) [serial 1704] used for:
  Law of And-Simplification:  P and true is P [serial 1703]
 


Theorem (594)                               [serial 1062] 
P [471] <<(true) and (NDF(#PCA_Properties::Drug_Library_Size))@now and not (exists u:time
  in tops,,now 
  that (DRUG_LIBRARY[myRx.code])@u ) and not (exists u:time
  in tops,,now 
  that (NDF(#PCA_Properties::Drug_Library_Size))@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [471] ->
Q [455] <<NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or HARD_LIMIT_VIOLATED() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Assume Present:  P = P@now = P^0 
and theorem 593:
Theorem (593) [serial 1703] used for:
  Assume Present:  P = P@now = P^0  [serial 1062]
 


Theorem (595)                               [serial 1708] 
P [473] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [472] ->
Q [446] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
by Identity (id):  P->P is tautology


Theorem (596)                               [serial 1706] 
P [473] <<(myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)>>
S [472] ->
Q [446] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 595:
Theorem (595) [serial 1708] used for:
    normalization of [serial 1706]
 


Theorem (597)                               [serial 1063] 
P [473] <<(myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)>>
S [472] ->
Q [446] <<Rx_VALID()>>
by Substitution of Assertion Labels
and theorem 596:
Theorem (596) [serial 1706] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1063]
 


Theorem (598)                               [serial 1712] 
P [477] <<not (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [477] ->
Q [455] <<not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) or 
not (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) or not (exists j:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that DRUG_CODE = DRUG_LIBRARY[j].code ) or (not CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (599)                               [serial 1710] 
P [477] <<not ((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
S [477] ->
Q [455] <<(not (exists j:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that (DRUG_LIBRARY[j].code = DRUG_CODE) )) or not ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) or 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) or 
((not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 598:
Theorem (598) [serial 1712] used for:
    normalization of [serial 1710]
 


Theorem (600)                               [serial 1064] 
P [477] <<not ((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
S [477] ->
Q [455] <<NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or HARD_LIMIT_VIOLATED() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Substitution of Assertion Labels
and theorem 599:
Theorem (599) [serial 1710] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1064]
 


Theorem (601)                               [serial 1720] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<Rx_VALID()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (602)                               [serial 1724] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (603)                               [serial 1722] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 602:
Theorem (602) [serial 1724] used for:
    normalization of [serial 1722]
 


Theorem (604)                               [serial 1721] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 603:
Theorem (603) [serial 1722] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1721]
 


Theorem (605)                               [serial 1719] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED()>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 601 604:
Theorem (601) [serial 1720] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1719]
 
Theorem (604) [serial 1721] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1719]
 


Theorem (606)                               [serial 1718] 
P [446] <<Rx_VALID() and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED()>>
by Associativity: (b.c).a = a.b.c
and theorem 605:
Theorem (605) [serial 1719] used for:
  Associativity: (b.c).a = a.b.c [serial 1718]
 


Theorem (607)                               [serial 1716] 
P [446] <<Rx_VALID() and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and true>>
by Law of And-Simplification:  P and true is P
and theorem 606:
Theorem (606) [serial 1718] used for:
  Law of And-Simplification:  P and true is P [serial 1716]
 


Theorem (608)                               [serial 1714] 
P [446] <<(Rx_VALID()) and ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and true>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 607:
Theorem (607) [serial 1716] used for:
    normalization of [serial 1714]
 


Theorem (609)                               [serial 1720] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<Rx_VALID()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (610)                               [serial 1724] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (611)                               [serial 1722] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 610:
Theorem (610) [serial 1724] used for:
    normalization of [serial 1722]
 


Theorem (612)                               [serial 1721] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 611:
Theorem (611) [serial 1722] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1721]
 


Theorem (613)                               [serial 1719] 
P [446] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
Rx_VALID()>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED()>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 609 612:
Theorem (609) [serial 1720] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1719]
 
Theorem (612) [serial 1721] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1719]
 


Theorem (614)                               [serial 1718] 
P [446] <<Rx_VALID() and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED()>>
by Associativity: (b.c).a = a.b.c
and theorem 613:
Theorem (613) [serial 1719] used for:
  Associativity: (b.c).a = a.b.c [serial 1718]
 


Theorem (615)                               [serial 1716] 
P [446] <<Rx_VALID() and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and true>>
by Law of And-Simplification:  P and true is P
and theorem 614:
Theorem (614) [serial 1718] used for:
  Law of And-Simplification:  P and true is P [serial 1716]
 


Theorem (616)                               [serial 1714] 
P [446] <<(Rx_VALID()) and ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and true>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 615:
Theorem (615) [serial 1716] used for:
    normalization of [serial 1714]
 


Theorem (617)                               [serial 1065] 
P [446] <<(Rx_VALID()) and ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))>>
S [483] ->
Q [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 616 616:
Theorem (616) [serial 1714] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (616) [serial 1714] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (618)                               [serial 1743] 
P [446] <<Rx_VALID() and not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [495] ->
Q [375] <<not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (619)                               [serial 1740] 
P [446] <<Rx_VALID() and not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [495] ->
Q [375] <<(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 618:
Theorem (618) [serial 1743] used for:
    normalization of [serial 1740]
 


Theorem (620)                               [serial 1730] 
P [446] <<Rx_VALID() and not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [495] ->
Q [375] <<HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 619:
Theorem (619) [serial 1740] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1730]
 


Theorem (621)                               [serial 1727] 
P [446] <<(Rx_VALID()) and (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
S [495] ->
Q [375] <<HARD_LIMIT_VIOLATED()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 620:
Theorem (620) [serial 1730] used for:
    normalization of [serial 1727]
 


Theorem (622)                               [serial 1745] 
P [495] <<Hard_Limit_Violated@now and Rx_VALID() and not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [495] ->
Q [455] <<not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) or 
not (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) or not (exists j:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that DRUG_CODE = DRUG_LIBRARY[j].code ) or (not CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (623)                               [serial 1741] 
P [495] <<Hard_Limit_Violated@now and Rx_VALID() and not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [495] ->
Q [455] <<(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) or 
(not (exists j:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that (DRUG_LIBRARY[j].code = DRUG_CODE) )) or not ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) or 
((not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 622:
Theorem (622) [serial 1745] used for:
    normalization of [serial 1741]
 


Theorem (624)                               [serial 1738] 
P [495] <<Hard_Limit_Violated@now and Rx_VALID() and not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard)>>
S [495] ->
Q [455] <<HARD_LIMIT_VIOLATED() or NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Substitution of Assertion Labels
and theorem 623:
Theorem (623) [serial 1741] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1738]
 


Theorem (625)                               [serial 1735] 
P [495] <<Rx_VALID() and not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and Hard_Limit_Violated@now>>
S [495] ->
Q [455] <<HARD_LIMIT_VIOLATED() or NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 624:
Theorem (624) [serial 1738] used for:
    normalization of [serial 1735]
 


Theorem (626)                               [serial 1732] 
P [495] <<Hard_Limit_Violated@now and (Rx_VALID() and not (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard))>>
S [495] ->
Q [455] <<HARD_LIMIT_VIOLATED() or NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Associativity: (b.c).a = a.b.c
and theorem 625:
Theorem (625) [serial 1735] used for:
  Associativity: (b.c).a = a.b.c [serial 1732]
 


Theorem (627)                               [serial 1728] 
P [495] <<((Rx_VALID()) and (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))) and Hard_Limit_Violated@now>>
S [495] ->
Q [455] <<NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or HARD_LIMIT_VIOLATED() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 626:
Theorem (626) [serial 1732] used for:
    normalization of [serial 1728]
 


Theorem (628)                               [serial 1726] 
P [446] <<(Rx_VALID()) and (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
S [495] Hard_Limit_Violated!
Q [455] <<NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or HARD_LIMIT_VIOLATED() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 621 627:
Theorem (621) [serial 1727] used for:
  applied port output <<pre>> -> <<M(Hard_Limit_Violated)>> [serial 1726]
 
Theorem (627) [serial 1728] used for:
  applied port output <<pre and Hard_Limit_Violated@now>> -> <<post>> [serial 1726]
 


Theorem (629)                               [serial 1066] 
P [446] <<(Rx_VALID()) and (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
S [495] Hard_Limit_Violated!
Q [455] <<NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or HARD_LIMIT_VIOLATED() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)>>
by Introduction of Existential Quantification (bl.aanone)
and theorem 628:
Theorem (628) [serial 1726] used for:
  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 1066]
 


Theorem (630)                               [serial 1969] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [4] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (631)                               [serial 1970] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [4] <<myDrugRecord.vtbi_lower_hard <= myRx.vtbi>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (632)                               [serial 1971] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [423] <<myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (633)                               [serial 1972] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [421] <<myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (634)                               [serial 1973] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [416] <<myDrugRecord.code = myRx.code>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (635)                               [serial 1974] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [418] <<myDrugRecord.concentration = myRx.concentration>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (636)                               [serial 1975] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [417] <<myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (637)                               [serial 2026] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (638)                               [serial 1976] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 637:
Theorem (637) [serial 2026] used for:
    normalization of [serial 1976]
 


Theorem (639)                               [serial 1961] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [339] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 630 631 632 633 634 635 636 638:
Theorem (630) [serial 1969] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1961]
 
Theorem (631) [serial 1970] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1961]
 
Theorem (632) [serial 1971] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1961]
 
Theorem (633) [serial 1972] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1961]
 
Theorem (634) [serial 1973] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1961]
 
Theorem (635) [serial 1974] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1961]
 
Theorem (636) [serial 1975] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1961]
 
Theorem (638) [serial 1976] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1961]
 


Theorem (640)                               [serial 1941] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [339] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Associativity: (b.c).a = a.b.c
and theorem 639:
Theorem (639) [serial 1961] used for:
  Associativity: (b.c).a = a.b.c [serial 1941]
 


Theorem (641)                               [serial 1933] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [339] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 640:
Theorem (640) [serial 1941] used for:
    normalization of [serial 1933]
 


Theorem (642)                               [serial 1865] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [339] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Substitution of Assertion Labels
and theorem 641:
Theorem (641) [serial 1933] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1865]
 


Theorem (643)                               [serial 1850] 
P [448] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [502] ->
Q [339] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 642:
Theorem (642) [serial 1865] used for:
    normalization of [serial 1850]
 


Theorem (644)                               [serial 1826] 
P [448] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [502] ->
Q [339] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 643:
Theorem (643) [serial 1850] used for:
  Associativity: (b.c).a = a.b.c [serial 1826]
 


Theorem (645)                               [serial 1802] 
P [448] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
S [502] ->
Q [339] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 644:
Theorem (644) [serial 1826] used for:
    normalization of [serial 1802]
 


Theorem (646)                               [serial 1767] 
P [448] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
S [502] ->
Q [339] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 645:
Theorem (645) [serial 1802] used for:
  substituted Assertions' predicates for  labels  [serial 1767]
 


Theorem (647)                               [serial 1754] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))>>
S [502] ->
Q [339] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 646:
Theorem (646) [serial 1767] used for:
    normalization of [serial 1754]
 


Theorem (648)                               [serial 1977] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [4] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (649)                               [serial 1978] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [4] <<myDrugRecord.vtbi_lower_hard <= myRx.vtbi>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (650)                               [serial 1979] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [423] <<myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (651)                               [serial 1980] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [421] <<myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (652)                               [serial 1981] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [416] <<myDrugRecord.code = myRx.code>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (653)                               [serial 1982] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [418] <<myDrugRecord.concentration = myRx.concentration>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (654)                               [serial 1983] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [417] <<myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (655)                               [serial 2028] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (656)                               [serial 1984] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 655:
Theorem (655) [serial 2028] used for:
    normalization of [serial 1984]
 


Theorem (657)                               [serial 1962] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [450] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 648 649 650 651 652 653 654 656:
Theorem (648) [serial 1977] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1962]
 
Theorem (649) [serial 1978] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1962]
 
Theorem (650) [serial 1979] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1962]
 
Theorem (651) [serial 1980] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1962]
 
Theorem (652) [serial 1981] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1962]
 
Theorem (653) [serial 1982] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1962]
 
Theorem (654) [serial 1983] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1962]
 
Theorem (656) [serial 1984] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1962]
 


Theorem (658)                               [serial 1943] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [450] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Associativity: (b.c).a = a.b.c
and theorem 657:
Theorem (657) [serial 1962] used for:
  Associativity: (b.c).a = a.b.c [serial 1943]
 


Theorem (659)                               [serial 1934] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [450] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 658:
Theorem (658) [serial 1943] used for:
    normalization of [serial 1934]
 


Theorem (660)                               [serial 1867] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Substitution of Assertion Labels
and theorem 659:
Theorem (659) [serial 1934] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1867]
 


Theorem (661)                               [serial 1851] 
P [502] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Rx_Okay>>
S [502] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 660:
Theorem (660) [serial 1867] used for:
    normalization of [serial 1851]
 


Theorem (662)                               [serial 1839] 
P [502] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Rx_Okay>>
S [502] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 661:
Theorem (661) [serial 1851] used for:
  Associativity: (b.c).a = a.b.c [serial 1839]
 


Theorem (663)                               [serial 1814] 
P [502] <<Rx_Okay and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [502] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 662:
Theorem (662) [serial 1839] used for:
  Associativity: (b.c).a = a.b.c [serial 1814]
 


Theorem (664)                               [serial 1803] 
P [502] <<Rx_Okay@now and (((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [502] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Assume Present:  P = P@now = P^0 
and theorem 663:
Theorem (663) [serial 1814] used for:
  Assume Present:  P = P@now = P^0  [serial 1803]
 


Theorem (665)                               [serial 1769] 
P [502] <<Rx_Okay@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [502] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 664:
Theorem (664) [serial 1803] used for:
  substituted Assertions' predicates for  labels  [serial 1769]
 


Theorem (666)                               [serial 1755] 
P [502] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
Rx_Okay@now>>
S [502] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 665:
Theorem (665) [serial 1769] used for:
    normalization of [serial 1755]
 


Theorem (667)                               [serial 1748] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))>>
S [502] Rx_Okay!
Q [450] <<Rx_APPROVED()>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 647 666:
Theorem (647) [serial 1754] used for:
  applied port output <<pre>> -> <<M(Rx_Okay)>> [serial 1748]
 
Theorem (666) [serial 1755] used for:
  applied port output <<pre and Rx_Okay@now>> -> <<post>> [serial 1748]
 


Theorem (668)                               [serial 2017] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [4] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (669)                               [serial 2018] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [4] <<myDrugRecord.vtbi_lower_hard <= myRx.vtbi>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (670)                               [serial 2019] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [423] <<myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (671)                               [serial 2020] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [421] <<myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (672)                               [serial 2021] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [416] <<myDrugRecord.code = myRx.code>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (673)                               [serial 2022] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [418] <<myDrugRecord.concentration = myRx.concentration>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (674)                               [serial 2023] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [417] <<myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (675)                               [serial 2038] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (676)                               [serial 2024] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 675:
Theorem (675) [serial 2038] used for:
    normalization of [serial 2024]
 


Theorem (677)                               [serial 1968] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [450] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 668 669 670 671 672 673 674 676:
Theorem (668) [serial 2017] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1968]
 
Theorem (669) [serial 2018] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1968]
 
Theorem (670) [serial 2019] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1968]
 
Theorem (671) [serial 2020] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1968]
 
Theorem (672) [serial 2021] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1968]
 
Theorem (673) [serial 2022] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1968]
 
Theorem (674) [serial 2023] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1968]
 
Theorem (676) [serial 2024] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1968]
 


Theorem (678)                               [serial 1963] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [450] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Associativity: (b.c).a = a.b.c
and theorem 677:
Theorem (677) [serial 1968] used for:
  Associativity: (b.c).a = a.b.c [serial 1963]
 


Theorem (679)                               [serial 1945] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [450] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Law of And-Simplification:  P and P is P
and theorem 678:
Theorem (678) [serial 1963] used for:
  Law of And-Simplification:  P and P is P [serial 1945]
 


Theorem (680)                               [serial 1935] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [450] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 679:
Theorem (679) [serial 1945] used for:
    normalization of [serial 1935]
 


Theorem (681)                               [serial 1869] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name>>
S [503] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Substitution of Assertion Labels
and theorem 680:
Theorem (680) [serial 1935] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1869]
 


Theorem (682)                               [serial 1852] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and VTBI = myRx.vtbi>>
S [503] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 681:
Theorem (681) [serial 1869] used for:
    normalization of [serial 1852]
 


Theorem (683)                               [serial 1840] 
P [503] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and VTBI = myRx.vtbi>>
S [503] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 682:
Theorem (682) [serial 1852] used for:
  Associativity: (b.c).a = a.b.c [serial 1840]
 


Theorem (684)                               [serial 1815] 
P [503] <<VTBI = myRx.vtbi and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [503] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 683:
Theorem (683) [serial 1840] used for:
  Associativity: (b.c).a = a.b.c [serial 1815]
 


Theorem (685)                               [serial 1804] 
P [503] <<(VTBI = myRx.vtbi)@now and (((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [503] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Assume Present:  P = P@now = P^0 
and theorem 684:
Theorem (684) [serial 1815] used for:
  Assume Present:  P = P@now = P^0  [serial 1804]
 


Theorem (686)                               [serial 1771] 
P [503] <<(VTBI = myRx.vtbi)@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [503] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 685:
Theorem (685) [serial 1804] used for:
  substituted Assertions' predicates for  labels  [serial 1771]
 


Theorem (687)                               [serial 1756] 
P [503] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(VTBI = (myRx.vtbi))@now>>
S [503] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 686:
Theorem (686) [serial 1771] used for:
    normalization of [serial 1756]
 


Theorem (688)                               [serial 1862] 
P [503] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and VTBI = myRx.vtbi>>
S [503] ->
Q [503] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (689)                               [serial 1853] 
P [503] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and VTBI = myRx.vtbi>>
S [503] ->
Q [503] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 688:
Theorem (688) [serial 1862] used for:
  Associativity: (b.c).a = a.b.c [serial 1853]
 


Theorem (690)                               [serial 1841] 
P [503] <<VTBI = myRx.vtbi and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [503] ->
Q [503] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 689:
Theorem (689) [serial 1853] used for:
  Associativity: (b.c).a = a.b.c [serial 1841]
 


Theorem (691)                               [serial 1816] 
P [503] <<VTBI = myRx.vtbi and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [503] ->
Q [503] <<VTBI = VTBI>>
by Equality Law (idistr):  a=a <-> true
and theorem 690:
Theorem (690) [serial 1841] used for:
  Equality Law (idistr):  a=a <-> true [serial 1816]
 


Theorem (692)                               [serial 1805] 
P [503] <<(VTBI = myRx.vtbi)@now and (((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [503] ->
Q [503] <<(VTBI = VTBI)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 691:
Theorem (691) [serial 1816] used for:
  Assume Present:  P = P@now = P^0  [serial 1805]
 


Theorem (693)                               [serial 1773] 
P [503] <<(VTBI = myRx.vtbi)@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [503] ->
Q [503] <<(VTBI = VTBI)@now>>
by Substitution of Assertion Labels
and theorem 692:
Theorem (692) [serial 1805] used for:
  substituted Assertions' predicates for  labels  [serial 1773]
 


Theorem (694)                               [serial 1757] 
P [503] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(VTBI = (myRx.vtbi))@now>>
S [503] ->
Q [503] <<(VTBI = VTBI)@now>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 693:
Theorem (693) [serial 1773] used for:
    normalization of [serial 1757]
 


Theorem (695)                               [serial 1749] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))>>
S [503] VTBI!(myRx.vtbi)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 687 694:
Theorem (687) [serial 1756] used for:
  applied port output <<pre and (VTBI=myRx.vtbi)@now>> -> <<post>> [serial 1749]
 
Theorem (694) [serial 1757] used for:
  applied port output <<pre and (VTBI=myRx.vtbi)@now>> -> <<(VTBI=VTBI)@now>> [serial 1749]
 


Theorem (696)                               [serial 1985] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [4] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (697)                               [serial 1986] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [4] <<myDrugRecord.vtbi_lower_hard <= myRx.vtbi>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (698)                               [serial 1987] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [423] <<myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (699)                               [serial 1988] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [421] <<myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (700)                               [serial 1989] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [416] <<myDrugRecord.code = myRx.code>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (701)                               [serial 1990] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [418] <<myDrugRecord.concentration = myRx.concentration>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (702)                               [serial 1991] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [417] <<myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (703)                               [serial 2030] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (704)                               [serial 1992] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 703:
Theorem (703) [serial 2030] used for:
    normalization of [serial 1992]
 


Theorem (705)                               [serial 1964] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [450] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 696 697 698 699 700 701 702 704:
Theorem (696) [serial 1985] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1964]
 
Theorem (697) [serial 1986] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1964]
 
Theorem (698) [serial 1987] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1964]
 
Theorem (699) [serial 1988] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1964]
 
Theorem (700) [serial 1989] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1964]
 
Theorem (701) [serial 1990] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1964]
 
Theorem (702) [serial 1991] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1964]
 
Theorem (704) [serial 1992] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1964]
 


Theorem (706)                               [serial 1947] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [450] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Associativity: (b.c).a = a.b.c
and theorem 705:
Theorem (705) [serial 1964] used for:
  Associativity: (b.c).a = a.b.c [serial 1947]
 


Theorem (707)                               [serial 1936] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [450] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 706:
Theorem (706) [serial 1947] used for:
    normalization of [serial 1936]
 


Theorem (708)                               [serial 1871] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Substitution of Assertion Labels
and theorem 707:
Theorem (707) [serial 1936] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1871]
 


Theorem (709)                               [serial 1854] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [504] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 708:
Theorem (708) [serial 1871] used for:
    normalization of [serial 1854]
 


Theorem (710)                               [serial 1842] 
P [504] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [504] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 709:
Theorem (709) [serial 1854] used for:
  Associativity: (b.c).a = a.b.c [serial 1842]
 


Theorem (711)                               [serial 1817] 
P [504] <<Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [504] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 710:
Theorem (710) [serial 1842] used for:
  Associativity: (b.c).a = a.b.c [serial 1817]
 


Theorem (712)                               [serial 1806] 
P [504] <<(Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical)@now and (
((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [504] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Assume Present:  P = P@now = P^0 
and theorem 711:
Theorem (711) [serial 1817] used for:
  Assume Present:  P = P@now = P^0  [serial 1806]
 


Theorem (713)                               [serial 1775] 
P [504] <<(Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical)@now and (
AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [504] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 712:
Theorem (712) [serial 1806] used for:
  substituted Assertions' predicates for  labels  [serial 1775]
 


Theorem (714)                               [serial 1758] 
P [504] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(Square_Bolus_Rate = (myDrugRecord.square_bolus_rate_typical))@now>>
S [504] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 713:
Theorem (713) [serial 1775] used for:
    normalization of [serial 1758]
 


Theorem (715)                               [serial 1931] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [504] <<Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (716)                               [serial 1922] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [504] <<(myDrugRecord.square_bolus_rate_typical) = Square_Bolus_Rate>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 715:
Theorem (715) [serial 1931] used for:
    normalization of [serial 1922]
 


Theorem (717)                               [serial 1873] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [504] ->
Q [504] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Guided Substitution of Equals
and theorem 716:
Theorem (716) [serial 1922] used for:
  Guided Substitution of Equals
 replacing "SQUARE_BOLUS_RATE" with its = "(myDrugRecord.square_bolus_rate_typical)" in its postcondition [serial 1873]
 


Theorem (718)                               [serial 1855] 
P [504] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [504] ->
Q [504] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 717:
Theorem (717) [serial 1873] used for:
    normalization of [serial 1855]
 


Theorem (719)                               [serial 1843] 
P [504] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [504] ->
Q [504] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 718:
Theorem (718) [serial 1855] used for:
  Associativity: (b.c).a = a.b.c [serial 1843]
 


Theorem (720)                               [serial 1818] 
P [504] <<Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [504] ->
Q [504] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 719:
Theorem (719) [serial 1843] used for:
  Associativity: (b.c).a = a.b.c [serial 1818]
 


Theorem (721)                               [serial 1807] 
P [504] <<(Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical)@now and (
((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [504] ->
Q [504] <<(SQUARE_BOLUS_RATE = Square_Bolus_Rate)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 720:
Theorem (720) [serial 1818] used for:
  Assume Present:  P = P@now = P^0  [serial 1807]
 


Theorem (722)                               [serial 1777] 
P [504] <<(Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical)@now and (
AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [504] ->
Q [504] <<(SQUARE_BOLUS_RATE = Square_Bolus_Rate)@now>>
by Substitution of Assertion Labels
and theorem 721:
Theorem (721) [serial 1807] used for:
  substituted Assertions' predicates for  labels  [serial 1777]
 


Theorem (723)                               [serial 1759] 
P [504] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(Square_Bolus_Rate = (myDrugRecord.square_bolus_rate_typical))@now>>
S [504] ->
Q [504] <<(Square_Bolus_Rate = SQUARE_BOLUS_RATE)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 722:
Theorem (722) [serial 1777] used for:
    normalization of [serial 1759]
 


Theorem (724)                               [serial 1750] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))>>
S [504] Square_Bolus_Rate!(myDrugRecord.square_bolus_rate_typical)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 714 723:
Theorem (714) [serial 1758] used for:
  applied port output <<pre and (Square_Bolus_Rate=myDrugRecord.square_bolus_rate_typical)@now>> -> <<post>> [serial 1750]
 
Theorem (723) [serial 1759] used for:
  applied port output <<pre and (Square_Bolus_Rate=myDrugRecord.square_bolus_rate_typical)@now>> -> <<(Square_Bolus_Rate=SQUARE_BOLUS_RATE)@now>> [serial 1750]
 


Theorem (725)                               [serial 1993] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [4] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (726)                               [serial 1994] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [4] <<myDrugRecord.vtbi_lower_hard <= myRx.vtbi>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (727)                               [serial 1995] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [423] <<myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (728)                               [serial 1996] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [421] <<myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (729)                               [serial 1997] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [416] <<myDrugRecord.code = myRx.code>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (730)                               [serial 1998] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [418] <<myDrugRecord.concentration = myRx.concentration>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (731)                               [serial 1999] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [417] <<myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (732)                               [serial 2032] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (733)                               [serial 2000] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 732:
Theorem (732) [serial 2032] used for:
    normalization of [serial 2000]
 


Theorem (734)                               [serial 1965] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [450] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 725 726 727 728 729 730 731 733:
Theorem (725) [serial 1993] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1965]
 
Theorem (726) [serial 1994] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1965]
 
Theorem (727) [serial 1995] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1965]
 
Theorem (728) [serial 1996] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1965]
 
Theorem (729) [serial 1997] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1965]
 
Theorem (730) [serial 1998] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1965]
 
Theorem (731) [serial 1999] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1965]
 
Theorem (733) [serial 2000] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1965]
 


Theorem (735)                               [serial 1949] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [450] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Associativity: (b.c).a = a.b.c
and theorem 734:
Theorem (734) [serial 1965] used for:
  Associativity: (b.c).a = a.b.c [serial 1949]
 


Theorem (736)                               [serial 1937] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [450] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 735:
Theorem (735) [serial 1949] used for:
    normalization of [serial 1937]
 


Theorem (737)                               [serial 1875] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Substitution of Assertion Labels
and theorem 736:
Theorem (736) [serial 1937] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1875]
 


Theorem (738)                               [serial 1856] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [505] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 737:
Theorem (737) [serial 1875] used for:
    normalization of [serial 1856]
 


Theorem (739)                               [serial 1844] 
P [505] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [505] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 738:
Theorem (738) [serial 1856] used for:
  Associativity: (b.c).a = a.b.c [serial 1844]
 


Theorem (740)                               [serial 1819] 
P [505] <<Max_Drug_Per_Hour = myRx.max_drug_per_hour and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [505] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 739:
Theorem (739) [serial 1844] used for:
  Associativity: (b.c).a = a.b.c [serial 1819]
 


Theorem (741)                               [serial 1808] 
P [505] <<(Max_Drug_Per_Hour = myRx.max_drug_per_hour)@now and (((VTBI = myRx.vtbi) and 
(SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and (PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and 
(MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and (BASAL_RATE = myRx.basal_rate)) and 
((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [505] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Assume Present:  P = P@now = P^0 
and theorem 740:
Theorem (740) [serial 1819] used for:
  Assume Present:  P = P@now = P^0  [serial 1808]
 


Theorem (742)                               [serial 1779] 
P [505] <<(Max_Drug_Per_Hour = myRx.max_drug_per_hour)@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [505] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 741:
Theorem (741) [serial 1808] used for:
  substituted Assertions' predicates for  labels  [serial 1779]
 


Theorem (743)                               [serial 1760] 
P [505] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(Max_Drug_Per_Hour = (myRx.max_drug_per_hour))@now>>
S [505] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 742:
Theorem (742) [serial 1779] used for:
    normalization of [serial 1760]
 


Theorem (744)                               [serial 1920] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [505] <<Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (745)                               [serial 1910] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [505] <<(myRx.max_drug_per_hour) = Max_Drug_Per_Hour>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 744:
Theorem (744) [serial 1920] used for:
    normalization of [serial 1910]
 


Theorem (746)                               [serial 1877] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [505] ->
Q [505] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Guided Substitution of Equals
and theorem 745:
Theorem (745) [serial 1910] used for:
  Guided Substitution of Equals
 replacing "MAX_DRUG_PER_HOUR" with its = "(myRx.max_drug_per_hour)" in its postcondition [serial 1877]
 


Theorem (747)                               [serial 1857] 
P [505] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [505] ->
Q [505] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 746:
Theorem (746) [serial 1877] used for:
    normalization of [serial 1857]
 


Theorem (748)                               [serial 1845] 
P [505] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [505] ->
Q [505] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Associativity: (b.c).a = a.b.c
and theorem 747:
Theorem (747) [serial 1857] used for:
  Associativity: (b.c).a = a.b.c [serial 1845]
 


Theorem (749)                               [serial 1820] 
P [505] <<Max_Drug_Per_Hour = myRx.max_drug_per_hour and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [505] ->
Q [505] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Associativity: (b.c).a = a.b.c
and theorem 748:
Theorem (748) [serial 1845] used for:
  Associativity: (b.c).a = a.b.c [serial 1820]
 


Theorem (750)                               [serial 1809] 
P [505] <<(Max_Drug_Per_Hour = myRx.max_drug_per_hour)@now and (((VTBI = myRx.vtbi) and 
(SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and (PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and 
(MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and (BASAL_RATE = myRx.basal_rate)) and 
((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [505] ->
Q [505] <<(MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 749:
Theorem (749) [serial 1820] used for:
  Assume Present:  P = P@now = P^0  [serial 1809]
 


Theorem (751)                               [serial 1781] 
P [505] <<(Max_Drug_Per_Hour = myRx.max_drug_per_hour)@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [505] ->
Q [505] <<(MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour)@now>>
by Substitution of Assertion Labels
and theorem 750:
Theorem (750) [serial 1809] used for:
  substituted Assertions' predicates for  labels  [serial 1781]
 


Theorem (752)                               [serial 1761] 
P [505] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(Max_Drug_Per_Hour = (myRx.max_drug_per_hour))@now>>
S [505] ->
Q [505] <<(Max_Drug_Per_Hour = MAX_DRUG_PER_HOUR)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 751:
Theorem (751) [serial 1781] used for:
    normalization of [serial 1761]
 


Theorem (753)                               [serial 1751] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))>>
S [505] Max_Drug_Per_Hour!(myRx.max_drug_per_hour)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 743 752:
Theorem (743) [serial 1760] used for:
  applied port output <<pre and (Max_Drug_Per_Hour=myRx.max_drug_per_hour)@now>> -> <<post>> [serial 1751]
 
Theorem (752) [serial 1761] used for:
  applied port output <<pre and (Max_Drug_Per_Hour=myRx.max_drug_per_hour)@now>> -> <<(Max_Drug_Per_Hour=MAX_DRUG_PER_HOUR)@now>> [serial 1751]
 


Theorem (754)                               [serial 2001] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [4] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (755)                               [serial 2002] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [4] <<myDrugRecord.vtbi_lower_hard <= myRx.vtbi>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (756)                               [serial 2003] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [423] <<myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (757)                               [serial 2004] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [421] <<myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (758)                               [serial 2005] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [416] <<myDrugRecord.code = myRx.code>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (759)                               [serial 2006] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [418] <<myDrugRecord.concentration = myRx.concentration>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (760)                               [serial 2007] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [417] <<myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (761)                               [serial 2034] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (762)                               [serial 2008] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 761:
Theorem (761) [serial 2034] used for:
    normalization of [serial 2008]
 


Theorem (763)                               [serial 1966] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [450] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 754 755 756 757 758 759 760 762:
Theorem (754) [serial 2001] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1966]
 
Theorem (755) [serial 2002] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1966]
 
Theorem (756) [serial 2003] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1966]
 
Theorem (757) [serial 2004] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1966]
 
Theorem (758) [serial 2005] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1966]
 
Theorem (759) [serial 2006] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1966]
 
Theorem (760) [serial 2007] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1966]
 
Theorem (762) [serial 2008] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1966]
 


Theorem (764)                               [serial 1951] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [450] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Associativity: (b.c).a = a.b.c
and theorem 763:
Theorem (763) [serial 1966] used for:
  Associativity: (b.c).a = a.b.c [serial 1951]
 


Theorem (765)                               [serial 1938] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [450] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 764:
Theorem (764) [serial 1951] used for:
    normalization of [serial 1938]
 


Theorem (766)                               [serial 1879] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Substitution of Assertion Labels
and theorem 765:
Theorem (765) [serial 1938] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1879]
 


Theorem (767)                               [serial 1858] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [506] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 766:
Theorem (766) [serial 1879] used for:
    normalization of [serial 1858]
 


Theorem (768)                               [serial 1846] 
P [506] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [506] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 767:
Theorem (767) [serial 1858] used for:
  Associativity: (b.c).a = a.b.c [serial 1846]
 


Theorem (769)                               [serial 1821] 
P [506] <<Patient_Bolus_Rate = myRx.patient_bolus_rate and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [506] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 768:
Theorem (768) [serial 1846] used for:
  Associativity: (b.c).a = a.b.c [serial 1821]
 


Theorem (770)                               [serial 1810] 
P [506] <<(Patient_Bolus_Rate = myRx.patient_bolus_rate)@now and (((VTBI = myRx.vtbi) and 
(SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and (PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and 
(MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and (BASAL_RATE = myRx.basal_rate)) and 
((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [506] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Assume Present:  P = P@now = P^0 
and theorem 769:
Theorem (769) [serial 1821] used for:
  Assume Present:  P = P@now = P^0  [serial 1810]
 


Theorem (771)                               [serial 1783] 
P [506] <<(Patient_Bolus_Rate = myRx.patient_bolus_rate)@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [506] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 770:
Theorem (770) [serial 1810] used for:
  substituted Assertions' predicates for  labels  [serial 1783]
 


Theorem (772)                               [serial 1762] 
P [506] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(Patient_Bolus_Rate = (myRx.patient_bolus_rate))@now>>
S [506] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 771:
Theorem (771) [serial 1783] used for:
    normalization of [serial 1762]
 


Theorem (773)                               [serial 1908] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [506] <<Patient_Bolus_Rate = myRx.patient_bolus_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (774)                               [serial 1897] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [506] <<(myRx.patient_bolus_rate) = Patient_Bolus_Rate>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 773:
Theorem (773) [serial 1908] used for:
    normalization of [serial 1897]
 


Theorem (775)                               [serial 1881] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [506] ->
Q [506] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Guided Substitution of Equals
and theorem 774:
Theorem (774) [serial 1897] used for:
  Guided Substitution of Equals
 replacing "PATIENT_BOLUS_RATE" with its = "(myRx.patient_bolus_rate)" in its postcondition [serial 1881]
 


Theorem (776)                               [serial 1859] 
P [506] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [506] ->
Q [506] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 775:
Theorem (775) [serial 1881] used for:
    normalization of [serial 1859]
 


Theorem (777)                               [serial 1847] 
P [506] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [506] ->
Q [506] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 776:
Theorem (776) [serial 1859] used for:
  Associativity: (b.c).a = a.b.c [serial 1847]
 


Theorem (778)                               [serial 1822] 
P [506] <<Patient_Bolus_Rate = myRx.patient_bolus_rate and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [506] ->
Q [506] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 777:
Theorem (777) [serial 1847] used for:
  Associativity: (b.c).a = a.b.c [serial 1822]
 


Theorem (779)                               [serial 1811] 
P [506] <<(Patient_Bolus_Rate = myRx.patient_bolus_rate)@now and (((VTBI = myRx.vtbi) and 
(SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and (PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and 
(MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and (BASAL_RATE = myRx.basal_rate)) and 
((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [506] ->
Q [506] <<(PATIENT_BOLUS_RATE = Patient_Bolus_Rate)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 778:
Theorem (778) [serial 1822] used for:
  Assume Present:  P = P@now = P^0  [serial 1811]
 


Theorem (780)                               [serial 1785] 
P [506] <<(Patient_Bolus_Rate = myRx.patient_bolus_rate)@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [506] ->
Q [506] <<(PATIENT_BOLUS_RATE = Patient_Bolus_Rate)@now>>
by Substitution of Assertion Labels
and theorem 779:
Theorem (779) [serial 1811] used for:
  substituted Assertions' predicates for  labels  [serial 1785]
 


Theorem (781)                               [serial 1763] 
P [506] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(Patient_Bolus_Rate = (myRx.patient_bolus_rate))@now>>
S [506] ->
Q [506] <<(Patient_Bolus_Rate = PATIENT_BOLUS_RATE)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 780:
Theorem (780) [serial 1785] used for:
    normalization of [serial 1763]
 


Theorem (782)                               [serial 1752] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))>>
S [506] Patient_Bolus_Rate!(myRx.patient_bolus_rate)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 772 781:
Theorem (772) [serial 1762] used for:
  applied port output <<pre and (Patient_Bolus_Rate=myRx.patient_bolus_rate)@now>> -> <<post>> [serial 1752]
 
Theorem (781) [serial 1763] used for:
  applied port output <<pre and (Patient_Bolus_Rate=myRx.patient_bolus_rate)@now>> -> <<(Patient_Bolus_Rate=PATIENT_BOLUS_RATE)@now>> [serial 1752]
 


Theorem (783)                               [serial 2009] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [4] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (784)                               [serial 2010] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [4] <<myDrugRecord.vtbi_lower_hard <= myRx.vtbi>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (785)                               [serial 2011] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [423] <<myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (786)                               [serial 2012] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [421] <<myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (787)                               [serial 2013] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [416] <<myDrugRecord.code = myRx.code>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (788)                               [serial 2014] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [418] <<myDrugRecord.concentration = myRx.concentration>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (789)                               [serial 2015] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [417] <<myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (790)                               [serial 2036] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (791)                               [serial 2016] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 790:
Theorem (790) [serial 2036] used for:
    normalization of [serial 2016]
 


Theorem (792)                               [serial 1967] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [450] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 783 784 785 786 787 788 789 791:
Theorem (783) [serial 2009] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1967]
 
Theorem (784) [serial 2010] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1967]
 
Theorem (785) [serial 2011] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1967]
 
Theorem (786) [serial 2012] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1967]
 
Theorem (787) [serial 2013] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1967]
 
Theorem (788) [serial 2014] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1967]
 
Theorem (789) [serial 2015] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1967]
 
Theorem (791) [serial 2016] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1967]
 


Theorem (793)                               [serial 1953] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [450] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Associativity: (b.c).a = a.b.c
and theorem 792:
Theorem (792) [serial 1967] used for:
  Associativity: (b.c).a = a.b.c [serial 1953]
 


Theorem (794)                               [serial 1939] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [450] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 793:
Theorem (793) [serial 1953] used for:
    normalization of [serial 1939]
 


Theorem (795)                               [serial 1883] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Substitution of Assertion Labels
and theorem 794:
Theorem (794) [serial 1939] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1883]
 


Theorem (796)                               [serial 1860] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Basal_Rate = myRx.basal_rate>>
S [507] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 795:
Theorem (795) [serial 1883] used for:
    normalization of [serial 1860]
 


Theorem (797)                               [serial 1848] 
P [507] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Basal_Rate = myRx.basal_rate>>
S [507] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 796:
Theorem (796) [serial 1860] used for:
  Associativity: (b.c).a = a.b.c [serial 1848]
 


Theorem (798)                               [serial 1823] 
P [507] <<Basal_Rate = myRx.basal_rate and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [507] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Associativity: (b.c).a = a.b.c
and theorem 797:
Theorem (797) [serial 1848] used for:
  Associativity: (b.c).a = a.b.c [serial 1823]
 


Theorem (799)                               [serial 1812] 
P [507] <<(Basal_Rate = myRx.basal_rate)@now and (((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [507] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Assume Present:  P = P@now = P^0 
and theorem 798:
Theorem (798) [serial 1823] used for:
  Assume Present:  P = P@now = P^0  [serial 1812]
 


Theorem (800)                               [serial 1787] 
P [507] <<(Basal_Rate = myRx.basal_rate)@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [507] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 799:
Theorem (799) [serial 1812] used for:
  substituted Assertions' predicates for  labels  [serial 1787]
 


Theorem (801)                               [serial 1764] 
P [507] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(Basal_Rate = (myRx.basal_rate))@now>>
S [507] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 800:
Theorem (800) [serial 1787] used for:
    normalization of [serial 1764]
 


Theorem (802)                               [serial 1885] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
S [507] ->
Q [507] <<Basal_Rate = myRx.basal_rate>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (803)                               [serial 1863] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Basal_Rate = myRx.basal_rate>>
S [507] ->
Q [507] <<(myRx.basal_rate) = Basal_Rate>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 802:
Theorem (802) [serial 1885] used for:
    normalization of [serial 1863]
 


Theorem (804)                               [serial 1861] 
P [507] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Basal_Rate = myRx.basal_rate>>
S [507] ->
Q [507] <<BASAL_RATE = Basal_Rate>>
by Guided Substitution of Equals
and theorem 803:
Theorem (803) [serial 1863] used for:
  Guided Substitution of Equals
 replacing "BASAL_RATE" with its = "(myRx.basal_rate)" in its postcondition [serial 1861]
 


Theorem (805)                               [serial 1849] 
P [507] <<(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi) and (myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and Basal_Rate = myRx.basal_rate>>
S [507] ->
Q [507] <<BASAL_RATE = Basal_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 804:
Theorem (804) [serial 1861] used for:
  Associativity: (b.c).a = a.b.c [serial 1849]
 


Theorem (806)                               [serial 1824] 
P [507] <<Basal_Rate = myRx.basal_rate and ((myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name))>>
S [507] ->
Q [507] <<BASAL_RATE = Basal_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 805:
Theorem (805) [serial 1849] used for:
  Associativity: (b.c).a = a.b.c [serial 1824]
 


Theorem (807)                               [serial 1813] 
P [507] <<(Basal_Rate = myRx.basal_rate)@now and (((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [507] ->
Q [507] <<(BASAL_RATE = Basal_Rate)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 806:
Theorem (806) [serial 1824] used for:
  Assume Present:  P = P@now = P^0  [serial 1813]
 


Theorem (808)                               [serial 1789] 
P [507] <<(Basal_Rate = myRx.basal_rate)@now and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and not HARD_LIMIT_VIOLATED() and (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [507] ->
Q [507] <<(BASAL_RATE = Basal_Rate)@now>>
by Substitution of Assertion Labels
and theorem 807:
Theorem (807) [serial 1813] used for:
  substituted Assertions' predicates for  labels  [serial 1789]
 


Theorem (809)                               [serial 1765] 
P [507] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
(Basal_Rate = (myRx.basal_rate))@now>>
S [507] ->
Q [507] <<(Basal_Rate = BASAL_RATE)@now>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 808:
Theorem (808) [serial 1789] used for:
    normalization of [serial 1765]
 


Theorem (810)                               [serial 1753] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))>>
S [507] Basal_Rate!(myRx.basal_rate)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 801 809:
Theorem (801) [serial 1764] used for:
  applied port output <<pre and (Basal_Rate=myRx.basal_rate)@now>> -> <<post>> [serial 1753]
 
Theorem (809) [serial 1765] used for:
  applied port output <<pre and (Basal_Rate=myRx.basal_rate)@now>> -> <<(Basal_Rate=BASAL_RATE)@now>> [serial 1753]
 


Theorem (811)                               [serial 1067] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))>>
S [502] Rx_Okay!
&
VTBI!(myRx.vtbi)
&
Square_Bolus_Rate!(myDrugRecord.square_bolus_rate_typical)
&
Max_Drug_Per_Hour!(myRx.max_drug_per_hour)
&
Patient_Bolus_Rate!(myRx.patient_bolus_rate)
&
Basal_Rate!(myRx.basal_rate)
Q [450] <<Rx_APPROVED()>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 667 695 724 753 782 810:
Theorem (667) [serial 1748] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1067]
 
Theorem (695) [serial 1749] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1067]
 
Theorem (724) [serial 1750] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1067]
 
Theorem (753) [serial 1751] used for:
  <<P>> S4 <<Q>> in concurrent composition for [serial 1067]
 
Theorem (782) [serial 1752] used for:
  <<P>> S5 <<Q>> in concurrent composition for [serial 1067]
 
Theorem (810) [serial 1753] used for:
  <<P>> S6 <<Q>> in concurrent composition for [serial 1067]
 


Theorem (812)                               [serial 2060] 
P [448] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
S [514] ->
Q [371] <<not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (813)                               [serial 2057] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))>>
S [514] ->
Q [371] <<(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 812:
Theorem (812) [serial 2060] used for:
    normalization of [serial 2057]
 


Theorem (814)                               [serial 2047] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))>>
S [514] ->
Q [371] <<SOFT_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 813:
Theorem (813) [serial 2057] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2047]
 


Theorem (815)                               [serial 2062] 
P [514] <<Soft_Limit_Warning@now and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
S [514] ->
Q [452] <<not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (816)                               [serial 2058] 
P [514] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [452] <<(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 815:
Theorem (815) [serial 2062] used for:
    normalization of [serial 2058]
 


Theorem (817)                               [serial 2053] 
P [514] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [452] <<SOFT_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 816:
Theorem (816) [serial 2058] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2053]
 


Theorem (818)                               [serial 2049] 
P [514] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [452] <<SOFT_LIMIT_VIOLATED()>>
by Associativity: (b.c).a = a.b.c
and theorem 817:
Theorem (817) [serial 2053] used for:
  Associativity: (b.c).a = a.b.c [serial 2049]
 


Theorem (819)                               [serial 2054] 
P [514] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [452] <<Rx_VALID()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (820)                               [serial 2050] 
P [514] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [452] <<Rx_VALID()>>
by Associativity: (b.c).a = a.b.c
and theorem 819:
Theorem (819) [serial 2054] used for:
  Associativity: (b.c).a = a.b.c [serial 2050]
 


Theorem (821)                               [serial 2055] 
P [514] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [453] <<not HARD_LIMIT_VIOLATED()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (822)                               [serial 2051] 
P [514] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [453] <<not HARD_LIMIT_VIOLATED()>>
by Associativity: (b.c).a = a.b.c
and theorem 821:
Theorem (821) [serial 2055] used for:
  Associativity: (b.c).a = a.b.c [serial 2051]
 


Theorem (823)                               [serial 2056] 
P [514] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [453] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (824)                               [serial 2052] 
P [514] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [453] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
by Associativity: (b.c).a = a.b.c
and theorem 823:
Theorem (823) [serial 2056] used for:
  Associativity: (b.c).a = a.b.c [serial 2052]
 


Theorem (825)                               [serial 2048] 
P [514] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))) and 
Soft_Limit_Warning@now>>
S [514] ->
Q [452] <<SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 818 820 822 824:
Theorem (818) [serial 2049] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2048]
 
Theorem (820) [serial 2050] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2048]
 
Theorem (822) [serial 2051] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2048]
 
Theorem (824) [serial 2052] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2048]
 


Theorem (826)                               [serial 2046] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))>>
S [514] Soft_Limit_Warning!
Q [452] <<SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 814 825:
Theorem (814) [serial 2047] used for:
  applied port output <<pre>> -> <<M(Soft_Limit_Warning)>> [serial 2046]
 
Theorem (825) [serial 2048] used for:
  applied port output <<pre and Soft_Limit_Warning@now>> -> <<post>> [serial 2046]
 


Theorem (827)                               [serial 1068] 
P [448] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft)))>>
S [514] Soft_Limit_Warning!
Q [452] <<SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()>>
by Introduction of Existential Quantification (bl.aanone)
and theorem 826:
Theorem (826) [serial 2046] used for:
  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 1068]
 


Theorem (828)                               [serial 2311] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [413] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (829)                               [serial 2296] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [413] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 828:
Theorem (828) [serial 2311] used for:
    normalization of [serial 2296]
 


Theorem (830)                               [serial 2240] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [413] <<Rx_VALID()>>
by Substitution of Assertion Labels
and theorem 829:
Theorem (829) [serial 2296] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2240]
 


Theorem (831)                               [serial 2313] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [414] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (832)                               [serial 2297] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [414] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 831:
Theorem (831) [serial 2313] used for:
    normalization of [serial 2297]
 


Theorem (833)                               [serial 2241] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [414] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 832:
Theorem (832) [serial 2297] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2241]
 


Theorem (834)                               [serial 2264] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (835)                               [serial 2242] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 834:
Theorem (834) [serial 2264] used for:
    normalization of [serial 2242]
 


Theorem (836)                               [serial 2220] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [339] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 830 833 835:
Theorem (830) [serial 2240] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2220]
 
Theorem (833) [serial 2241] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2220]
 
Theorem (835) [serial 2242] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2220]
 


Theorem (837)                               [serial 2212] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [339] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 836:
Theorem (836) [serial 2220] used for:
    normalization of [serial 2212]
 


Theorem (838)                               [serial 2163] 
P [515] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [339] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 837:
Theorem (837) [serial 2212] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2163]
 


Theorem (839)                               [serial 2131] 
P [515] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [516] ->
Q [339] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 838:
Theorem (838) [serial 2163] used for:
  Associativity: (b.c).a = a.b.c [serial 2131]
 


Theorem (840)                               [serial 2119] 
P [515] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [339] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 839:
Theorem (839) [serial 2131] used for:
    normalization of [serial 2119]
 


Theorem (841)                               [serial 2095] 
P [515] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [339] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 840:
Theorem (840) [serial 2119] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2095]
 


Theorem (842)                               [serial 2083] 
P [515] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED())>>
S [516] ->
Q [339] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 841:
Theorem (841) [serial 2095] used for:
  Associativity: (b.c).a = a.b.c [serial 2083]
 


Theorem (843)                               [serial 2071] 
P [515] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [516] ->
Q [339] <<Rx_APPROVED()>>
by Assume Present:  P = P@now = P^0 
and theorem 842:
Theorem (842) [serial 2083] used for:
  Assume Present:  P = P@now = P^0  [serial 2071]
 


Theorem (844)                               [serial 2315] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [413] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (845)                               [serial 2298] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [413] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 844:
Theorem (844) [serial 2315] used for:
    normalization of [serial 2298]
 


Theorem (846)                               [serial 2243] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [413] <<Rx_VALID()>>
by Substitution of Assertion Labels
and theorem 845:
Theorem (845) [serial 2298] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2243]
 


Theorem (847)                               [serial 2317] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [414] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (848)                               [serial 2299] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [414] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 847:
Theorem (847) [serial 2317] used for:
    normalization of [serial 2299]
 


Theorem (849)                               [serial 2244] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [414] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 848:
Theorem (848) [serial 2299] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2244]
 


Theorem (850)                               [serial 2268] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (851)                               [serial 2245] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 850:
Theorem (850) [serial 2268] used for:
    normalization of [serial 2245]
 


Theorem (852)                               [serial 2222] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 846 849 851:
Theorem (846) [serial 2243] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2222]
 
Theorem (849) [serial 2244] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2222]
 
Theorem (851) [serial 2245] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2222]
 


Theorem (853)                               [serial 2213] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 852:
Theorem (852) [serial 2222] used for:
    normalization of [serial 2213]
 


Theorem (854)                               [serial 2164] 
P [516] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [516] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 853:
Theorem (853) [serial 2213] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2164]
 


Theorem (855)                               [serial 2133] 
P [516] <<CLINICIAN_APPROVED_SOFT_LIMIT and Rx_Okay and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [516] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 854:
Theorem (854) [serial 2164] used for:
  Associativity: (b.c).a = a.b.c [serial 2133]
 


Theorem (856)                               [serial 2120] 
P [516] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Rx_Okay>>
S [516] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 855:
Theorem (855) [serial 2133] used for:
    normalization of [serial 2120]
 


Theorem (857)                               [serial 2107] 
P [516] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Rx_Okay>>
S [516] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 856:
Theorem (856) [serial 2120] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2107]
 


Theorem (858)                               [serial 2096] 
P [516] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Rx_Okay>>
S [516] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 857:
Theorem (857) [serial 2107] used for:
  Associativity: (b.c).a = a.b.c [serial 2096]
 


Theorem (859)                               [serial 2084] 
P [516] <<Rx_Okay and (CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [516] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 858:
Theorem (858) [serial 2096] used for:
  Associativity: (b.c).a = a.b.c [serial 2084]
 


Theorem (860)                               [serial 2072] 
P [516] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and Rx_Okay@now>>
S [516] ->
Q [450] <<Rx_APPROVED()>>
by Assume Present:  P = P@now = P^0 
and theorem 859:
Theorem (859) [serial 2084] used for:
  Assume Present:  P = P@now = P^0  [serial 2072]
 


Theorem (861)                               [serial 2065] 
P [515] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [516] Rx_Okay!
Q [450] <<Rx_APPROVED()>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 843 860:
Theorem (843) [serial 2071] used for:
  applied port output <<pre>> -> <<M(Rx_Okay)>> [serial 2065]
 
Theorem (860) [serial 2072] used for:
  applied port output <<pre and Rx_Okay@now>> -> <<post>> [serial 2065]
 


Theorem (862)                               [serial 2335] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [413] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (863)                               [serial 2308] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [413] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 862:
Theorem (862) [serial 2335] used for:
    normalization of [serial 2308]
 


Theorem (864)                               [serial 2258] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [413] <<Rx_VALID()>>
by Substitution of Assertion Labels
and theorem 863:
Theorem (863) [serial 2308] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2258]
 


Theorem (865)                               [serial 2337] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [414] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (866)                               [serial 2309] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [414] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 865:
Theorem (865) [serial 2337] used for:
    normalization of [serial 2309]
 


Theorem (867)                               [serial 2259] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [414] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 866:
Theorem (866) [serial 2309] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2259]
 


Theorem (868)                               [serial 2288] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (869)                               [serial 2260] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 868:
Theorem (868) [serial 2288] used for:
    normalization of [serial 2260]
 


Theorem (870)                               [serial 2232] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 864 867 869:
Theorem (864) [serial 2258] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2232]
 
Theorem (867) [serial 2259] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2232]
 
Theorem (869) [serial 2260] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2232]
 


Theorem (871)                               [serial 2218] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 870:
Theorem (870) [serial 2232] used for:
    normalization of [serial 2218]
 


Theorem (872)                               [serial 2203] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 871:
Theorem (871) [serial 2218] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2203]
 


Theorem (873)                               [serial 2177] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Law of And-Simplification:  P and P is P
and theorem 872:
Theorem (872) [serial 2203] used for:
  Law of And-Simplification:  P and P is P [serial 2177]
 


Theorem (874)                               [serial 2165] 
P [517] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and VTBI = myRx.vtbi and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 873:
Theorem (873) [serial 2177] used for:
    normalization of [serial 2165]
 


Theorem (875)                               [serial 2135] 
P [517] <<VTBI = myRx.vtbi and CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 874:
Theorem (874) [serial 2165] used for:
  Associativity: (b.c).a = a.b.c [serial 2135]
 


Theorem (876)                               [serial 2121] 
P [517] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and VTBI = myRx.vtbi>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 875:
Theorem (875) [serial 2135] used for:
    normalization of [serial 2121]
 


Theorem (877)                               [serial 2108] 
P [517] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and VTBI = myRx.vtbi>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 876:
Theorem (876) [serial 2121] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2108]
 


Theorem (878)                               [serial 2097] 
P [517] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
VTBI = myRx.vtbi>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 877:
Theorem (877) [serial 2108] used for:
  Associativity: (b.c).a = a.b.c [serial 2097]
 


Theorem (879)                               [serial 2085] 
P [517] <<VTBI = myRx.vtbi and (CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 878:
Theorem (878) [serial 2097] used for:
  Associativity: (b.c).a = a.b.c [serial 2085]
 


Theorem (880)                               [serial 2073] 
P [517] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (VTBI = (myRx.vtbi))@now>>
S [517] ->
Q [450] <<Rx_APPROVED()>>
by Assume Present:  P = P@now = P^0 
and theorem 879:
Theorem (879) [serial 2085] used for:
  Assume Present:  P = P@now = P^0  [serial 2073]
 


Theorem (881)                               [serial 2118] 
P [517] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and VTBI = myRx.vtbi>>
S [517] ->
Q [517] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (882)                               [serial 2109] 
P [517] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
VTBI = myRx.vtbi>>
S [517] ->
Q [517] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 881:
Theorem (881) [serial 2118] used for:
  Associativity: (b.c).a = a.b.c [serial 2109]
 


Theorem (883)                               [serial 2098] 
P [517] <<VTBI = myRx.vtbi and (CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [517] ->
Q [517] <<true>>
by Associativity: (b.c).a = a.b.c
and theorem 882:
Theorem (882) [serial 2109] used for:
  Associativity: (b.c).a = a.b.c [serial 2098]
 


Theorem (884)                               [serial 2086] 
P [517] <<VTBI = myRx.vtbi and (CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [517] ->
Q [517] <<VTBI = VTBI>>
by Equality Law (idistr):  a=a <-> true
and theorem 883:
Theorem (883) [serial 2098] used for:
  Equality Law (idistr):  a=a <-> true [serial 2086]
 


Theorem (885)                               [serial 2074] 
P [517] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (VTBI = (myRx.vtbi))@now>>
S [517] ->
Q [517] <<(VTBI = VTBI)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 884:
Theorem (884) [serial 2086] used for:
  Assume Present:  P = P@now = P^0  [serial 2074]
 


Theorem (886)                               [serial 2066] 
P [515] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [517] VTBI!(myRx.vtbi)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 880 885:
Theorem (880) [serial 2073] used for:
  applied port output <<pre and (VTBI=myRx.vtbi)@now>> -> <<post>> [serial 2066]
 
Theorem (885) [serial 2074] used for:
  applied port output <<pre and (VTBI=myRx.vtbi)@now>> -> <<(VTBI=VTBI)@now>> [serial 2066]
 


Theorem (887)                               [serial 2319] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [413] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (888)                               [serial 2300] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [413] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 887:
Theorem (887) [serial 2319] used for:
    normalization of [serial 2300]
 


Theorem (889)                               [serial 2246] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [413] <<Rx_VALID()>>
by Substitution of Assertion Labels
and theorem 888:
Theorem (888) [serial 2300] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2246]
 


Theorem (890)                               [serial 2321] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [414] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (891)                               [serial 2301] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [414] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 890:
Theorem (890) [serial 2321] used for:
    normalization of [serial 2301]
 


Theorem (892)                               [serial 2247] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [414] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 891:
Theorem (891) [serial 2301] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2247]
 


Theorem (893)                               [serial 2272] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (894)                               [serial 2248] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 893:
Theorem (893) [serial 2272] used for:
    normalization of [serial 2248]
 


Theorem (895)                               [serial 2224] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 889 892 894:
Theorem (889) [serial 2246] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2224]
 
Theorem (892) [serial 2247] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2224]
 
Theorem (894) [serial 2248] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2224]
 


Theorem (896)                               [serial 2214] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 895:
Theorem (895) [serial 2224] used for:
    normalization of [serial 2214]
 


Theorem (897)                               [serial 2179] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 896:
Theorem (896) [serial 2214] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2179]
 


Theorem (898)                               [serial 2166] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 897:
Theorem (897) [serial 2179] used for:
    normalization of [serial 2166]
 


Theorem (899)                               [serial 2137] 
P [518] <<Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [518] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 898:
Theorem (898) [serial 2166] used for:
  Associativity: (b.c).a = a.b.c [serial 2137]
 


Theorem (900)                               [serial 2122] 
P [518] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [518] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 899:
Theorem (899) [serial 2137] used for:
    normalization of [serial 2122]
 


Theorem (901)                               [serial 2110] 
P [518] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [518] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 900:
Theorem (900) [serial 2122] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2110]
 


Theorem (902)                               [serial 2099] 
P [518] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [518] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 901:
Theorem (901) [serial 2110] used for:
  Associativity: (b.c).a = a.b.c [serial 2099]
 


Theorem (903)                               [serial 2087] 
P [518] <<Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and (CLINICIAN_APPROVED_SOFT_LIMIT and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [518] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 902:
Theorem (902) [serial 2099] used for:
  Associativity: (b.c).a = a.b.c [serial 2087]
 


Theorem (904)                               [serial 2075] 
P [518] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Square_Bolus_Rate = (myDrugRecord.square_bolus_rate_typical))@now>>
S [518] ->
Q [450] <<Rx_APPROVED()>>
by Assume Present:  P = P@now = P^0 
and theorem 903:
Theorem (903) [serial 2087] used for:
  Assume Present:  P = P@now = P^0  [serial 2075]
 


Theorem (905)                               [serial 2208] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [518] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (906)                               [serial 2204] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [518] <<myDrugRecord.square_bolus_rate_typical = myDrugRecord.square_bolus_rate_typical>>
by Equality Law (idistr):  a=a <-> true
and theorem 905:
Theorem (905) [serial 2208] used for:
  Equality Law (idistr):  a=a <-> true [serial 2204]
 


Theorem (907)                               [serial 2181] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [518] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Substitution in Postcondition of All Equivalents in Precondition
and theorem 906:
Theorem (906) [serial 2204] used for:
  Substitution in Postcondition of All Equivalents in Precondition
 substituting in postcondition all equivalents in precondition [serial 2181]
 


Theorem (908)                               [serial 2167] 
P [518] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [518] ->
Q [518] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 907:
Theorem (907) [serial 2181] used for:
    normalization of [serial 2167]
 


Theorem (909)                               [serial 2139] 
P [518] <<Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [518] ->
Q [518] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 908:
Theorem (908) [serial 2167] used for:
  Associativity: (b.c).a = a.b.c [serial 2139]
 


Theorem (910)                               [serial 2123] 
P [518] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [518] ->
Q [518] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 909:
Theorem (909) [serial 2139] used for:
    normalization of [serial 2123]
 


Theorem (911)                               [serial 2111] 
P [518] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [518] ->
Q [518] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Substitution of Assertion Labels
and theorem 910:
Theorem (910) [serial 2123] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2111]
 


Theorem (912)                               [serial 2100] 
P [518] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical>>
S [518] ->
Q [518] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 911:
Theorem (911) [serial 2111] used for:
  Associativity: (b.c).a = a.b.c [serial 2100]
 


Theorem (913)                               [serial 2088] 
P [518] <<Square_Bolus_Rate = myDrugRecord.square_bolus_rate_typical and (CLINICIAN_APPROVED_SOFT_LIMIT and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [518] ->
Q [518] <<SQUARE_BOLUS_RATE = Square_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 912:
Theorem (912) [serial 2100] used for:
  Associativity: (b.c).a = a.b.c [serial 2088]
 


Theorem (914)                               [serial 2076] 
P [518] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Square_Bolus_Rate = (myDrugRecord.square_bolus_rate_typical))@now>>
S [518] ->
Q [518] <<(Square_Bolus_Rate = SQUARE_BOLUS_RATE)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 913:
Theorem (913) [serial 2088] used for:
  Assume Present:  P = P@now = P^0  [serial 2076]
 


Theorem (915)                               [serial 2067] 
P [515] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [518] Square_Bolus_Rate!(myDrugRecord.square_bolus_rate_typical)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 904 914:
Theorem (904) [serial 2075] used for:
  applied port output <<pre and (Square_Bolus_Rate=myDrugRecord.square_bolus_rate_typical)@now>> -> <<post>> [serial 2067]
 
Theorem (914) [serial 2076] used for:
  applied port output <<pre and (Square_Bolus_Rate=myDrugRecord.square_bolus_rate_typical)@now>> -> <<(Square_Bolus_Rate=SQUARE_BOLUS_RATE)@now>> [serial 2067]
 


Theorem (916)                               [serial 2323] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [413] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (917)                               [serial 2302] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [413] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 916:
Theorem (916) [serial 2323] used for:
    normalization of [serial 2302]
 


Theorem (918)                               [serial 2249] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [413] <<Rx_VALID()>>
by Substitution of Assertion Labels
and theorem 917:
Theorem (917) [serial 2302] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2249]
 


Theorem (919)                               [serial 2325] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [414] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (920)                               [serial 2303] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [414] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 919:
Theorem (919) [serial 2325] used for:
    normalization of [serial 2303]
 


Theorem (921)                               [serial 2250] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [414] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 920:
Theorem (920) [serial 2303] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2250]
 


Theorem (922)                               [serial 2276] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (923)                               [serial 2251] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 922:
Theorem (922) [serial 2276] used for:
    normalization of [serial 2251]
 


Theorem (924)                               [serial 2226] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 918 921 923:
Theorem (918) [serial 2249] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2226]
 
Theorem (921) [serial 2250] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2226]
 
Theorem (923) [serial 2251] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2226]
 


Theorem (925)                               [serial 2215] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 924:
Theorem (924) [serial 2226] used for:
    normalization of [serial 2215]
 


Theorem (926)                               [serial 2183] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 925:
Theorem (925) [serial 2215] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2183]
 


Theorem (927)                               [serial 2168] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Max_Drug_Per_Hour = myRx.max_drug_per_hour and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 926:
Theorem (926) [serial 2183] used for:
    normalization of [serial 2168]
 


Theorem (928)                               [serial 2141] 
P [519] <<Max_Drug_Per_Hour = myRx.max_drug_per_hour and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [519] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 927:
Theorem (927) [serial 2168] used for:
  Associativity: (b.c).a = a.b.c [serial 2141]
 


Theorem (929)                               [serial 2124] 
P [519] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [519] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 928:
Theorem (928) [serial 2141] used for:
    normalization of [serial 2124]
 


Theorem (930)                               [serial 2112] 
P [519] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [519] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 929:
Theorem (929) [serial 2124] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2112]
 


Theorem (931)                               [serial 2101] 
P [519] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [519] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 930:
Theorem (930) [serial 2112] used for:
  Associativity: (b.c).a = a.b.c [serial 2101]
 


Theorem (932)                               [serial 2089] 
P [519] <<Max_Drug_Per_Hour = myRx.max_drug_per_hour and (CLINICIAN_APPROVED_SOFT_LIMIT and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [519] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 931:
Theorem (931) [serial 2101] used for:
  Associativity: (b.c).a = a.b.c [serial 2089]
 


Theorem (933)                               [serial 2077] 
P [519] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Max_Drug_Per_Hour = (myRx.max_drug_per_hour))@now>>
S [519] ->
Q [450] <<Rx_APPROVED()>>
by Assume Present:  P = P@now = P^0 
and theorem 932:
Theorem (932) [serial 2089] used for:
  Assume Present:  P = P@now = P^0  [serial 2077]
 


Theorem (934)                               [serial 2209] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [519] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (935)                               [serial 2205] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [519] <<myRx.max_drug_per_hour = myRx.max_drug_per_hour>>
by Equality Law (idistr):  a=a <-> true
and theorem 934:
Theorem (934) [serial 2209] used for:
  Equality Law (idistr):  a=a <-> true [serial 2205]
 


Theorem (936)                               [serial 2185] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [519] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Substitution in Postcondition of All Equivalents in Precondition
and theorem 935:
Theorem (935) [serial 2205] used for:
  Substitution in Postcondition of All Equivalents in Precondition
 substituting in postcondition all equivalents in precondition [serial 2185]
 


Theorem (937)                               [serial 2169] 
P [519] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Max_Drug_Per_Hour = myRx.max_drug_per_hour and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [519] ->
Q [519] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 936:
Theorem (936) [serial 2185] used for:
    normalization of [serial 2169]
 


Theorem (938)                               [serial 2143] 
P [519] <<Max_Drug_Per_Hour = myRx.max_drug_per_hour and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [519] ->
Q [519] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Associativity: (b.c).a = a.b.c
and theorem 937:
Theorem (937) [serial 2169] used for:
  Associativity: (b.c).a = a.b.c [serial 2143]
 


Theorem (939)                               [serial 2125] 
P [519] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [519] ->
Q [519] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 938:
Theorem (938) [serial 2143] used for:
    normalization of [serial 2125]
 


Theorem (940)                               [serial 2113] 
P [519] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [519] ->
Q [519] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Substitution of Assertion Labels
and theorem 939:
Theorem (939) [serial 2125] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2113]
 


Theorem (941)                               [serial 2102] 
P [519] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Max_Drug_Per_Hour = myRx.max_drug_per_hour>>
S [519] ->
Q [519] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Associativity: (b.c).a = a.b.c
and theorem 940:
Theorem (940) [serial 2113] used for:
  Associativity: (b.c).a = a.b.c [serial 2102]
 


Theorem (942)                               [serial 2090] 
P [519] <<Max_Drug_Per_Hour = myRx.max_drug_per_hour and (CLINICIAN_APPROVED_SOFT_LIMIT and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [519] ->
Q [519] <<MAX_DRUG_PER_HOUR = Max_Drug_Per_Hour>>
by Associativity: (b.c).a = a.b.c
and theorem 941:
Theorem (941) [serial 2102] used for:
  Associativity: (b.c).a = a.b.c [serial 2090]
 


Theorem (943)                               [serial 2078] 
P [519] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Max_Drug_Per_Hour = (myRx.max_drug_per_hour))@now>>
S [519] ->
Q [519] <<(Max_Drug_Per_Hour = MAX_DRUG_PER_HOUR)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 942:
Theorem (942) [serial 2090] used for:
  Assume Present:  P = P@now = P^0  [serial 2078]
 


Theorem (944)                               [serial 2068] 
P [515] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [519] Max_Drug_Per_Hour!(myRx.max_drug_per_hour)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 933 943:
Theorem (933) [serial 2077] used for:
  applied port output <<pre and (Max_Drug_Per_Hour=myRx.max_drug_per_hour)@now>> -> <<post>> [serial 2068]
 
Theorem (943) [serial 2078] used for:
  applied port output <<pre and (Max_Drug_Per_Hour=myRx.max_drug_per_hour)@now>> -> <<(Max_Drug_Per_Hour=MAX_DRUG_PER_HOUR)@now>> [serial 2068]
 


Theorem (945)                               [serial 2327] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [413] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (946)                               [serial 2304] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [413] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 945:
Theorem (945) [serial 2327] used for:
    normalization of [serial 2304]
 


Theorem (947)                               [serial 2252] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [413] <<Rx_VALID()>>
by Substitution of Assertion Labels
and theorem 946:
Theorem (946) [serial 2304] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2252]
 


Theorem (948)                               [serial 2329] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [414] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (949)                               [serial 2305] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [414] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 948:
Theorem (948) [serial 2329] used for:
    normalization of [serial 2305]
 


Theorem (950)                               [serial 2253] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [414] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 949:
Theorem (949) [serial 2305] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2253]
 


Theorem (951)                               [serial 2280] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (952)                               [serial 2254] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 951:
Theorem (951) [serial 2280] used for:
    normalization of [serial 2254]
 


Theorem (953)                               [serial 2228] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 947 950 952:
Theorem (947) [serial 2252] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2228]
 
Theorem (950) [serial 2253] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2228]
 
Theorem (952) [serial 2254] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2228]
 


Theorem (954)                               [serial 2216] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 953:
Theorem (953) [serial 2228] used for:
    normalization of [serial 2216]
 


Theorem (955)                               [serial 2187] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 954:
Theorem (954) [serial 2216] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2187]
 


Theorem (956)                               [serial 2170] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 955:
Theorem (955) [serial 2187] used for:
    normalization of [serial 2170]
 


Theorem (957)                               [serial 2145] 
P [520] <<Patient_Bolus_Rate = myRx.patient_bolus_rate and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [520] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 956:
Theorem (956) [serial 2170] used for:
  Associativity: (b.c).a = a.b.c [serial 2145]
 


Theorem (958)                               [serial 2126] 
P [520] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [520] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 957:
Theorem (957) [serial 2145] used for:
    normalization of [serial 2126]
 


Theorem (959)                               [serial 2114] 
P [520] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [520] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 958:
Theorem (958) [serial 2126] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2114]
 


Theorem (960)                               [serial 2103] 
P [520] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [520] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 959:
Theorem (959) [serial 2114] used for:
  Associativity: (b.c).a = a.b.c [serial 2103]
 


Theorem (961)                               [serial 2091] 
P [520] <<Patient_Bolus_Rate = myRx.patient_bolus_rate and (CLINICIAN_APPROVED_SOFT_LIMIT and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [520] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 960:
Theorem (960) [serial 2103] used for:
  Associativity: (b.c).a = a.b.c [serial 2091]
 


Theorem (962)                               [serial 2079] 
P [520] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Patient_Bolus_Rate = (myRx.patient_bolus_rate))@now>>
S [520] ->
Q [450] <<Rx_APPROVED()>>
by Assume Present:  P = P@now = P^0 
and theorem 961:
Theorem (961) [serial 2091] used for:
  Assume Present:  P = P@now = P^0  [serial 2079]
 


Theorem (963)                               [serial 2210] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [520] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (964)                               [serial 2206] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [520] <<myRx.patient_bolus_rate = myRx.patient_bolus_rate>>
by Equality Law (idistr):  a=a <-> true
and theorem 963:
Theorem (963) [serial 2210] used for:
  Equality Law (idistr):  a=a <-> true [serial 2206]
 


Theorem (965)                               [serial 2189] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi and 
myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [520] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Substitution in Postcondition of All Equivalents in Precondition
and theorem 964:
Theorem (964) [serial 2206] used for:
  Substitution in Postcondition of All Equivalents in Precondition
 substituting in postcondition all equivalents in precondition [serial 2189]
 


Theorem (966)                               [serial 2171] 
P [520] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Patient_Bolus_Rate = myRx.patient_bolus_rate and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [520] ->
Q [520] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 965:
Theorem (965) [serial 2189] used for:
    normalization of [serial 2171]
 


Theorem (967)                               [serial 2147] 
P [520] <<Patient_Bolus_Rate = myRx.patient_bolus_rate and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [520] ->
Q [520] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 966:
Theorem (966) [serial 2171] used for:
  Associativity: (b.c).a = a.b.c [serial 2147]
 


Theorem (968)                               [serial 2127] 
P [520] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [520] ->
Q [520] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 967:
Theorem (967) [serial 2147] used for:
    normalization of [serial 2127]
 


Theorem (969)                               [serial 2115] 
P [520] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [520] ->
Q [520] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Substitution of Assertion Labels
and theorem 968:
Theorem (968) [serial 2127] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2115]
 


Theorem (970)                               [serial 2104] 
P [520] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Patient_Bolus_Rate = myRx.patient_bolus_rate>>
S [520] ->
Q [520] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 969:
Theorem (969) [serial 2115] used for:
  Associativity: (b.c).a = a.b.c [serial 2104]
 


Theorem (971)                               [serial 2092] 
P [520] <<Patient_Bolus_Rate = myRx.patient_bolus_rate and (CLINICIAN_APPROVED_SOFT_LIMIT and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [520] ->
Q [520] <<PATIENT_BOLUS_RATE = Patient_Bolus_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 970:
Theorem (970) [serial 2104] used for:
  Associativity: (b.c).a = a.b.c [serial 2092]
 


Theorem (972)                               [serial 2080] 
P [520] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Patient_Bolus_Rate = (myRx.patient_bolus_rate))@now>>
S [520] ->
Q [520] <<(Patient_Bolus_Rate = PATIENT_BOLUS_RATE)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 971:
Theorem (971) [serial 2092] used for:
  Assume Present:  P = P@now = P^0  [serial 2080]
 


Theorem (973)                               [serial 2069] 
P [515] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [520] Patient_Bolus_Rate!(myRx.patient_bolus_rate)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 962 972:
Theorem (962) [serial 2079] used for:
  applied port output <<pre and (Patient_Bolus_Rate=myRx.patient_bolus_rate)@now>> -> <<post>> [serial 2069]
 
Theorem (972) [serial 2080] used for:
  applied port output <<pre and (Patient_Bolus_Rate=myRx.patient_bolus_rate)@now>> -> <<(Patient_Bolus_Rate=PATIENT_BOLUS_RATE)@now>> [serial 2069]
 


Theorem (974)                               [serial 2331] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [413] <<myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (975)                               [serial 2306] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [413] <<((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 974:
Theorem (974) [serial 2331] used for:
    normalization of [serial 2306]
 


Theorem (976)                               [serial 2255] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [413] <<Rx_VALID()>>
by Substitution of Assertion Labels
and theorem 975:
Theorem (975) [serial 2306] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2255]
 


Theorem (977)                               [serial 2333] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [414] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (978)                               [serial 2307] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [414] <<not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard)))>>
by Normalization
  Normalization Axioms:
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 977:
Theorem (977) [serial 2333] used for:
    normalization of [serial 2307]
 


Theorem (979)                               [serial 2256] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [414] <<not HARD_LIMIT_VIOLATED()>>
by Substitution of Assertion Labels
and theorem 978:
Theorem (978) [serial 2307] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2256]
 


Theorem (980)                               [serial 2284] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [415] <<CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (981)                               [serial 2257] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [415] <<(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 980:
Theorem (980) [serial 2284] used for:
    normalization of [serial 2257]
 


Theorem (982)                               [serial 2230] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [450] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 976 979 981:
Theorem (976) [serial 2255] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2230]
 
Theorem (979) [serial 2256] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2230]
 
Theorem (981) [serial 2257] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2230]
 


Theorem (983)                               [serial 2217] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [450] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 982:
Theorem (982) [serial 2230] used for:
    normalization of [serial 2217]
 


Theorem (984)                               [serial 2191] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 983:
Theorem (983) [serial 2217] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2191]
 


Theorem (985)                               [serial 2172] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Basal_Rate = myRx.basal_rate and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 984:
Theorem (984) [serial 2191] used for:
    normalization of [serial 2172]
 


Theorem (986)                               [serial 2149] 
P [521] <<Basal_Rate = myRx.basal_rate and CLINICIAN_APPROVED_SOFT_LIMIT and not (
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [521] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 985:
Theorem (985) [serial 2172] used for:
  Associativity: (b.c).a = a.b.c [serial 2149]
 


Theorem (987)                               [serial 2128] 
P [521] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Basal_Rate = myRx.basal_rate>>
S [521] ->
Q [450] <<Rx_APPROVED()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 986:
Theorem (986) [serial 2149] used for:
    normalization of [serial 2128]
 


Theorem (988)                               [serial 2116] 
P [521] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Basal_Rate = myRx.basal_rate>>
S [521] ->
Q [450] <<Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 987:
Theorem (987) [serial 2128] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2116]
 


Theorem (989)                               [serial 2105] 
P [521] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Basal_Rate = myRx.basal_rate>>
S [521] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 988:
Theorem (988) [serial 2116] used for:
  Associativity: (b.c).a = a.b.c [serial 2105]
 


Theorem (990)                               [serial 2093] 
P [521] <<Basal_Rate = myRx.basal_rate and (CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [521] ->
Q [450] <<Rx_APPROVED()>>
by Associativity: (b.c).a = a.b.c
and theorem 989:
Theorem (989) [serial 2105] used for:
  Associativity: (b.c).a = a.b.c [serial 2093]
 


Theorem (991)                               [serial 2081] 
P [521] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Basal_Rate = (myRx.basal_rate))@now>>
S [521] ->
Q [450] <<Rx_APPROVED()>>
by Assume Present:  P = P@now = P^0 
and theorem 990:
Theorem (990) [serial 2093] used for:
  Assume Present:  P = P@now = P^0  [serial 2081]
 


Theorem (992)                               [serial 2211] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [521] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (993)                               [serial 2207] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [521] <<myRx.basal_rate = myRx.basal_rate>>
by Equality Law (idistr):  a=a <-> true
and theorem 992:
Theorem (992) [serial 2211] used for:
  Equality Law (idistr):  a=a <-> true [serial 2207]
 


Theorem (994)                               [serial 2193] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and Basal_Rate = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and CLINICIAN_APPROVED_SOFT_LIMIT and 
not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [521] <<BASAL_RATE = Basal_Rate>>
by Substitution in Postcondition of All Equivalents in Precondition
and theorem 993:
Theorem (993) [serial 2207] used for:
  Substitution in Postcondition of All Equivalents in Precondition
 substituting in postcondition all equivalents in precondition [serial 2193]
 


Theorem (995)                               [serial 2173] 
P [521] <<myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard and 
BASAL_RATE = myRx.basal_rate and MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and 
PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and 
VTBI = myRx.vtbi and myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name and Basal_Rate = myRx.basal_rate and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u )>>
S [521] ->
Q [521] <<BASAL_RATE = Basal_Rate>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 994:
Theorem (994) [serial 2193] used for:
    normalization of [serial 2173]
 


Theorem (996)                               [serial 2151] 
P [521] <<Basal_Rate = myRx.basal_rate and CLINICIAN_APPROVED_SOFT_LIMIT and not (
myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (BASAL_RATE = myRx.basal_rate and 
MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour and PATIENT_BOLUS_RATE = myRx.patient_bolus_rate and 
SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical and VTBI = myRx.vtbi) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name)>>
S [521] ->
Q [521] <<BASAL_RATE = Basal_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 995:
Theorem (995) [serial 2173] used for:
  Associativity: (b.c).a = a.b.c [serial 2151]
 


Theorem (997)                               [serial 2129] 
P [521] <<((VTBI = myRx.vtbi) and (SQUARE_BOLUS_RATE = myDrugRecord.square_bolus_rate_typical) and 
(PATIENT_BOLUS_RATE = myRx.patient_bolus_rate) and (MAX_DRUG_PER_HOUR = myRx.max_drug_per_hour) and 
(BASAL_RATE = myRx.basal_rate)) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
(not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Basal_Rate = myRx.basal_rate>>
S [521] ->
Q [521] <<BASAL_RATE = Basal_Rate>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 996:
Theorem (996) [serial 2151] used for:
    normalization of [serial 2129]
 


Theorem (998)                               [serial 2117] 
P [521] <<AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and Rx_VALID() and SOFT_LIMIT_VIOLATED() and 
not HARD_LIMIT_VIOLATED() and CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and Basal_Rate = myRx.basal_rate>>
S [521] ->
Q [521] <<BASAL_RATE = Basal_Rate>>
by Substitution of Assertion Labels
and theorem 997:
Theorem (997) [serial 2129] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2117]
 


Theorem (999)                               [serial 2106] 
P [521] <<CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()) and 
Basal_Rate = myRx.basal_rate>>
S [521] ->
Q [521] <<BASAL_RATE = Basal_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 998:
Theorem (998) [serial 2117] used for:
  Associativity: (b.c).a = a.b.c [serial 2106]
 


Theorem (1000)                               [serial 2094] 
P [521] <<Basal_Rate = myRx.basal_rate and (CLINICIAN_APPROVED_SOFT_LIMIT and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and (AXIOM_Rx_IS_INTENDED_PRESCRIPTION() and 
Rx_VALID() and SOFT_LIMIT_VIOLATED() and not HARD_LIMIT_VIOLATED()))>>
S [521] ->
Q [521] <<BASAL_RATE = Basal_Rate>>
by Associativity: (b.c).a = a.b.c
and theorem 999:
Theorem (999) [serial 2106] used for:
  Associativity: (b.c).a = a.b.c [serial 2094]
 


Theorem (1001)                               [serial 2082] 
P [521] <<((SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Basal_Rate = (myRx.basal_rate))@now>>
S [521] ->
Q [521] <<(Basal_Rate = BASAL_RATE)@now>>
by Assume Present:  P = P@now = P^0 
and theorem 1000:
Theorem (1000) [serial 2094] used for:
  Assume Present:  P = P@now = P^0  [serial 2082]
 


Theorem (1002)                               [serial 2070] 
P [515] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [521] Basal_Rate!(myRx.basal_rate)
Q [450] <<Rx_APPROVED()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 991 1001:
Theorem (991) [serial 2081] used for:
  applied port output <<pre and (Basal_Rate=myRx.basal_rate)@now>> -> <<post>> [serial 2070]
 
Theorem (1001) [serial 2082] used for:
  applied port output <<pre and (Basal_Rate=myRx.basal_rate)@now>> -> <<(Basal_Rate=BASAL_RATE)@now>> [serial 2070]
 


Theorem (1003)                               [serial 1069] 
P [515] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and CLINICIAN_APPROVED_SOFT_LIMIT@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [516] Rx_Okay!
&
VTBI!(myRx.vtbi)
&
Square_Bolus_Rate!(myDrugRecord.square_bolus_rate_typical)
&
Max_Drug_Per_Hour!(myRx.max_drug_per_hour)
&
Patient_Bolus_Rate!(myRx.patient_bolus_rate)
&
Basal_Rate!(myRx.basal_rate)
Q [450] <<Rx_APPROVED()>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 861 886 915 944 973 1002:
Theorem (861) [serial 2065] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1069]
 
Theorem (886) [serial 2066] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1069]
 
Theorem (915) [serial 2067] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1069]
 
Theorem (944) [serial 2068] used for:
  <<P>> S4 <<Q>> in concurrent composition for [serial 1069]
 
Theorem (973) [serial 2069] used for:
  <<P>> S5 <<Q>> in concurrent composition for [serial 1069]
 
Theorem (1002) [serial 2070] used for:
  <<P>> S6 <<Q>> in concurrent composition for [serial 1069]
 


Theorem (1004)                               [serial 1070] 
P [523] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and (not CLINICIAN_APPROVED_SOFT_LIMIT)@now and 
not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [523] ->
Q [442] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1005)                               [serial 1071] 
P [525] <<(true) and stop@now and not (exists u:time
  in tops,,now 
  that Check_Rx@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [524] ->
Q [458] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1006)                               [serial 1072] 
P [525] <<(true) and stop@now and not (exists u:time
  in tops,,now 
  that (DRUG_LIBRARY[myRx.code])@u ) and not (exists u:time
  in tops,,now 
  that (NDF(#PCA_Properties::Drug_Library_Size))@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [524] ->
Q [458] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1007)                               [serial 1073] 
P [525] <<(Rx_APPROVED()) and stop@now and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [524] ->
Q [458] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1008)                               [serial 1074] 
P [525] <<(SOFT_LIMIT_VIOLATED() and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
AXIOM_Rx_IS_INTENDED_PRESCRIPTION()) and stop@now and not (exists u:time
  in tops,,now 
  that CLINICIAN_APPROVED_SOFT_LIMIT@u ) and not (exists u:time
  in tops,,now 
  that (not CLINICIAN_APPROVED_SOFT_LIMIT)@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [524] ->
Q [458] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1009)                               [serial 1075] 
P [525] <<(NDF(#PCA_Properties::Drug_Library_Size) or not Rx_VALID() or HARD_LIMIT_VIOLATED() or 
(SOFT_LIMIT_VIOLATED() and not CLINICIAN_APPROVED_SOFT_LIMIT)) and stop@now and 
not (exists u:time
  in tops,,now 
  that stop@u )>>
S [524] ->
Q [458] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1010)                               [serial 1049] 
P [412] << >>
S [436] ->
Q [412] <<Prescription_Checker.imp proof obligations>>
by Initial Thread Obligations
and theorems 566 567 568 569 570 572 573 578 580 581 587 591 594 597 600 617 629 811 827 1003 1004 1005 1006 1007 1008 1009:
Theorem (566) [serial 1050] used for:
  <<M(SoftLimit)>> -> <<I>> from invariant I when complete state SoftLimit has Assertion <<M(SoftLimit)>> in its definition.
 
Theorem (567) [serial 1051] used for:
  <<M(BadRx)>> -> <<I>> from invariant I when complete state BadRx has Assertion <<M(BadRx)>> in its definition.
 
Theorem (568) [serial 1052] used for:
  <<M(WaitForRx)>> -> <<I>> from invariant I when complete state WaitForRx has Assertion <<M(WaitForRx)>> in its definition.
 
Theorem (569) [serial 1053] used for:
  <<M(GettingDrugRecord)>> -> <<I>> from invariant I when complete state GettingDrugRecord has Assertion <<M(GettingDrugRecord)>> in its definition.
 
Theorem (570) [serial 1054] used for:
  <<M(OutputRx)>> -> <<I>> from invariant I when complete state OutputRx has Assertion <<M(OutputRx)>> in its definition.
 
Theorem (572) [serial 1055] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state HardLimitsMet, <<M(HardLimitsMet)>> -> <<e1 or e2 or . . . en>>
 
Theorem (573) [serial 1056] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state Start, <<M(Start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (578) [serial 1057] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state RxValid, <<M(RxValid)>> -> <<e1 or e2 or . . . en>>
 
Theorem (580) [serial 1058] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckRx, <<M(CheckRx)>> -> <<e1 or e2 or . . . en>>
 
Theorem (581) [serial 1059] used for:
   <<M(Start)>> -> <<M(WaitForRx)>> for go:Start-[ ]->WaitForRx{};
 
Theorem (587) [serial 1060] used for:
   <<M(WaitForRx) and x>> A <<M(GettingDrugRecord)>> for getrx:WaitForRx-[x]->GettingDrugRecord{A};
 
Theorem (591) [serial 1061] used for:
   <<M(GettingDrugRecord) and x>> A <<M(CheckRx)>> for getdr:GettingDrugRecord-[x]->CheckRx{A};
 
Theorem (594) [serial 1062] used for:
   <<M(GettingDrugRecord) and x>> -> <<M(BadRx)>> for dnil:GettingDrugRecord-[x]->BadRx{};
 
Theorem (597) [serial 1063] used for:
   <<M(CheckRx) and x>> -> <<M(RxValid)>> for check:CheckRx-[x]->RxValid{};
 
Theorem (600) [serial 1064] used for:
   <<M(CheckRx) and x>> -> <<M(BadRx)>> for badrx:CheckRx-[x]->BadRx{};
 
Theorem (617) [serial 1065] used for:
   <<M(RxValid) and x>> -> <<M(HardLimitsMet)>> for okhard:RxValid-[x]->HardLimitsMet{};
 
Theorem (629) [serial 1066] used for:
   <<M(RxValid) and x>> A <<M(BadRx)>> for badhard:RxValid-[x]->BadRx{A};
 
Theorem (811) [serial 1067] used for:
   <<M(HardLimitsMet) and x>> A <<M(OutputRx)>> for oksoft:HardLimitsMet-[x]->OutputRx{A};
 
Theorem (827) [serial 1068] used for:
   <<M(HardLimitsMet) and x>> A <<M(SoftLimit)>> for badsoft:HardLimitsMet-[x]->SoftLimit{A};
 
Theorem (1003) [serial 1069] used for:
   <<M(SoftLimit) and x>> A <<M(OutputRx)>> for yessoft:SoftLimit-[x]->OutputRx{A};
 
Theorem (1004) [serial 1070] used for:
   <<M(SoftLimit) and x>> -> <<M(WaitForRx)>> for nosoft:SoftLimit-[x]->WaitForRx{};
 
Theorem (1005) [serial 1071] used for:
   <<M(WaitForRx) and x>> -> <<M(Done)>> for quit:WaitForRx-[x]->Done{};
 
Theorem (1006) [serial 1072] used for:
   <<M(GettingDrugRecord) and x>> -> <<M(Done)>> for quit:GettingDrugRecord-[x]->Done{};
 
Theorem (1007) [serial 1073] used for:
   <<M(OutputRx) and x>> -> <<M(Done)>> for quit:OutputRx-[x]->Done{};
 
Theorem (1008) [serial 1074] used for:
   <<M(SoftLimit) and x>> -> <<M(Done)>> for quit:SoftLimit-[x]->Done{};
 
Theorem (1009) [serial 1075] used for:
   <<M(BadRx) and x>> -> <<M(Done)>> for quit:BadRx-[x]->Done{};
 


Theorem (1011)                               [serial 1077] 
P [232] <<HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1012)                               [serial 1078] 
P [234] <<((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
PB_DURATION()>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1013)                               [serial 1079] 
P [239] <<((la = StartSquareBolus) or (la = ResumeSquareBolus)) and (Infusion_Flow_Rate@now = Square_Bolus_Rate@now) and 
PB_DURATION()>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1014)                               [serial 1080] 
P [244] <<((la = StopButton) or (la = SafetyStopPump)) and (Infusion_Flow_Rate@now = 0)>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1015)                               [serial 1081] 
P [228] <<Rx_APPROVED() and PB_DURATION()>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1016)                               [serial 1082] 
P [224] <<true>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1017)                               [serial 1083] 
P [230] <<(la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
PB_DURATION()>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1018)                               [serial 1084] 
P [236] <<(la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1019)                               [serial 1085] 
P [241] <<((la = KVOcommand) or (la = KVOalarm) or (la = TooMuchJuice)) and PB_DURATION() and 
(Infusion_Flow_Rate@now = #PCA_Properties::KVO_Rate)>>
S [199] ->
Q [199] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1020)                               [serial 1086] 
P [223] <<true>>
S [223] ->
Q [223] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1021)                               [serial 2359] 
P [226] <<Rx_APPROVED()>>
S [226] ->
Q [226] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1022)                               [serial 2357] 
P [226] <<Rx_APPROVED()>>
S [226] ->
Q [226] <<not 0 < Patient_Bolus_Rate or 0 < Patient_Bolus_Rate>>
by Law of Excluded Middle: P or not P is tautology
and theorem 1021:
Theorem (1021) [serial 2359] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2357]
 


Theorem (1023)                               [serial 2355] 
P [226] <<Rx_APPROVED()>>
S [226] ->
Q [226] <<(not (0 < Patient_Bolus_Rate)) or 0 < Patient_Bolus_Rate>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1022:
Theorem (1022) [serial 2357] used for:
    normalization of [serial 2355]
 


Theorem (1024)                               [serial 2353] 
P [226] <<Rx_APPROVED()>>
S [226] ->
Q [226] <<Patient_Bolus_Rate <= 0 or 0 < Patient_Bolus_Rate>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1023:
Theorem (1023) [serial 2355] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2353]
 


Theorem (1025)                               [serial 1087] 
P [226] <<Rx_APPROVED()>>
S [226] ->
Q [226] <<(Patient_Bolus_Rate <= 0) or (Patient_Bolus_Rate > 0)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1024:
Theorem (1024) [serial 2353] used for:
    normalization of [serial 1087]
 


Theorem (1026)                               [serial 1088] 
P [250] <<true>>
S [250] ->
Q [224] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1027)                               [serial 2360] 
P [252] <<Rx_APPROVED() and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u ) and true>>
S [252] ->
Q [226] <<Rx_APPROVED()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1028)                               [serial 1089] 
P [252] <<(true) and (Rx_APPROVED())@now and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [252] ->
Q [226] <<Rx_APPROVED()>>
by Assume Present:  P = P@now = P^0 
and theorem 1027:
Theorem (1027) [serial 2360] used for:
  Assume Present:  P = P@now = P^0  [serial 1089]
 


Theorem (1029)                               [serial 1090] 
P [226] <<(Rx_APPROVED()) and (Patient_Bolus_Rate <= 0)>>
S [253] ->
Q [245] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1030)                               [serial 2365] 
P [226] <<Rx_APPROVED() and 0 < Patient_Bolus_Rate>>
S [226] ->
Q [255] <<Rx_APPROVED() and 0 < Patient_Bolus_Rate>>
by Identity (id):  P->P is tautology


Theorem (1031)                               [serial 2361] 
P [226] <<(Rx_APPROVED()) and (Patient_Bolus_Rate > 0)>>
S [226] ->
Q [255] <<Rx_APPROVED() and (Patient_Bolus_Rate > 0)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1030:
Theorem (1030) [serial 2365] used for:
    normalization of [serial 2361]
 


Theorem (1032)                               [serial 2367] 
P [258] <<PB_DURATION() and Rx_APPROVED()>>
S [228] ->
Q [228] <<PB_DURATION() and Rx_APPROVED()>>
by Identity (id):  P->P is tautology


Theorem (1033)                               [serial 2362] 
P [258] <<Rx_APPROVED() and PB_DURATION()>>
S [228] ->
Q [228] <<Rx_APPROVED() and PB_DURATION()>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1032:
Theorem (1032) [serial 2367] used for:
    normalization of [serial 2362]
 


Theorem (1034)                               [serial 2386] 
P [255] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [258] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1035)                               [serial 2383] 
P [255] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [258] <<((Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1034:
Theorem (1034) [serial 2386] used for:
    normalization of [serial 2383]
 


Theorem (1036)                               [serial 2382] 
P [255] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [258] <<((Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())))>>
by Associativity: (b.c).a = a.b.c
and theorem 1035:
Theorem (1035) [serial 2383] used for:
  Associativity: (b.c).a = a.b.c [serial 2382]
 


Theorem (1037)                               [serial 2381] 
P [255] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [258] <<true and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Law of And-Simplification:  P and true is P
and theorem 1036:
Theorem (1036) [serial 2382] used for:
  Law of And-Simplification:  P and true is P [serial 2381]
 


Theorem (1038)                               [serial 2377] 
P [255] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [258] <<(VTBI/Patient_Bolus_Rate) = (VTBI/Patient_Bolus_Rate) and (Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()))>>
by Equality Law (idistr):  a=a <-> true
and theorem 1037:
Theorem (1037) [serial 2381] used for:
  Equality Law (idistr):  a=a <-> true [serial 2377]
 


Theorem (1039)                               [serial 2374] 
P [255] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [258] <<((VTBI/Patient_Bolus_Rate) = (VTBI/Patient_Bolus_Rate)) and (Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1038:
Theorem (1038) [serial 2377] used for:
    normalization of [serial 2374]
 


Theorem (1040)                               [serial 2388] 
P [255] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [256] <<Patient_Bolus_Rate < 0 or 0 < Patient_Bolus_Rate>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1041)                               [serial 2384] 
P [255] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [256] <<((0 < Patient_Bolus_Rate) or (Patient_Bolus_Rate < 0))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1040:
Theorem (1040) [serial 2388] used for:
    normalization of [serial 2384]
 


Theorem (1042)                               [serial 2380] 
P [255] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [256] <<Patient_Bolus_Rate <> 0>>
by Replace inequality with not equality:  a<>b  iff  not(a=b)
and theorem 1041:
Theorem (1041) [serial 2384] used for:
  Replace inequality with not equality:  a<>b  iff  not(a=b) [serial 2380]
 


Theorem (1043)                               [serial 2375] 
P [255] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and 0 < Patient_Bolus_Rate>>
S [256] ->
Q [256] <<Patient_Bolus_Rate <> 0>>
by Associativity: (b.c).a = a.b.c
and theorem 1042:
Theorem (1042) [serial 2380] used for:
  Associativity: (b.c).a = a.b.c [serial 2375]
 


Theorem (1044)                               [serial 2373] 
P [255] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and 0 < Patient_Bolus_Rate>>
S [256] pb_duration := VTBI/Patient_Bolus_Rate
Q [258] <<(pb_duration = (VTBI/Patient_Bolus_Rate)) and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorems 1039 1043:
Theorem (1039) [serial 2374] used for:
  applied wp for assignment [serial 2373]
 
Theorem (1043) [serial 2375] used for:
  applied  <<pre>> -> <<d <> 0>> for <<pre>> pb_duration := VTBI/Patient_Bolus_Rate <<post>> [serial 2373]
 


Theorem (1045)                               [serial 2369] 
P [255] <<Rx_APPROVED() and 0 < Patient_Bolus_Rate>>
S [256] pb_duration := VTBI/Patient_Bolus_Rate
Q [258] <<PB_DURATION() and Rx_APPROVED()>>
by Substitution of Assertion Labels
and theorem 1044:
Theorem (1044) [serial 2373] used for:
  substituted Assertions' predicates for  labels  [serial 2369]
 


Theorem (1046)                               [serial 2363] 
P [255] <<Rx_APPROVED() and (Patient_Bolus_Rate > 0)>>
S [256] pb_duration := VTBI/Patient_Bolus_Rate
Q [258] <<Rx_APPROVED() and PB_DURATION()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1045:
Theorem (1045) [serial 2369] used for:
    normalization of [serial 2363]
 


Theorem (1047)                               [serial 1091] 
P [226] <<(Rx_APPROVED()) and (Patient_Bolus_Rate > 0)>>
S [255] <<Rx_APPROVED() and (Patient_Bolus_Rate > 0)>>
pb_duration := VTBI/Patient_Bolus_Rate
<<Rx_APPROVED() and PB_DURATION()>>
Q [228] <<Rx_APPROVED() and PB_DURATION()>>
by Introduction of Existential Quantification (bl.aab)
and theorems 1031 1033 1046:
Theorem (1031) [serial 2361] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1091]
 
Theorem (1033) [serial 2362] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1091]
 
Theorem (1046) [serial 2363] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1091]
 


Theorem (1048)                               [serial 2406] 
P [267] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [230] ->
Q [230] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1049)                               [serial 2398] 
P [267] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()))>>
S [230] ->
Q [230] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1048:
Theorem (1048) [serial 2406] used for:
  Associativity: (b.c).a = a.b.c [serial 2398]
 


Theorem (1050)                               [serial 2394] 
P [267] <<(la = StartPriming) and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
S [230] ->
Q [230] <<(la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
(pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1049:
Theorem (1049) [serial 2398] used for:
    normalization of [serial 2394]
 


Theorem (1051)                               [serial 2391] 
P [267] <<(la = StartPriming) and Rx_APPROVED() and PB_DURATION() and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
S [230] ->
Q [230] <<(la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1050:
Theorem (1050) [serial 2394] used for:
  substituted Assertions' predicates for  labels  [serial 2391]
 


Theorem (1052)                               [serial 2421] 
P [261] <<Begin_Priming@now and pb_duration = (VTBI/Patient_Bolus_Rate) and Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and (CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
S [263] ->
Q [264] <<Begin_Priming@now and pb_duration = (VTBI/Patient_Bolus_Rate) and Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1053)                               [serial 2415] 
P [261] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and pb_duration = (VTBI/Patient_Bolus_Rate) and 
Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u )>>
S [263] ->
Q [264] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1052:
Theorem (1052) [serial 2421] used for:
    normalization of [serial 2415]
 


Theorem (1054)                               [serial 2414] 
P [261] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and pb_duration = (VTBI/Patient_Bolus_Rate) and 
Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u )>>
S [263] ->
Q [264] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and true and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Law of And-Simplification:  P and true is P
and theorem 1053:
Theorem (1053) [serial 2415] used for:
  Law of And-Simplification:  P and true is P [serial 2414]
 


Theorem (1055)                               [serial 2412] 
P [261] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and pb_duration = (VTBI/Patient_Bolus_Rate) and 
Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u )>>
S [263] ->
Q [264] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and StartPriming = StartPriming and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Equality Law (idistr):  a=a <-> true
and theorem 1054:
Theorem (1054) [serial 2414] used for:
  Equality Law (idistr):  a=a <-> true [serial 2412]
 


Theorem (1056)                               [serial 2409] 
P [261] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and pb_duration = (VTBI/Patient_Bolus_Rate) and 
Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u )>>
S [263] la := StartPriming
Q [264] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1055:
Theorem (1055) [serial 2412] used for:
  applied wp for assignment [serial 2409]
 


Theorem (1057)                               [serial 2407] 
P [261] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())) and Begin_Priming@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u )>>
S [263] la := StartPriming
Q [264] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1056:
Theorem (1056) [serial 2409] used for:
  Associativity: (b.c).a = a.b.c [serial 2407]
 


Theorem (1058)                               [serial 2400] 
P [261] <<Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and (pb_duration = (VTBI/Patient_Bolus_Rate) and 
(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())))>>
S [263] la := StartPriming
Q [264] <<Begin_Priming@now and StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
by Associativity: (b.c).a = a.b.c
and theorem 1057:
Theorem (1057) [serial 2407] used for:
  Associativity: (b.c).a = a.b.c [serial 2400]
 


Theorem (1059)                               [serial 2395] 
P [261] <<((Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and (pb_duration = (VTBI/Patient_Bolus_Rate))) and 
Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u )>>
S [263] la := StartPriming
Q [264] <<Begin_Priming@now and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and (la = StartPriming) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1058:
Theorem (1058) [serial 2400] used for:
    normalization of [serial 2395]
 


Theorem (1060)                               [serial 2392] 
P [261] <<(Rx_APPROVED() and PB_DURATION()) and Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u )>>
S [263] la := StartPriming
Q [264] <<Begin_Priming@now and Rx_APPROVED() and (la = StartPriming) and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1059:
Theorem (1059) [serial 2395] used for:
  substituted Assertions' predicates for  labels  [serial 2392]
 


Theorem (1061)                               [serial 2435] 
P [266] <<Begin_Priming@now and Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name) and 
(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [266] ->
Q [267] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name) and 
(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1062)                               [serial 2433] 
P [266] <<Begin_Priming@now and ((Infusion_Flow_Rate)@now = (#PCA_Properties::Prime_Rate)@now) and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name) and 
(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [266] ->
Q [267] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name) and 
(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 1061:
Theorem (1061) [serial 2435] used for:
    normalization of [serial 2433]
 


Theorem (1063)                               [serial 2430] 
P [266] <<Begin_Priming@now and (Infusion_Flow_Rate = #PCA_Properties::Prime_Rate)@now and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name) and 
(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [266] ->
Q [267] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_hard <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and 
myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myDrugRecord.code = myRx.code and 
myDrugRecord.concentration = myRx.concentration and myDrugRecord.name = myRx.drug_name) and 
(CLINICIAN_APPROVED_SOFT_LIMIT or (myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and 
myDrugRecord.vtbi_lower_soft <= myRx.vtbi and myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and 
myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
by Distribute @
and theorem 1062:
Theorem (1062) [serial 2433] used for:
  Distribute @ [serial 2430]
 


Theorem (1064)                               [serial 2426] 
P [266] <<Begin_Priming@now and (Infusion_Flow_Rate = #PCA_Properties::Prime_Rate)@now and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
S [266] ->
Q [267] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and ((myRx.code = myDrugRecord.code) and 
(myRx.drug_name = myDrugRecord.name) and (myRx.concentration = myDrugRecord.concentration)) and 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and (myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1063:
Theorem (1063) [serial 2430] used for:
    normalization of [serial 2426]
 


Theorem (1065)                               [serial 2419] 
P [266] <<Begin_Priming@now and (Infusion_Flow_Rate = #PCA_Properties::Prime_Rate)@now and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and Rx_VALID() and 
not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
S [266] ->
Q [267] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())>>
by Substitution of Assertion Labels
and theorem 1064:
Theorem (1064) [serial 2426] used for:
  substituted Assertions' predicates for  labels  [serial 2419]
 


Theorem (1066)                               [serial 2413] 
P [266] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (Infusion_Flow_Rate = (#PCA_Properties::Prime_Rate))@now>>
S [266] ->
Q [267] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1065:
Theorem (1065) [serial 2419] used for:
    normalization of [serial 2413]
 


Theorem (1067)                               [serial 2410] 
P [266] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)) and (Infusion_Flow_Rate = (#PCA_Properties::Prime_Rate))@now>>
S [266] ->
Q [267] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1066:
Theorem (1066) [serial 2413] used for:
  Associativity: (b.c).a = a.b.c [serial 2410]
 


Theorem (1068)                               [serial 2428] 
P [264] <<Begin_Priming@now and StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(myDrugRecord.basal_rate_lower_hard <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_hard <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard and myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and 
(myDrugRecord.code = myRx.code and myDrugRecord.concentration = myRx.concentration and 
myDrugRecord.name = myRx.drug_name) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
(myDrugRecord.basal_rate_lower_soft <= myRx.basal_flow_rate and myDrugRecord.vtbi_lower_soft <= myRx.vtbi and 
myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft and myRx.vtbi <= myDrugRecord.vtbi_upper_soft))>>
S [266] ->
Q [196] <<StartPriming = la>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1069)                               [serial 2425] 
P [264] <<Begin_Priming@now and StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and 
((myRx.code = myDrugRecord.code) and (myRx.drug_name = myDrugRecord.name) and 
(myRx.concentration = myDrugRecord.concentration)) and not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_hard) and 
(myRx.vtbi <= myDrugRecord.vtbi_upper_hard) and (myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_hard) and 
(myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_hard))) and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not (not ((myRx.vtbi >= myDrugRecord.vtbi_lower_soft) and (myRx.vtbi <= myDrugRecord.vtbi_upper_soft) and 
(myRx.basal_flow_rate >= myDrugRecord.basal_rate_lower_soft) and (myRx.basal_flow_rate <= myDrugRecord.basal_rate_upper_soft))))>>
S [266] ->
Q [196] <<(la = StartPriming)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1068:
Theorem (1068) [serial 2428] used for:
    normalization of [serial 2425]
 


Theorem (1070)                               [serial 2417] 
P [264] <<Begin_Priming@now and StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and 
Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())>>
S [266] ->
Q [196] <<PRIME_RATE()>>
by Substitution of Assertion Labels
and theorem 1069:
Theorem (1069) [serial 2425] used for:
  substituted Assertions' predicates for  labels  [serial 2417]
 


Theorem (1071)                               [serial 2411] 
P [264] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [266] ->
Q [196] <<(PRIME_RATE())>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1070:
Theorem (1070) [serial 2417] used for:
    normalization of [serial 2411]
 


Theorem (1072)                               [serial 2408] 
P [264] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Begin_Priming@now and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [266] Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
Q [267] <<Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()) and Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1067 1071:
Theorem (1067) [serial 2410] used for:
  applied port output <<pre and (Infusion_Flow_Rate=
^{# 
 ^{:: PCA_Properties Prime_Rate}})@now>> -> <<post>> [serial 2408]
 
Theorem (1071) [serial 2411] used for:
  applied port output of conditional expression <<pre>> -> <<(PRIME_RATE())>> where (PRIME_RATE()) -> 
^{# 
 ^{:: PCA_Properties Prime_Rate}} for Infusion_Flow_Rate!(
^{# 
 ^{:: PCA_Properties Prime_Rate}}) 
[serial 2408]
 


Theorem (1073)                               [serial 2402] 
P [264] <<Begin_Priming@now and StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))>>
S [266] Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
Q [267] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()))>>
by Associativity: (b.c).a = a.b.c
and theorem 1072:
Theorem (1072) [serial 2408] used for:
  Associativity: (b.c).a = a.b.c [serial 2402]
 


Theorem (1074)                               [serial 2396] 
P [264] <<Begin_Priming@now and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())) and (la = StartPriming) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [266] Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
Q [267] <<(la = StartPriming) and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1073:
Theorem (1073) [serial 2402] used for:
    normalization of [serial 2396]
 


Theorem (1075)                               [serial 2393] 
P [264] <<Begin_Priming@now and Rx_APPROVED() and (la = StartPriming) and PB_DURATION()>>
S [266] Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
Q [267] <<(la = StartPriming) and Rx_APPROVED() and PB_DURATION() and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
by Substitution of Assertion Labels
and theorem 1074:
Theorem (1074) [serial 2396] used for:
  substituted Assertions' predicates for  labels  [serial 2393]
 


Theorem (1076)                               [serial 1092] 
P [261] <<(Rx_APPROVED() and PB_DURATION()) and Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u )>>
S [263] la := StartPriming
<<Begin_Priming@now and Rx_APPROVED() and (la = StartPriming) and PB_DURATION()>>
;
Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
<<(la = StartPriming) and Rx_APPROVED() and PB_DURATION() and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
Q [230] <<(la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
PB_DURATION()>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1051 1060 1075:
Theorem (1051) [serial 2391] used for:
  Q1 -> Q in sequential composition for [serial 1092]
 
Theorem (1060) [serial 2392] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1092]
 
Theorem (1075) [serial 2393] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1092]
 


Theorem (1077)                               [serial 2444] 
P [277] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
S [232] ->
Q [232] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Identity (id):  P->P is tautology


Theorem (1078)                               [serial 2440] 
P [277] <<((la = SafetyPumpStop) or (la = StopButton) or (la = EndPriming)) and 
(Infusion_Flow_Rate@now = 0) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [232] ->
Q [232] <<((la = SafetyPumpStop) or (la = StopButton) or (la = EndPriming)) and 
(Infusion_Flow_Rate@now = 0) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1077:
Theorem (1077) [serial 2444] used for:
    normalization of [serial 2440]
 


Theorem (1079)                               [serial 2437] 
P [277] <<HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()>>
S [232] ->
Q [232] <<HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1078:
Theorem (1078) [serial 2440] used for:
  substituted Assertions' predicates for  labels  [serial 2437]
 


Theorem (1080)                               [serial 2487] 
P [271] <<Infusion_Flow_Rate = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (End_Priming or (Begin_Priming@(now-#PCA_Properties::Prime_Time) and 
not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1081)                               [serial 2484] 
P [271] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (End_Priming@now or (Begin_Priming@(now-#PCA_Properties::Prime_Time) and 
not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Assume Present:  P = P@now = P^0 
and theorem 1080:
Theorem (1080) [serial 2487] used for:
  Assume Present:  P = P@now = P^0  [serial 2484]
 


Theorem (1082)                               [serial 2481] 
P [271] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (End_Priming@now or (Begin_Priming@(now-#PCA_Properties::Prime_Time) and 
not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<(pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1081:
Theorem (1081) [serial 2484] used for:
    normalization of [serial 2481]
 


Theorem (1083)                               [serial 2478] 
P [271] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (End_Priming@now or (Begin_Priming@(now-#PCA_Properties::Prime_Time) and 
not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and true>>
by Law of And-Simplification:  P and true is P
and theorem 1082:
Theorem (1082) [serial 2481] used for:
  Law of And-Simplification:  P and true is P [serial 2478]
 


Theorem (1084)                               [serial 2474] 
P [271] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (End_Priming@now or (Begin_Priming@(now-#PCA_Properties::Prime_Time) and 
not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (true)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1083:
Theorem (1083) [serial 2478] used for:
    normalization of [serial 2474]
 


Theorem (1085)                               [serial 2473] 
P [271] <<not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)) and (End_Priming@now or 
(Begin_Priming@(now-#PCA_Properties::Prime_Time) and not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (true)>>
by Associativity: (b.c).a = a.b.c
and theorem 1084:
Theorem (1084) [serial 2474] used for:
  Associativity: (b.c).a = a.b.c [serial 2473]
 


Theorem (1086)                               [serial 2471] 
P [271] <<not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)) and (End_Priming@now or 
(Begin_Priming@(now-#PCA_Properties::Prime_Time) and not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (true or EndPriming = SafetyPumpStop or 
EndPriming = StopButton)>>
by Law of Or-Simplification: P or true is tautology
and theorem 1085:
Theorem (1085) [serial 2473] used for:
  Law of Or-Simplification: P or true is tautology [serial 2471]
 


Theorem (1087)                               [serial 2458] 
P [271] <<not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)) and (End_Priming@now or 
(Begin_Priming@(now-#PCA_Properties::Prime_Time) and not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = EndPriming or 
EndPriming = SafetyPumpStop or EndPriming = StopButton)>>
by Equality Law (idistr):  a=a <-> true
and theorem 1086:
Theorem (1086) [serial 2471] used for:
  Equality Law (idistr):  a=a <-> true [serial 2458]
 


Theorem (1088)                               [serial 2452] 
P [271] <<not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)) and (End_Priming@now or 
(Begin_Priming@(now-#PCA_Properties::Prime_Time) and not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] ->
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = EndPriming or 
SafetyPumpStop = EndPriming or StopButton = EndPriming)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1087:
Theorem (1087) [serial 2458] used for:
    normalization of [serial 2452]
 


Theorem (1089)                               [serial 2446] 
P [271] <<not (exists u:time
  in tops,,now 
  that End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t )) ) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)) and (End_Priming@now or 
(Begin_Priming@(now-#PCA_Properties::Prime_Time) and not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t )))>>
S [273] la := EndPriming
Q [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1088:
Theorem (1088) [serial 2452] used for:
  applied wp for assignment [serial 2446]
 


Theorem (1090)                               [serial 2441] 
P [271] <<((la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
(pb_duration = (VTBI/Patient_Bolus_Rate))) and (End_Priming@now or (Begin_Priming@(now-#PCA_Properties::Prime_Time) and 
not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t ))) and not (exists u:time
  in tops,,now 
  that (End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t ))) )>>
S [273] la := EndPriming
Q [274] <<((la = SafetyPumpStop) or (la = StopButton) or (la = EndPriming)) and 
(pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1089:
Theorem (1089) [serial 2446] used for:
    normalization of [serial 2441]
 


Theorem (1091)                               [serial 2438] 
P [271] <<((la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
PB_DURATION()) and (End_Priming@now or (Begin_Priming@(now-#PCA_Properties::Prime_Time) and 
not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t ))) and not (exists u:time
  in tops,,now 
  that (End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t ))) )>>
S [273] la := EndPriming
Q [274] <<HALT() and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1090:
Theorem (1090) [serial 2441] used for:
  substituted Assertions' predicates for  labels  [serial 2438]
 


Theorem (1092)                               [serial 2486] 
P [276] <<Infusion_Flow_Rate = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
S [276] ->
Q [277] <<Infusion_Flow_Rate = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Identity (id):  P->P is tautology


Theorem (1093)                               [serial 2476] 
P [276] <<Infusion_Flow_Rate@now = 0@now and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
S [276] ->
Q [277] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Assume Present:  P = P@now = P^0 
and theorem 1092:
Theorem (1092) [serial 2486] used for:
  Assume Present:  P = P@now = P^0  [serial 2476]
 


Theorem (1094)                               [serial 2472] 
P [276] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la) and Infusion_Flow_Rate@now = 0@now>>
S [276] ->
Q [277] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1093:
Theorem (1093) [serial 2476] used for:
    normalization of [serial 2472]
 


Theorem (1095)                               [serial 2469] 
P [276] <<Infusion_Flow_Rate@now = 0@now and (pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la))>>
S [276] ->
Q [277] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Associativity: (b.c).a = a.b.c
and theorem 1094:
Theorem (1094) [serial 2472] used for:
  Associativity: (b.c).a = a.b.c [serial 2469]
 


Theorem (1096)                               [serial 2466] 
P [276] <<((Infusion_Flow_Rate)@now = (0)@now) and (pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la))>>
S [276] ->
Q [277] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1095:
Theorem (1095) [serial 2469] used for:
    normalization of [serial 2466]
 


Theorem (1097)                               [serial 2460] 
P [276] <<(Infusion_Flow_Rate = 0)@now and (pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la))>>
S [276] ->
Q [277] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Distribute @
and theorem 1096:
Theorem (1096) [serial 2466] used for:
  Distribute @ [serial 2460]
 


Theorem (1098)                               [serial 2453] 
P [276] <<(pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)) and (Infusion_Flow_Rate = 0)@now>>
S [276] ->
Q [277] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1097:
Theorem (1097) [serial 2460] used for:
    normalization of [serial 2453]
 


Theorem (1099)                               [serial 2462] 
P [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
S [276] ->
Q [192] <<EndPriming = la or SafetyPumpStop = la or StopButton = la>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1100)                               [serial 2455] 
P [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
S [276] ->
Q [192] <<(((la = SafetyPumpStop) or (la = StopButton) or (la = EndPriming)))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1099:
Theorem (1099) [serial 2462] used for:
    normalization of [serial 2455]
 


Theorem (1101)                               [serial 2454] 
P [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
S [276] ->
Q [192] <<(HALT())>>
by Substitution of Assertion Labels
and theorem 1100:
Theorem (1100) [serial 2455] used for:
  substituted Assertions' predicates for  labels  [serial 2454]
 


Theorem (1102)                               [serial 2448] 
P [274] <<pb_duration = (VTBI/Patient_Bolus_Rate) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
S [276] Infusion_Flow_Rate!(0)
Q [277] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(EndPriming = la or SafetyPumpStop = la or StopButton = la)>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1098 1101:
Theorem (1098) [serial 2453] used for:
  applied port output <<pre and (Infusion_Flow_Rate=0)@now>> -> <<post>> [serial 2448]
 
Theorem (1101) [serial 2454] used for:
  applied port output of conditional expression <<pre>> -> <<(HALT())>> where (HALT()) -> 0 for Infusion_Flow_Rate!(0) 
[serial 2448]
 


Theorem (1103)                               [serial 2442] 
P [274] <<((la = SafetyPumpStop) or (la = StopButton) or (la = EndPriming)) and 
(pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [276] Infusion_Flow_Rate!(0)
Q [277] <<((la = SafetyPumpStop) or (la = StopButton) or (la = EndPriming)) and 
(Infusion_Flow_Rate@now = 0) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1102:
Theorem (1102) [serial 2448] used for:
    normalization of [serial 2442]
 


Theorem (1104)                               [serial 2439] 
P [274] <<HALT() and PB_DURATION()>>
S [276] Infusion_Flow_Rate!(0)
Q [277] <<HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1103:
Theorem (1103) [serial 2442] used for:
  substituted Assertions' predicates for  labels  [serial 2439]
 


Theorem (1105)                               [serial 1093] 
P [271] <<((la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
PB_DURATION()) and (End_Priming@now or (Begin_Priming@(now-#PCA_Properties::Prime_Time) and 
not (exists t:time
  in now-#PCA_Properties::Prime_Time,,now 
  that Begin_Priming@t ))) and not (exists u:time
  in tops,,now 
  that (End_Priming@u or (Begin_Priming@(u-#PCA_Properties::Prime_Time) and 
       not (exists t:time
         in u-#PCA_Properties::Prime_Time,,u 
         that Begin_Priming@t ))) )>>
S [273] la := EndPriming
<<HALT() and PB_DURATION()>>
;
Infusion_Flow_Rate!(0)
<<HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()>>
Q [232] <<HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1079 1091 1104:
Theorem (1079) [serial 2437] used for:
  Q1 -> Q in sequential composition for [serial 1093]
 
Theorem (1091) [serial 2438] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1093]
 
Theorem (1104) [serial 2439] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1093]
 


Theorem (1106)                               [serial 2530] 
P [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [230] ->
Q [230] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Identity (id):  P->P is tautology


Theorem (1107)                               [serial 2526] 
P [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(la = StartPriming)>>
S [230] ->
Q [230] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1106:
Theorem (1106) [serial 2530] used for:
    normalization of [serial 2526]
 


Theorem (1108)                               [serial 2495] 
P [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and PB_DURATION() and 
PRIME_RATE()>>
S [230] ->
Q [230] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Substitution of Assertion Labels
and theorem 1107:
Theorem (1107) [serial 2526] used for:
  substituted Assertions' predicates for  labels  [serial 2495]
 


Theorem (1109)                               [serial 2491] 
P [286] <<PRIME_RATE() and PB_DURATION() and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
S [230] ->
Q [230] <<(la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
(pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1108:
Theorem (1108) [serial 2495] used for:
    normalization of [serial 2491]
 


Theorem (1110)                               [serial 2488] 
P [286] <<PRIME_RATE() and PB_DURATION() and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
S [230] ->
Q [230] <<(la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1109:
Theorem (1109) [serial 2491] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2488]
 


Theorem (1111)                               [serial 2532] 
P [280] <<Begin_Priming@now and Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
       not SOFT_LIMIT_VIOLATED()))@u ) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
S [282] ->
Q [283] <<Begin_Priming@now and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1112)                               [serial 2527] 
P [280] <<Begin_Priming@now and Infusion_Flow_Rate@now = 0 and ((la = SafetyPumpStop) or 
(la = StopButton) or (la = EndPriming)) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that ((Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
       not SOFT_LIMIT_VIOLATED())))@u )>>
S [282] ->
Q [283] <<Begin_Priming@now and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1111:
Theorem (1111) [serial 2532] used for:
    normalization of [serial 2527]
 


Theorem (1113)                               [serial 2519] 
P [280] <<Begin_Priming@now and Infusion_Flow_Rate@now = 0 and HALT() and PB_DURATION() and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [282] ->
Q [283] <<Begin_Priming@now and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Substitution of Assertion Labels
and theorem 1112:
Theorem (1112) [serial 2527] used for:
  substituted Assertions' predicates for  labels  [serial 2519]
 


Theorem (1114)                               [serial 2518] 
P [280] <<Begin_Priming@now and Infusion_Flow_Rate@now = 0 and HALT() and PB_DURATION() and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [282] ->
Q [283] <<Begin_Priming@now and true and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Law of And-Simplification:  P and true is P
and theorem 1113:
Theorem (1113) [serial 2519] used for:
  Law of And-Simplification:  P and true is P [serial 2518]
 


Theorem (1115)                               [serial 2513] 
P [280] <<Begin_Priming@now and Infusion_Flow_Rate@now = 0 and HALT() and PB_DURATION() and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [282] ->
Q [283] <<Begin_Priming@now and StartPriming = StartPriming and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Equality Law (idistr):  a=a <-> true
and theorem 1114:
Theorem (1114) [serial 2518] used for:
  Equality Law (idistr):  a=a <-> true [serial 2513]
 


Theorem (1116)                               [serial 2506] 
P [280] <<Infusion_Flow_Rate@now = 0 and HALT() and PB_DURATION() and Begin_Priming@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [282] ->
Q [283] <<Begin_Priming@now and StartPriming = StartPriming and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1115:
Theorem (1115) [serial 2513] used for:
    normalization of [serial 2506]
 


Theorem (1117)                               [serial 2503] 
P [280] <<Infusion_Flow_Rate@now = 0 and HALT() and PB_DURATION() and Begin_Priming@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [282] la := StartPriming
Q [283] <<Begin_Priming@now and StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1116:
Theorem (1116) [serial 2506] used for:
  applied wp for assignment [serial 2503]
 


Theorem (1118)                               [serial 2497] 
P [280] <<Begin_Priming@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u ) and (Infusion_Flow_Rate@now = 0 and HALT() and 
PB_DURATION())>>
S [282] la := StartPriming
Q [283] <<Begin_Priming@now and StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1117:
Theorem (1117) [serial 2503] used for:
  Associativity: (b.c).a = a.b.c [serial 2497]
 


Theorem (1119)                               [serial 2492] 
P [280] <<(HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()) and Begin_Priming@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [282] la := StartPriming
Q [283] <<Begin_Priming@now and (pb_duration = (VTBI/Patient_Bolus_Rate)) and (la = StartPriming)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1118:
Theorem (1118) [serial 2497] used for:
    normalization of [serial 2492]
 


Theorem (1120)                               [serial 2489] 
P [280] <<(HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()) and Begin_Priming@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [282] la := StartPriming
Q [283] <<Begin_Priming@now and PB_DURATION() and PRIME_RATE()>>
by Substitution of Assertion Labels
and theorem 1119:
Theorem (1119) [serial 2492] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2489]
 


Theorem (1121)                               [serial 2540] 
P [285] <<Begin_Priming@now and Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [285] ->
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1122)                               [serial 2538] 
P [285] <<Begin_Priming@now and ((Infusion_Flow_Rate)@now = (#PCA_Properties::Prime_Rate)@now) and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [285] ->
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 1121:
Theorem (1121) [serial 2540] used for:
    normalization of [serial 2538]
 


Theorem (1123)                               [serial 2534] 
P [285] <<Begin_Priming@now and (Infusion_Flow_Rate = #PCA_Properties::Prime_Rate)@now and 
StartPriming = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [285] ->
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Distribute @
and theorem 1122:
Theorem (1122) [serial 2538] used for:
  Distribute @ [serial 2534]
 


Theorem (1124)                               [serial 2528] 
P [285] <<Begin_Priming@now and (Infusion_Flow_Rate = #PCA_Properties::Prime_Rate)@now and 
(pb_duration = (VTBI/Patient_Bolus_Rate)) and (la = StartPriming)>>
S [285] ->
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1123:
Theorem (1123) [serial 2534] used for:
    normalization of [serial 2528]
 


Theorem (1125)                               [serial 2523] 
P [285] <<Begin_Priming@now and (Infusion_Flow_Rate = #PCA_Properties::Prime_Rate)@now and 
PB_DURATION() and PRIME_RATE()>>
S [285] ->
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Substitution of Assertion Labels
and theorem 1124:
Theorem (1124) [serial 2528] used for:
  substituted Assertions' predicates for  labels  [serial 2523]
 


Theorem (1126)                               [serial 2517] 
P [285] <<Begin_Priming@now and PB_DURATION() and PRIME_RATE() and (Infusion_Flow_Rate = #PCA_Properties::Prime_Rate)@now>>
S [285] ->
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1125:
Theorem (1125) [serial 2523] used for:
    normalization of [serial 2517]
 


Theorem (1127)                               [serial 2509] 
P [285] <<(Infusion_Flow_Rate = #PCA_Properties::Prime_Rate)@now and (Begin_Priming@now and 
PB_DURATION() and PRIME_RATE())>>
S [285] ->
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1126:
Theorem (1126) [serial 2517] used for:
  Associativity: (b.c).a = a.b.c [serial 2509]
 


Theorem (1128)                               [serial 2504] 
P [285] <<(Begin_Priming@now and PB_DURATION() and PRIME_RATE()) and (Infusion_Flow_Rate = (#PCA_Properties::Prime_Rate))@now>>
S [285] ->
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1127:
Theorem (1127) [serial 2509] used for:
    normalization of [serial 2504]
 


Theorem (1129)                               [serial 2511] 
P [283] <<Begin_Priming@now and PB_DURATION() and PRIME_RATE()>>
S [285] ->
Q [196] <<PRIME_RATE()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1130)                               [serial 2505] 
P [283] <<Begin_Priming@now and PB_DURATION() and PRIME_RATE()>>
S [285] ->
Q [196] <<(PRIME_RATE())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1129:
Theorem (1129) [serial 2511] used for:
    normalization of [serial 2505]
 


Theorem (1131)                               [serial 2499] 
P [283] <<Begin_Priming@now and PB_DURATION() and PRIME_RATE()>>
S [285] Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
Q [286] <<Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate and StartPriming = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1128 1130:
Theorem (1128) [serial 2504] used for:
  applied port output <<pre and (Infusion_Flow_Rate=
^{# 
 ^{:: PCA_Properties Prime_Rate}})@now>> -> <<post>> [serial 2499]
 
Theorem (1130) [serial 2505] used for:
  applied port output of conditional expression <<pre>> -> <<(PRIME_RATE())>> where (PRIME_RATE()) -> 
^{# 
 ^{:: PCA_Properties Prime_Rate}} for Infusion_Flow_Rate!(
^{# 
 ^{:: PCA_Properties Prime_Rate}}) 
[serial 2499]
 


Theorem (1132)                               [serial 2493] 
P [283] <<Begin_Priming@now and PB_DURATION() and PRIME_RATE()>>
S [285] Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
Q [286] <<(la = StartPriming) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1131:
Theorem (1131) [serial 2499] used for:
    normalization of [serial 2493]
 


Theorem (1133)                               [serial 2490] 
P [283] <<Begin_Priming@now and PB_DURATION() and PRIME_RATE()>>
S [285] Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
Q [286] <<PRIME_RATE() and PB_DURATION() and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
by Substitution of Assertion Labels
and theorem 1132:
Theorem (1132) [serial 2493] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2490]
 


Theorem (1134)                               [serial 1094] 
P [280] <<(HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()) and Begin_Priming@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [282] la := StartPriming
<<Begin_Priming@now and PB_DURATION() and PRIME_RATE()>>
;
Infusion_Flow_Rate!(#PCA_Properties::Prime_Rate)
<<PRIME_RATE() and PB_DURATION() and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate)>>
Q [230] <<(la = StartPriming) and (Infusion_Flow_Rate@now = #PCA_Properties::Prime_Rate) and 
PB_DURATION()>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1110 1120 1133:
Theorem (1110) [serial 2488] used for:
  Q1 -> Q in sequential composition for [serial 1094]
 
Theorem (1120) [serial 2489] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1094]
 
Theorem (1133) [serial 2490] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1094]
 


Theorem (1135)                               [serial 2579] 
P [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [234] <<Basal_Rate@now = Infusion_Flow_Rate@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1136)                               [serial 2580] 
P [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [221] <<pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1137)                               [serial 2585] 
P [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [234] <<ResumeBasal = la or StartButton = la>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1138)                               [serial 2581] 
P [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [234] <<(ResumeBasal = la or StartButton = la)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1137:
Theorem (1137) [serial 2585] used for:
    normalization of [serial 2581]
 


Theorem (1139)                               [serial 2556] 
P [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [234] <<Basal_Rate@now = Infusion_Flow_Rate@now and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(ResumeBasal = la or StartButton = la)>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1135 1136 1138:
Theorem (1135) [serial 2579] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2556]
 
Theorem (1136) [serial 2580] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2556]
 
Theorem (1138) [serial 2581] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2556]
 


Theorem (1140)                               [serial 2551] 
P [305] <<(la = StartButton) and (Infusion_Flow_Rate@now = Basal_Rate@now) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [234] ->
Q [234] <<((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
(pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1139:
Theorem (1139) [serial 2556] used for:
    normalization of [serial 2551]
 


Theorem (1141)                               [serial 2542] 
P [305] <<(la = StartButton) and (Infusion_Flow_Rate@now = Basal_Rate@now) and PB_DURATION()>>
S [234] ->
Q [234] <<((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1140:
Theorem (1140) [serial 2551] used for:
  substituted Assertions' predicates for  labels  [serial 2542]
 


Theorem (1142)                               [serial 2578] 
P [299] <<(Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())@now and Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_VALID())@u and (not HARD_LIMIT_VIOLATED())@u and (CLINICIAN_APPROVED_SOFT_LIMIT or 
       not SOFT_LIMIT_VIOLATED())@u ) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
S [301] ->
Q [302] <<(Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())@now and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1143)                               [serial 2577] 
P [299] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_VALID())@u and (not HARD_LIMIT_VIOLATED())@u and (CLINICIAN_APPROVED_SOFT_LIMIT or 
       not SOFT_LIMIT_VIOLATED())@u ) and ((Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())@now) and (EndPriming = la or 
SafetyPumpStop = la or StopButton = la)>>
S [301] ->
Q [302] <<pb_duration = (VTBI/Patient_Bolus_Rate) and ((Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())@now)>>
by Associativity: (b.c).a = a.b.c
and theorem 1142:
Theorem (1142) [serial 2578] used for:
  Associativity: (b.c).a = a.b.c [serial 2577]
 


Theorem (1144)                               [serial 2573] 
P [299] <<Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_VALID())@u and (not HARD_LIMIT_VIOLATED())@u and (CLINICIAN_APPROVED_SOFT_LIMIT or 
       not SOFT_LIMIT_VIOLATED())@u ) and ((Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())@now) and (EndPriming = la or 
SafetyPumpStop = la or StopButton = la)>>
S [301] ->
Q [302] <<pb_duration = (VTBI/Patient_Bolus_Rate) and true and ((Rx_VALID())@now and 
(not HARD_LIMIT_VIOLATED())@now and (CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())@now)>>
by Law of And-Simplification:  P and true is P
and theorem 1143:
Theorem (1143) [serial 2577] used for:
  Law of And-Simplification:  P and true is P [serial 2573]
 


Theorem (1145)                               [serial 2568] 
P [299] <<((Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())@now) and Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that ((Rx_VALID())@u and (not HARD_LIMIT_VIOLATED())@u and (CLINICIAN_APPROVED_SOFT_LIMIT or 
       not SOFT_LIMIT_VIOLATED())@u) ) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
S [301] ->
Q [302] <<((Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())@now) and pb_duration = (VTBI/Patient_Bolus_Rate) and 
true>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1144:
Theorem (1144) [serial 2573] used for:
    normalization of [serial 2568]
 


Theorem (1146)                               [serial 2562] 
P [299] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))@now and Infusion_Flow_Rate@now = 0 and pb_duration = (VTBI/Patient_Bolus_Rate) and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
       not SOFT_LIMIT_VIOLATED()))@u ) and (EndPriming = la or SafetyPumpStop = la or 
StopButton = la)>>
S [301] ->
Q [302] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))@now and pb_duration = (VTBI/Patient_Bolus_Rate) and 
true>>
by Distribute @
and theorem 1145:
Theorem (1145) [serial 2568] used for:
  Distribute @ [serial 2562]
 


Theorem (1147)                               [serial 2554] 
P [299] <<((la = SafetyPumpStop) or (la = StopButton) or (la = EndPriming)) and 
(Infusion_Flow_Rate@now = 0) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
((Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())))@now and not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that ((Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
       not SOFT_LIMIT_VIOLATED())))@u )>>
S [301] ->
Q [302] <<(true) and ((Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())))@now and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1146:
Theorem (1146) [serial 2562] used for:
    normalization of [serial 2554]
 


Theorem (1148)                               [serial 2550] 
P [299] <<HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION() and (Rx_APPROVED())@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [301] ->
Q [302] <<(true) and (Rx_APPROVED())@now and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1147:
Theorem (1147) [serial 2554] used for:
  substituted Assertions' predicates for  labels  [serial 2550]
 


Theorem (1149)                               [serial 2548] 
P [299] <<(HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()) and (Rx_APPROVED())@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [301] ->
Q [302] <<(true) and (Rx_APPROVED())@now and PB_DURATION()>>
by Associativity: (b.c).a = a.b.c
and theorem 1148:
Theorem (1148) [serial 2550] used for:
  Associativity: (b.c).a = a.b.c [serial 2548]
 


Theorem (1150)                               [serial 2545] 
P [299] <<(HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()) and (Rx_APPROVED())@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [301] ->
Q [302] <<(StartButton = StartButton) and (Rx_APPROVED())@now and PB_DURATION()>>
by Equality Law (idistr):  a=a <-> true
and theorem 1149:
Theorem (1149) [serial 2548] used for:
  Equality Law (idistr):  a=a <-> true [serial 2545]
 


Theorem (1151)                               [serial 2543] 
P [299] <<(HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()) and (Rx_APPROVED())@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [301] la := StartButton
Q [302] <<(la = StartButton) and (Rx_APPROVED())@now and PB_DURATION()>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1150:
Theorem (1150) [serial 2545] used for:
  applied wp for assignment [serial 2543]
 


Theorem (1152)                               [serial 2576] 
P [304] <<(Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())@now and Basal_Rate@now = Infusion_Flow_Rate@now and 
StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [304] ->
Q [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1153)                               [serial 2571] 
P [304] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate) and 
((Rx_VALID())@now and (not HARD_LIMIT_VIOLATED())@now and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED())@now)>>
S [304] ->
Q [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1152:
Theorem (1152) [serial 2576] used for:
  Associativity: (b.c).a = a.b.c [serial 2571]
 


Theorem (1154)                               [serial 2567] 
P [304] <<((Basal_Rate)@now = (Infusion_Flow_Rate)@now) and ((Rx_VALID())@now and 
(not HARD_LIMIT_VIOLATED())@now and (CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())@now) and 
StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [304] ->
Q [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1153:
Theorem (1153) [serial 2571] used for:
    normalization of [serial 2567]
 


Theorem (1155)                               [serial 2560] 
P [304] <<(Basal_Rate = Infusion_Flow_Rate)@now and (Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED()))@now and StartButton = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [304] ->
Q [305] <<Basal_Rate@now = Infusion_Flow_Rate@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Distribute @
and theorem 1154:
Theorem (1154) [serial 2567] used for:
  Distribute @ [serial 2560]
 


Theorem (1156)                               [serial 2553] 
P [304] <<(la = StartButton) and ((Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())))@now and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(Infusion_Flow_Rate = Basal_Rate)@now>>
S [304] ->
Q [305] <<(la = StartButton) and (Infusion_Flow_Rate@now = Basal_Rate@now) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1155:
Theorem (1155) [serial 2560] used for:
    normalization of [serial 2553]
 


Theorem (1157)                               [serial 2549] 
P [304] <<(la = StartButton) and (Rx_APPROVED())@now and PB_DURATION() and (Infusion_Flow_Rate = Basal_Rate)@now>>
S [304] ->
Q [305] <<(la = StartButton) and (Infusion_Flow_Rate@now = Basal_Rate@now) and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1156:
Theorem (1156) [serial 2553] used for:
  substituted Assertions' predicates for  labels  [serial 2549]
 


Theorem (1158)                               [serial 2546] 
P [304] <<((la = StartButton) and (Rx_APPROVED())@now and PB_DURATION()) and (Infusion_Flow_Rate = Basal_Rate)@now>>
S [304] ->
Q [305] <<(la = StartButton) and (Infusion_Flow_Rate@now = Basal_Rate@now) and PB_DURATION()>>
by Associativity: (b.c).a = a.b.c
and theorem 1157:
Theorem (1157) [serial 2549] used for:
  Associativity: (b.c).a = a.b.c [serial 2546]
 


Theorem (1159)                               [serial 2558] 
P [302] <<(Rx_VALID() and not HARD_LIMIT_VIOLATED() and (CLINICIAN_APPROVED_SOFT_LIMIT or 
not SOFT_LIMIT_VIOLATED()))@now and StartButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [304] ->
Q [197] <<ResumeBasal = la or SquareBolusDone = la or StartButton = la>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1160)                               [serial 2552] 
P [302] <<(la = StartButton) and ((Rx_VALID() and not HARD_LIMIT_VIOLATED() and 
(CLINICIAN_APPROVED_SOFT_LIMIT or not SOFT_LIMIT_VIOLATED())))@now and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [304] ->
Q [197] <<(((la = StartButton) or (la = ResumeBasal) or (la = SquareBolusDone)))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1159:
Theorem (1159) [serial 2558] used for:
    normalization of [serial 2552]
 


Theorem (1161)                               [serial 2547] 
P [302] <<(la = StartButton) and (Rx_APPROVED())@now and PB_DURATION()>>
S [304] ->
Q [197] <<(BASAL_RATE())>>
by Substitution of Assertion Labels
and theorem 1160:
Theorem (1160) [serial 2552] used for:
  substituted Assertions' predicates for  labels  [serial 2547]
 


Theorem (1162)                               [serial 2544] 
P [302] <<(la = StartButton) and (Rx_APPROVED())@now and PB_DURATION()>>
S [304] Infusion_Flow_Rate!(Basal_Rate)
Q [305] <<(la = StartButton) and (Infusion_Flow_Rate@now = Basal_Rate@now) and PB_DURATION()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1158 1161:
Theorem (1158) [serial 2546] used for:
  applied port output <<pre and (Infusion_Flow_Rate=Basal_Rate)@now>> -> <<post>> [serial 2544]
 
Theorem (1161) [serial 2547] used for:
  applied port output of conditional expression <<pre>> -> <<(BASAL_RATE())>> where (BASAL_RATE()) -> Basal_Rate for Infusion_Flow_Rate!(Basal_Rate) 
[serial 2544]
 


Theorem (1163)                               [serial 1095] 
P [299] <<(HALT() and (Infusion_Flow_Rate@now = 0) and PB_DURATION()) and (Rx_APPROVED())@now and 
not (exists u:time
  in tops,,now 
  that Begin_Priming@u ) and not (exists u:time
  in tops,,now 
  that (Rx_APPROVED())@u )>>
S [301] la := StartButton
<<(la = StartButton) and (Rx_APPROVED())@now and PB_DURATION()>>
;
Infusion_Flow_Rate!(Basal_Rate)
<<(la = StartButton) and (Infusion_Flow_Rate@now = Basal_Rate@now) and PB_DURATION()>>
Q [234] <<((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
PB_DURATION()>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1141 1151 1162:
Theorem (1141) [serial 2542] used for:
  Q1 -> Q in sequential composition for [serial 1095]
 
Theorem (1151) [serial 2543] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1095]
 
Theorem (1162) [serial 2544] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1095]
 


Theorem (1164)                               [serial 2598] 
P [315] <<Infusion_Flow_Rate@now = Patient_Bolus_Rate and PatientButton = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [236] ->
Q [236] <<Infusion_Flow_Rate@now = Patient_Bolus_Rate and PatientButton = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Identity (id):  P->P is tautology


Theorem (1165)                               [serial 2593] 
P [315] <<(la = PatientButton) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
S [236] ->
Q [236] <<(la = PatientButton) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1164:
Theorem (1164) [serial 2598] used for:
    normalization of [serial 2593]
 


Theorem (1166)                               [serial 2587] 
P [315] <<(la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
S [236] ->
Q [236] <<(la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
by Substitution of Assertion Labels
and theorem 1165:
Theorem (1165) [serial 2593] used for:
  substituted Assertions' predicates for  labels  [serial 2587]
 


Theorem (1167)                               [serial 2623] 
P [309] <<Patient_Button_Request and not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t ) and Basal_Rate = Infusion_Flow_Rate and 
pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that (Patient_Button_Request and not (exists t:time
         in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
         that Patient_Request_Not_Too_Soon@t ))@u ) and (ResumeBasal = la or 
StartButton = la)>>
S [311] ->
Q [312] <<pb_duration = (VTBI/Patient_Bolus_Rate) and Patient_Button_Request>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1168)                               [serial 2622] 
P [309] <<Basal_Rate = Infusion_Flow_Rate and pb_duration = (VTBI/Patient_Bolus_Rate) and 
not (exists u:time
  in tops,,now 
  that (Patient_Button_Request and not (exists t:time
         in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
         that Patient_Request_Not_Too_Soon@t ))@u ) and (Patient_Button_Request and 
not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t )) and (ResumeBasal = la or StartButton = la)>>
S [311] ->
Q [312] <<pb_duration = (VTBI/Patient_Bolus_Rate) and Patient_Button_Request>>
by Associativity: (b.c).a = a.b.c
and theorem 1167:
Theorem (1167) [serial 2623] used for:
  Associativity: (b.c).a = a.b.c [serial 2622]
 


Theorem (1169)                               [serial 2618] 
P [309] <<(Patient_Button_Request@now and not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t ))@now and Basal_Rate@now = Infusion_Flow_Rate@now and 
pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that (Patient_Button_Request@now and not (exists t:time
         in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
         that Patient_Request_Not_Too_Soon@t ))@u ) and (ResumeBasal = la or 
StartButton = la)>>
S [311] ->
Q [312] <<Patient_Button_Request@now and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Assume Present:  P = P@now = P^0 
and theorem 1168:
Theorem (1168) [serial 2622] used for:
  Assume Present:  P = P@now = P^0  [serial 2618]
 


Theorem (1170)                               [serial 2612] 
P [309] <<Basal_Rate@now = Infusion_Flow_Rate@now and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(ResumeBasal = la or StartButton = la) and (Patient_Button_Request@now and 
not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t ))@now and not (exists u:time
  in tops,,now 
  that (Patient_Button_Request@now and not (exists t:time
         in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
         that Patient_Request_Not_Too_Soon@t ))@u )>>
S [311] ->
Q [312] <<Patient_Button_Request@now and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1169:
Theorem (1169) [serial 2618] used for:
    normalization of [serial 2612]
 


Theorem (1171)                               [serial 2611] 
P [309] <<(Patient_Button_Request@now and not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t ))@now and not (exists u:time
  in tops,,now 
  that (Patient_Button_Request@now and not (exists t:time
         in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
         that Patient_Request_Not_Too_Soon@t ))@u ) and (Basal_Rate@now = Infusion_Flow_Rate@now and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (ResumeBasal = la or StartButton = la))>>
S [311] ->
Q [312] <<Patient_Button_Request@now and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1170:
Theorem (1170) [serial 2612] used for:
  Associativity: (b.c).a = a.b.c [serial 2611]
 


Theorem (1172)                               [serial 2609] 
P [309] <<(Patient_Button_Request@now and not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t ))@now and not (exists u:time
  in tops,,now 
  that (Patient_Button_Request@now and not (exists t:time
         in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
         that Patient_Request_Not_Too_Soon@t ))@u ) and (Basal_Rate@now = Infusion_Flow_Rate@now and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (ResumeBasal = la or StartButton = la))>>
S [311] ->
Q [312] <<Patient_Button_Request@now and true and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Law of And-Simplification:  P and true is P
and theorem 1171:
Theorem (1171) [serial 2611] used for:
  Law of And-Simplification:  P and true is P [serial 2609]
 


Theorem (1173)                               [serial 2600] 
P [309] <<(Patient_Button_Request@now and not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t ))@now and not (exists u:time
  in tops,,now 
  that (Patient_Button_Request@now and not (exists t:time
         in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
         that Patient_Request_Not_Too_Soon@t ))@u ) and (Basal_Rate@now = Infusion_Flow_Rate@now and 
pb_duration = (VTBI/Patient_Bolus_Rate) and (ResumeBasal = la or StartButton = la))>>
S [311] ->
Q [312] <<Patient_Button_Request@now and PatientButton = PatientButton and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Equality Law (idistr):  a=a <-> true
and theorem 1172:
Theorem (1172) [serial 2609] used for:
  Equality Law (idistr):  a=a <-> true [serial 2600]
 


Theorem (1174)                               [serial 2594] 
P [309] <<(((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
(pb_duration = (VTBI/Patient_Bolus_Rate))) and ((Patient_Button_Request@now and 
not (exists t:time
  in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
  that Patient_Request_Not_Too_Soon@t )))@now and not (exists u:time
  in tops,,now 
  that ((Patient_Button_Request@now and not (exists t:time
         in now-MINIMUM_TIME_BETWEEN_BOLUS,,now 
         that Patient_Request_Not_Too_Soon@t )))@u )>>
S [311] ->
Q [312] <<(PatientButton = PatientButton) and Patient_Button_Request@now and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1173:
Theorem (1173) [serial 2600] used for:
    normalization of [serial 2594]
 


Theorem (1175)                               [serial 2590] 
P [309] <<(((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
PB_DURATION()) and (PATIENT_REQUEST_NOT_TOO_SOON(now))@now and not (exists u:time
  in tops,,now 
  that (PATIENT_REQUEST_NOT_TOO_SOON(now))@u )>>
S [311] ->
Q [312] <<(PatientButton = PatientButton) and Patient_Button_Request@now and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1174:
Theorem (1174) [serial 2594] used for:
  substituted Assertions' predicates for  labels  [serial 2590]
 


Theorem (1176)                               [serial 2588] 
P [309] <<(((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
PB_DURATION()) and (PATIENT_REQUEST_NOT_TOO_SOON(now))@now and not (exists u:time
  in tops,,now 
  that (PATIENT_REQUEST_NOT_TOO_SOON(now))@u )>>
S [311] la := PatientButton
Q [312] <<(la = PatientButton) and Patient_Button_Request@now and PB_DURATION()>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1175:
Theorem (1175) [serial 2590] used for:
  applied wp for assignment [serial 2588]
 


Theorem (1177)                               [serial 2621] 
P [314] <<Infusion_Flow_Rate = Patient_Bolus_Rate and PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate) and 
Patient_Button_Request>>
S [314] ->
Q [315] <<Infusion_Flow_Rate = Patient_Bolus_Rate and PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1178)                               [serial 2616] 
P [314] <<Patient_Button_Request@now and (Infusion_Flow_Rate = Patient_Bolus_Rate)@now and 
PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [314] ->
Q [315] <<Infusion_Flow_Rate@now = Patient_Bolus_Rate and PatientButton = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Assume Present:  P = P@now = P^0 
and theorem 1177:
Theorem (1177) [serial 2621] used for:
  Assume Present:  P = P@now = P^0  [serial 2616]
 


Theorem (1179)                               [serial 2610] 
P [314] <<Patient_Button_Request@now and PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(Infusion_Flow_Rate = Patient_Bolus_Rate)@now>>
S [314] ->
Q [315] <<Infusion_Flow_Rate@now = Patient_Bolus_Rate and PatientButton = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1178:
Theorem (1178) [serial 2616] used for:
    normalization of [serial 2610]
 


Theorem (1180)                               [serial 2602] 
P [314] <<(Infusion_Flow_Rate = Patient_Bolus_Rate)@now and (Patient_Button_Request@now and 
PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [314] ->
Q [315] <<Infusion_Flow_Rate@now = Patient_Bolus_Rate and PatientButton = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1179:
Theorem (1179) [serial 2610] used for:
  Associativity: (b.c).a = a.b.c [serial 2602]
 


Theorem (1181)                               [serial 2595] 
P [314] <<((la = PatientButton) and Patient_Button_Request@now and (pb_duration = (VTBI/Patient_Bolus_Rate))) and 
(Infusion_Flow_Rate = Patient_Bolus_Rate)@now>>
S [314] ->
Q [315] <<(la = PatientButton) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1180:
Theorem (1180) [serial 2602] used for:
    normalization of [serial 2595]
 


Theorem (1182)                               [serial 2591] 
P [314] <<((la = PatientButton) and Patient_Button_Request@now and PB_DURATION()) and 
(Infusion_Flow_Rate = Patient_Bolus_Rate)@now>>
S [314] ->
Q [315] <<(la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
by Substitution of Assertion Labels
and theorem 1181:
Theorem (1181) [serial 2595] used for:
  substituted Assertions' predicates for  labels  [serial 2591]
 


Theorem (1183)                               [serial 2604] 
P [312] <<Patient_Button_Request@now and PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [314] ->
Q [194] <<PatientButton = la>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1184)                               [serial 2596] 
P [312] <<(la = PatientButton) and Patient_Button_Request@now and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [314] ->
Q [194] <<((la = PatientButton))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1183:
Theorem (1183) [serial 2604] used for:
    normalization of [serial 2596]
 


Theorem (1185)                               [serial 2592] 
P [312] <<(la = PatientButton) and Patient_Button_Request@now and PB_DURATION()>>
S [314] ->
Q [194] <<(PB_RATE())>>
by Substitution of Assertion Labels
and theorem 1184:
Theorem (1184) [serial 2596] used for:
  substituted Assertions' predicates for  labels  [serial 2592]
 


Theorem (1186)                               [serial 2589] 
P [312] <<(la = PatientButton) and Patient_Button_Request@now and PB_DURATION()>>
S [314] Infusion_Flow_Rate!(Patient_Bolus_Rate)
Q [315] <<(la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1182 1185:
Theorem (1182) [serial 2591] used for:
  applied port output <<pre and (Infusion_Flow_Rate=Patient_Bolus_Rate)@now>> -> <<post>> [serial 2589]
 
Theorem (1185) [serial 2592] used for:
  applied port output of conditional expression <<pre>> -> <<(PB_RATE())>> where (PB_RATE()) -> Patient_Bolus_Rate for Infusion_Flow_Rate!(Patient_Bolus_Rate) 
[serial 2589]
 


Theorem (1187)                               [serial 1096] 
P [309] <<(((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
PB_DURATION()) and (PATIENT_REQUEST_NOT_TOO_SOON(now))@now and not (exists u:time
  in tops,,now 
  that (PATIENT_REQUEST_NOT_TOO_SOON(now))@u )>>
S [311] la := PatientButton
<<(la = PatientButton) and Patient_Button_Request@now and PB_DURATION()>>
;
Infusion_Flow_Rate!(Patient_Bolus_Rate)
<<(la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
Q [236] <<(la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1166 1176 1186:
Theorem (1166) [serial 2587] used for:
  Q1 -> Q in sequential composition for [serial 1096]
 
Theorem (1176) [serial 2588] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1096]
 
Theorem (1186) [serial 2589] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1096]
 


Theorem (1188)                               [serial 2667] 
P [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [234] <<Basal_Rate@now = Infusion_Flow_Rate@now>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1189)                               [serial 2668] 
P [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [221] <<pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1190)                               [serial 2671] 
P [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [234] <<ResumeBasal = la or StartButton = la>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1191)                               [serial 2669] 
P [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [234] <<(ResumeBasal = la or StartButton = la)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1190:
Theorem (1190) [serial 2671] used for:
    normalization of [serial 2669]
 


Theorem (1192)                               [serial 2631] 
P [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [234] ->
Q [234] <<Basal_Rate@now = Infusion_Flow_Rate@now and pb_duration = (VTBI/Patient_Bolus_Rate) and 
(ResumeBasal = la or StartButton = la)>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1188 1189 1191:
Theorem (1188) [serial 2667] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2631]
 
Theorem (1189) [serial 2668] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2631]
 
Theorem (1191) [serial 2669] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2631]
 


Theorem (1193)                               [serial 2627] 
P [326] <<(la = ResumeBasal) and (Infusion_Flow_Rate@now = Basal_Rate@now) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [234] ->
Q [234] <<((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
(pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1192:
Theorem (1192) [serial 2631] used for:
    normalization of [serial 2627]
 


Theorem (1194)                               [serial 2624] 
P [326] <<(la = ResumeBasal) and (Infusion_Flow_Rate@now = Basal_Rate@now) and PB_DURATION()>>
S [234] ->
Q [234] <<((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1193:
Theorem (1193) [serial 2627] used for:
  substituted Assertions' predicates for  labels  [serial 2624]
 


Theorem (1195)                               [serial 2652] 
P [320] <<Infusion_Flow_Rate@(now-pb_duration) and Infusion_Flow_Rate@now = Patient_Bolus_Rate and 
PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t ) and not (exists u:time
  in tops,,now 
  that Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ) )>>
S [322] ->
Q [324] <<pb_duration = (VTBI/Patient_Bolus_Rate)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1196)                               [serial 2645] 
P [320] <<Infusion_Flow_Rate@(now-pb_duration) and not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t ) and Infusion_Flow_Rate@now = Patient_Bolus_Rate and 
PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ) )>>
S [322] ->
Q [324] <<(pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1195:
Theorem (1195) [serial 2652] used for:
    normalization of [serial 2645]
 


Theorem (1197)                               [serial 2644] 
P [320] <<Infusion_Flow_Rate@(now-pb_duration) and not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t ) and Infusion_Flow_Rate@now = Patient_Bolus_Rate and 
PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ) )>>
S [322] ->
Q [324] <<true and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Law of And-Simplification:  P and true is P
and theorem 1196:
Theorem (1196) [serial 2645] used for:
  Law of And-Simplification:  P and true is P [serial 2644]
 


Theorem (1198)                               [serial 2642] 
P [320] <<Infusion_Flow_Rate@(now-pb_duration) and not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t ) and Infusion_Flow_Rate@now = Patient_Bolus_Rate and 
PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ) )>>
S [322] ->
Q [324] <<ResumeBasal = ResumeBasal and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Equality Law (idistr):  a=a <-> true
and theorem 1197:
Theorem (1197) [serial 2644] used for:
  Equality Law (idistr):  a=a <-> true [serial 2642]
 


Theorem (1199)                               [serial 2639] 
P [320] <<Infusion_Flow_Rate@(now-pb_duration) and not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t ) and Infusion_Flow_Rate@now = Patient_Bolus_Rate and 
PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate) and not (exists u:time
  in tops,,now 
  that Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ) )>>
S [322] la := ResumeBasal
Q [324] <<ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1198:
Theorem (1198) [serial 2642] used for:
  applied wp for assignment [serial 2639]
 


Theorem (1200)                               [serial 2633] 
P [320] <<not (exists u:time
  in tops,,now 
  that Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ) ) and (Infusion_Flow_Rate@(now-pb_duration) and 
not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t )) and (Infusion_Flow_Rate@now = Patient_Bolus_Rate and 
PatientButton = la and pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [322] la := ResumeBasal
Q [324] <<ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1199:
Theorem (1199) [serial 2639] used for:
  Associativity: (b.c).a = a.b.c [serial 2633]
 


Theorem (1201)                               [serial 2628] 
P [320] <<((la = PatientButton) and (pb_duration = (VTBI/Patient_Bolus_Rate)) and 
(Infusion_Flow_Rate@now = Patient_Bolus_Rate)) and ((Infusion_Flow_Rate@(now-pb_duration) and 
not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t ))) and not (exists u:time
  in tops,,now 
  that ((Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ))) )>>
S [322] la := ResumeBasal
Q [324] <<(la = ResumeBasal) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1200:
Theorem (1200) [serial 2633] used for:
    normalization of [serial 2628]
 


Theorem (1202)                               [serial 2625] 
P [320] <<((la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)) and 
((Infusion_Flow_Rate@(now-pb_duration) and not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t ))) and not (exists u:time
  in tops,,now 
  that ((Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ))) )>>
S [322] la := ResumeBasal
Q [324] <<(la = ResumeBasal) and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1201:
Theorem (1201) [serial 2628] used for:
  substituted Assertions' predicates for  labels  [serial 2625]
 


Theorem (1203)                               [serial 2665] 
P [325] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [325] ->
Q [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Identity (id):  P->P is tautology


Theorem (1204)                               [serial 2662] 
P [325] <<((Basal_Rate)@now = (Infusion_Flow_Rate)@now) and ResumeBasal = la and 
pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [325] ->
Q [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1203:
Theorem (1203) [serial 2665] used for:
    normalization of [serial 2662]
 


Theorem (1205)                               [serial 2650] 
P [325] <<(Basal_Rate = Infusion_Flow_Rate)@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [325] ->
Q [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Distribute @
and theorem 1204:
Theorem (1204) [serial 2662] used for:
  Distribute @ [serial 2650]
 


Theorem (1206)                               [serial 2643] 
P [325] <<ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate) and (Infusion_Flow_Rate = Basal_Rate)@now>>
S [325] ->
Q [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1205:
Theorem (1205) [serial 2650] used for:
    normalization of [serial 2643]
 


Theorem (1207)                               [serial 2640] 
P [325] <<(ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)) and (Infusion_Flow_Rate = Basal_Rate)@now>>
S [325] ->
Q [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Associativity: (b.c).a = a.b.c
and theorem 1206:
Theorem (1206) [serial 2643] used for:
  Associativity: (b.c).a = a.b.c [serial 2640]
 


Theorem (1208)                               [serial 2660] 
P [324] <<ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [325] ->
Q [197] <<ResumeBasal = la or SquareBolusDone = la or StartButton = la>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1209)                               [serial 2656] 
P [324] <<ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [325] ->
Q [197] <<((la = StartButton) or (la = ResumeBasal) or (la = SquareBolusDone))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1208:
Theorem (1208) [serial 2660] used for:
    normalization of [serial 2656]
 


Theorem (1210)                               [serial 2648] 
P [324] <<ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [325] ->
Q [197] <<BASAL_RATE()>>
by Substitution of Assertion Labels
and theorem 1209:
Theorem (1209) [serial 2656] used for:
  substituted Assertions' predicates for  labels  [serial 2648]
 


Theorem (1211)                               [serial 2641] 
P [324] <<ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [325] ->
Q [197] <<(BASAL_RATE())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1210:
Theorem (1210) [serial 2648] used for:
    normalization of [serial 2641]
 


Theorem (1212)                               [serial 2635] 
P [324] <<ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
S [325] Infusion_Flow_Rate!(Basal_Rate)
Q [326] <<Basal_Rate@now = Infusion_Flow_Rate@now and ResumeBasal = la and pb_duration = (VTBI/Patient_Bolus_Rate)>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1207 1211:
Theorem (1207) [serial 2640] used for:
  applied port output <<pre and (Infusion_Flow_Rate=Basal_Rate)@now>> -> <<post>> [serial 2635]
 
Theorem (1211) [serial 2641] used for:
  applied port output of conditional expression <<pre>> -> <<(BASAL_RATE())>> where (BASAL_RATE()) -> Basal_Rate for Infusion_Flow_Rate!(Basal_Rate) 
[serial 2635]
 


Theorem (1213)                               [serial 2629] 
P [324] <<(la = ResumeBasal) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
S [325] Infusion_Flow_Rate!(Basal_Rate)
Q [326] <<(la = ResumeBasal) and (Infusion_Flow_Rate@now = Basal_Rate@now) and (pb_duration = (VTBI/Patient_Bolus_Rate))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1212:
Theorem (1212) [serial 2635] used for:
    normalization of [serial 2629]
 


Theorem (1214)                               [serial 2626] 
P [324] <<(la = ResumeBasal) and PB_DURATION()>>
S [325] Infusion_Flow_Rate!(Basal_Rate)
Q [326] <<(la = ResumeBasal) and (Infusion_Flow_Rate@now = Basal_Rate@now) and PB_DURATION()>>
by Substitution of Assertion Labels
and theorem 1213:
Theorem (1213) [serial 2629] used for:
  substituted Assertions' predicates for  labels  [serial 2626]
 


Theorem (1215)                               [serial 1097] 
P [320] <<((la = PatientButton) and PB_DURATION() and (Infusion_Flow_Rate@now = Patient_Bolus_Rate)) and 
((Infusion_Flow_Rate@(now-pb_duration) and not (exists t:time
  in now-pb_duration,,now 
  that Infusion_Flow_Rate@t ))) and not (exists u:time
  in tops,,now 
  that ((Infusion_Flow_Rate@(u-pb_duration) and not (exists t:time
         in u-pb_duration,,u 
         that Infusion_Flow_Rate@t ))) )>>
S [322] la := ResumeBasal
;
<<(la = ResumeBasal) and PB_DURATION()>>
Infusion_Flow_Rate!(Basal_Rate)
<<(la = ResumeBasal) and (Infusion_Flow_Rate@now = Basal_Rate@now) and PB_DURATION()>>
Q [234] <<((la = StartButton) or (la = ResumeBasal)) and (Infusion_Flow_Rate@now = Basal_Rate@now) and 
PB_DURATION()>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1194 1202 1214:
Theorem (1194) [serial 2624] used for:
  Q1 -> Q in sequential composition for [serial 1097]
 
Theorem (1202) [serial 2625] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1097]
 
Theorem (1214) [serial 2626] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1097]
 


Theorem (1216)                               [serial 1076] 
P [174] << >>
S [199] ->
Q [174] <<Rate_Controller.imp proof obligations>>
by Initial Thread Obligations
and theorems 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1025 1026 1028 1029 1047 1076 1105 1134 1163 1187 1215:
Theorem (1011) [serial 1077] used for:
  <<M(WaitForStart)>> -> <<I>> from invariant I when complete state WaitForStart has Assertion <<M(WaitForStart)>> in its definition.
 
Theorem (1012) [serial 1078] used for:
  <<M(PumpBasalRate)>> -> <<I>> from invariant I when complete state PumpBasalRate has Assertion <<M(PumpBasalRate)>> in its definition.
 
Theorem (1013) [serial 1079] used for:
  <<M(PumpCCBRate)>> -> <<I>> from invariant I when complete state PumpCCBRate has Assertion <<M(PumpCCBRate)>> in its definition.
 
Theorem (1014) [serial 1080] used for:
  <<M(PumpingSuspended)>> -> <<I>> from invariant I when complete state PumpingSuspended has Assertion <<M(PumpingSuspended)>> in its definition.
 
Theorem (1015) [serial 1081] used for:
  <<M(RxApproved)>> -> <<I>> from invariant I when complete state RxApproved has Assertion <<M(RxApproved)>> in its definition.
 
Theorem (1016) [serial 1082] used for:
  <<M(WaitForRx)>> -> <<I>> from invariant I when complete state WaitForRx has Assertion <<M(WaitForRx)>> in its definition.
 
Theorem (1017) [serial 1083] used for:
  <<M(Priming)>> -> <<I>> from invariant I when complete state Priming has Assertion <<M(Priming)>> in its definition.
 
Theorem (1018) [serial 1084] used for:
  <<M(PumpPatientButtonVTBI)>> -> <<I>> from invariant I when complete state PumpPatientButtonVTBI has Assertion <<M(PumpPatientButtonVTBI)>> in its definition.
 
Theorem (1019) [serial 1085] used for:
  <<M(PumpKVORate)>> -> <<I>> from invariant I when complete state PumpKVORate has Assertion <<M(PumpKVORate)>> in its definition.
 
Theorem (1020) [serial 1086] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state PowerOn, <<M(PowerOn)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1025) [serial 1087] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckPBR, <<M(CheckPBR)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1026) [serial 1088] used for:
   <<M(PowerOn) and x>> -> <<M(WaitForRx)>> for go:PowerOn-[x]->WaitForRx{};
 
Theorem (1028) [serial 1089] used for:
   <<M(WaitForRx) and x>> -> <<M(CheckPBR)>> for rxo:WaitForRx-[x]->CheckPBR{};
 
Theorem (1029) [serial 1090] used for:
   <<M(CheckPBR) and x>> -> <<M(Crash)>> for pbr0:CheckPBR-[x]->Crash{};
 
Theorem (1047) [serial 1091] used for:
   <<M(CheckPBR) and x>> A <<M(RxApproved)>> for pbrok:CheckPBR-[x]->RxApproved{A};
 
Theorem (1076) [serial 1092] used for:
   <<M(RxApproved) and x>> A <<M(Priming)>> for rxpri:RxApproved-[x]->Priming{A};
 
Theorem (1105) [serial 1093] used for:
   <<M(Priming) and x>> A <<M(WaitForStart)>> for prd:Priming-[x]->WaitForStart{A};
 
Theorem (1134) [serial 1094] used for:
   <<M(WaitForStart) and x>> A <<M(Priming)>> for pri:WaitForStart-[x]->Priming{A};
 
Theorem (1163) [serial 1095] used for:
   <<M(WaitForStart) and x>> A <<M(PumpBasalRate)>> for sap:WaitForStart-[x]->PumpBasalRate{A};
 
Theorem (1187) [serial 1096] used for:
   <<M(PumpBasalRate) and x>> A <<M(PumpPatientButtonVTBI)>> for pump_basal_rate:PumpBasalRate-[x]->PumpPatientButtonVTBI{A};
 
Theorem (1215) [serial 1097] used for:
   <<M(PumpPatientButtonVTBI) and x>> A <<M(PumpBasalRate)>> for vtbi_delivered:PumpPatientButtonVTBI-[x]->PumpBasalRate{A};
 


Theorem (1217)                               [serial 1099] 
P [133] <<dl = null>>
S [126] ->
Q [126] <<DL() or (dl = null)>>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (1218)                               [serial 2673] 
P [135] <<dl = DRUG_LIBRARY>>
S [126] ->
Q [126] <<(dl = DRUG_LIBRARY) or (dl = null)>>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (1219)                               [serial 1100] 
P [135] <<dl = DRUG_LIBRARY>>
S [126] ->
Q [126] <<DL() or (dl = null)>>
by Substitution of Assertion Labels
and theorem 1218:
Theorem (1218) [serial 2673] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1100]
 


Theorem (1220)                               [serial 1101] 
P [131] <<dl = null>>
S [131] ->
Q [131] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1221)                               [serial 1102] 
P [131] <<dl = null>>
S [138] ->
Q [133] <<dl = null>>
by Identity (id):  P->P is tautology


Theorem (1222)                               [serial 2678] 
P [140] <<DRUG_LIBRARY@now and DRUG_LIBRARY = dl and dl = null and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u )>>
S [140] ->
Q [135] <<DRUG_LIBRARY = dl>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1223)                               [serial 2676] 
P [140] <<(dl = null) and DRUG_LIBRARY@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and dl = DRUG_LIBRARY>>
S [140] ->
Q [135] <<dl = DRUG_LIBRARY>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1222:
Theorem (1222) [serial 2678] used for:
    normalization of [serial 2676]
 


Theorem (1224)                               [serial 2675] 
P [140] <<((dl = null) and DRUG_LIBRARY@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u )) and dl = DRUG_LIBRARY>>
S [140] ->
Q [135] <<dl = DRUG_LIBRARY>>
by Associativity: (b.c).a = a.b.c
and theorem 1223:
Theorem (1223) [serial 2676] used for:
  Associativity: (b.c).a = a.b.c [serial 2675]
 


Theorem (1225)                               [serial 2674] 
P [139] <<(dl = null) and DRUG_LIBRARY@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u )>>
S [140] Load_Drug_Library?(dl)
Q [135] <<dl = DRUG_LIBRARY>>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 1224:
Theorem (1224) [serial 2675] used for:
  applied port input of value <<pre and dl=M(Load_Drug_Library)>> -> <<post>> [serial 2674]
 


Theorem (1226)                               [serial 1103] 
P [139] <<(dl = null) and DRUG_LIBRARY@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u )>>
S [140] Load_Drug_Library?(dl)
Q [135] <<dl = DRUG_LIBRARY>>
by Introduction of Existential Quantification (bl.aanone)
and theorem 1225:
Theorem (1225) [serial 2674] used for:
  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 1103]
 


Theorem (1227)                               [serial 2684] 
P [142] <<DRUG_LIBRARY@now and DRUG_LIBRARY = dl and DRUG_LIBRARY = dl and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [142] ->
Q [135] <<DRUG_LIBRARY = dl>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1228)                               [serial 2682] 
P [142] <<(dl = DRUG_LIBRARY) and DRUG_LIBRARY@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that stop@u ) and dl = DRUG_LIBRARY>>
S [142] ->
Q [135] <<dl = DRUG_LIBRARY>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1227:
Theorem (1227) [serial 2684] used for:
    normalization of [serial 2682]
 


Theorem (1229)                               [serial 2681] 
P [142] <<((dl = DRUG_LIBRARY) and DRUG_LIBRARY@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and dl = DRUG_LIBRARY>>
S [142] ->
Q [135] <<dl = DRUG_LIBRARY>>
by Associativity: (b.c).a = a.b.c
and theorem 1228:
Theorem (1228) [serial 2682] used for:
  Associativity: (b.c).a = a.b.c [serial 2681]
 


Theorem (1230)                               [serial 2680] 
P [141] <<(dl = DRUG_LIBRARY) and DRUG_LIBRARY@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [142] Load_Drug_Library?(dl)
Q [135] <<dl = DRUG_LIBRARY>>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 1229:
Theorem (1229) [serial 2681] used for:
  applied port input of value <<pre and dl=M(Load_Drug_Library)>> -> <<post>> [serial 2680]
 


Theorem (1231)                               [serial 1104] 
P [141] <<(dl = DRUG_LIBRARY) and DRUG_LIBRARY@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [142] Load_Drug_Library?(dl)
Q [135] <<dl = DRUG_LIBRARY>>
by Introduction of Existential Quantification (bl.aanone)
and theorem 1230:
Theorem (1230) [serial 2680] used for:
  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 1104]
 


Theorem (1232)                               [serial 2697] 
P [143] <<(dl = DRUG_LIBRARY) and DRUG_CODE@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [143] ->
Q [145] <<(dl = DRUG_LIBRARY)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1233)                               [serial 2686] 
P [143] <<(dl = DRUG_LIBRARY) and DRUG_CODE@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [143] ->
Q [145] <<DL()>>
by Substitution of Assertion Labels
and theorem 1232:
Theorem (1232) [serial 2697] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2686]
 


Theorem (1234)                               [serial 2700] 
P [180] <<DRUG_LIBRARY = dl>>
S [135] ->
Q [135] <<DRUG_LIBRARY = dl>>
by Identity (id):  P->P is tautology


Theorem (1235)                               [serial 2698] 
P [180] <<(dl = DRUG_LIBRARY)>>
S [135] ->
Q [135] <<dl = DRUG_LIBRARY>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1234:
Theorem (1234) [serial 2700] used for:
    normalization of [serial 2698]
 


Theorem (1236)                               [serial 2687] 
P [180] <<DL()>>
S [135] ->
Q [135] <<dl = DRUG_LIBRARY>>
by Substitution of Assertion Labels
and theorem 1235:
Theorem (1235) [serial 2698] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2687]
 


Theorem (1237)                               [serial 2703] 
P [145] <<k = 0 and DL()>>
S [149] ->
Q [149] <<k = 0 and DL()>>
by Identity (id):  P->P is tautology


Theorem (1238)                               [serial 2689] 
P [145] <<(DL()) and k = 0>>
S [149] ->
Q [149] <<DL() and (k = 0)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1237:
Theorem (1237) [serial 2703] used for:
    normalization of [serial 2689]
 


Theorem (1239)                               [serial 2706] 
P [149] <<k = 0 and DL()>>
S [149] ->
Q [149] <<k = 0 and DL()>>
by Identity (id):  P->P is tautology


Theorem (1240)                               [serial 2692] 
P [149] <<DL() and (k = 0)>>
S [149] ->
Q [149] <<DL() and (k = 0)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1239:
Theorem (1239) [serial 2706] used for:
    normalization of [serial 2692]
 


Theorem (1241)                               [serial 2693] 
P [178] <<DL()>>
S [178] ->
Q [178] <<DL()>>
by Identity (id):  P->P is tautology


Theorem (1242)                               [serial 2711] 
P [151] <<DRUG_CODE = dc and k = 0 and DL()>>
S [151] ->
Q [152] <<DRUG_CODE = dc and k = 0 and DL()>>
by Identity (id):  P->P is tautology


Theorem (1243)                               [serial 2709] 
P [151] <<DL() and (k = 0) and dc = DRUG_CODE>>
S [151] ->
Q [152] <<(dc = DRUG_CODE) and DL() and (k = 0)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1242:
Theorem (1242) [serial 2711] used for:
    normalization of [serial 2709]
 


Theorem (1244)                               [serial 2708] 
P [151] <<(DL() and (k = 0)) and dc = DRUG_CODE>>
S [151] ->
Q [152] <<(dc = DRUG_CODE) and DL() and (k = 0)>>
by Associativity: (b.c).a = a.b.c
and theorem 1243:
Theorem (1243) [serial 2709] used for:
  Associativity: (b.c).a = a.b.c [serial 2708]
 


Theorem (1245)                               [serial 2694] 
P [149] <<DL() and (k = 0)>>
S [151] Get_Drug_Record?(dc)
Q [152] <<(dc = DRUG_CODE) and DL() and (k = 0)>>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 1244:
Theorem (1244) [serial 2708] used for:
  applied port input of value <<pre and dc=M(Get_Drug_Record)>> -> <<post>> [serial 2694]
 


Theorem (1246)                               [serial 2765] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<DRUG_CODE = dc>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1247)                               [serial 2766] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<DL()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1248)                               [serial 2776] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1249)                               [serial 2774] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<not (false)>>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1248:
Theorem (1248) [serial 2776] used for:
    normalization of [serial 2774]
 


Theorem (1250)                               [serial 2773] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<not (exists j:integer
  in false 
  that DRUG_CODE = DRUG_LIBRARY[j].code )>>
by Empty Range Law, Exists: exists a:t in false that V is false
and theorem 1249:
Theorem (1249) [serial 2774] used for:
  Empty Range Law, Exists: exists a:t in false that V is false [serial 2773]
 


Theorem (1251)                               [serial 2771] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<not (exists j:integer
  in 0..-1 
  that DRUG_CODE = DRUG_LIBRARY[j].code )>>
by Empty Range
and theorem 1250:
Theorem (1250) [serial 2773] used for:
  Empty Range [serial 2771]
 


Theorem (1252)                               [serial 2769] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<(not (exists j:integer
  in 0..0-1 
  that (DRUG_LIBRARY[j].code = DRUG_CODE) ))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1251:
Theorem (1251) [serial 2771] used for:
    normalization of [serial 2769]
 


Theorem (1253)                               [serial 2768] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<(not (exists j:integer
  in 0..k-1 
  that (DRUG_LIBRARY[j].code = DRUG_CODE) ))>>
by Guided Substitution of Equals
and theorem 1252:
Theorem (1252) [serial 2769] used for:
  Guided Substitution of Equals
 replacing "k" with its = "0" in its postcondition [serial 2768]
 


Theorem (1254)                               [serial 2767] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [125] <<NDF(k)>>
by Substitution of Assertion Labels
and theorem 1253:
Theorem (1253) [serial 2768] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2767]
 


Theorem (1255)                               [serial 2763] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [156] <<DRUG_CODE = dc and DL() and NDF(k)>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1246 1247 1254:
Theorem (1246) [serial 2765] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2763]
 
Theorem (1247) [serial 2766] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2763]
 
Theorem (1254) [serial 2767] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2763]
 


Theorem (1256)                               [serial 2761] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [156] <<((dc = DRUG_CODE) and DL() and NDF(k))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1255:
Theorem (1255) [serial 2763] used for:
    normalization of [serial 2761]
 


Theorem (1257)                               [serial 2725] 
P [152] <<DRUG_CODE = dc and k = 0 and DL()>>
S [156] ->
Q [156] <<INVW()>>
by Substitution of Assertion Labels
and theorem 1256:
Theorem (1256) [serial 2761] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2725]
 


Theorem (1258)                               [serial 2713] 
P [152] <<(dc = DRUG_CODE) and DL() and (k = 0)>>
S [156] ->
Q [156] <<INVW()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1257:
Theorem (1257) [serial 2725] used for:
    normalization of [serial 2713]
 


Theorem (1259)                               [serial 2748] 
P [155] <<0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code and INVW()>>
S [159] ->
Q [159] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-k)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1260)                               [serial 2727] 
P [155] <<INVW() and (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code)>>
S [159] ->
Q [159] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-k)>>
by Associativity: (b.c).a = a.b.c
and theorem 1259:
Theorem (1259) [serial 2748] used for:
  Associativity: (b.c).a = a.b.c [serial 2727]
 


Theorem (1261)                               [serial 2717] 
P [155] <<(INVW()) and ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
S [159] ->
Q [159] <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1260:
Theorem (1260) [serial 2727] used for:
    normalization of [serial 2717]
 


Theorem (1262)                               [serial 2729] 
P [159] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-k)>>
S [159] ->
Q [159] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-k)>>
by Identity (id):  P->P is tautology


Theorem (1263)                               [serial 2720] 
P [159] <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
S [159] ->
Q [159] <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1262:
Theorem (1262) [serial 2729] used for:
    normalization of [serial 2720]
 


Theorem (1264)                               [serial 2731] 
P [161] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-(k-1))>>
S [161] ->
Q [161] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-(k-1))>>
by Identity (id):  P->P is tautology


Theorem (1265)                               [serial 2721] 
P [161] <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
S [161] ->
Q [161] <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1264:
Theorem (1264) [serial 2731] used for:
    normalization of [serial 2721]
 


Theorem (1266)                               [serial 2733] 
P [159] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-k)>>
S [160] ->
Q [161] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-k)>>
by Identity (id):  P->P is tautology


Theorem (1267)                               [serial 2723] 
P [159] <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
S [160] ->
Q [161] <<(0 < (#PCA_Properties::Drug_Library_Size-((k+1)-1))) and INVW()>>
by Normalization
  Normalization Axioms:
    Subtaction of Added Value:  (a+b)-a is b
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1266:
Theorem (1266) [serial 2733] used for:
    normalization of [serial 2723]
 


Theorem (1268)                               [serial 2722] 
P [159] <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
S [160] k := k+1
Q [161] <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1267:
Theorem (1267) [serial 2723] used for:
  applied wp for assignment [serial 2722]
 


Theorem (1269)                               [serial 2718] 
P [159] <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
S [159] <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
k := k+1
<<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
Q [161] <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
by Introduction of Existential Quantification (bl.aab)
and theorems 1263 1265 1268:
Theorem (1263) [serial 2720] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 2718]
 
Theorem (1265) [serial 2721] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 2718]
 
Theorem (1268) [serial 2722] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 2718]
 


Theorem (1270)                               [serial 2735] 
P [161] <<INVW() and 0 < (#PCA_Properties::Drug_Library_Size-(k-1))>>
S [158] ->
Q [156] <<INVW()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1271)                               [serial 2719] 
P [161] <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
S [158] ->
Q [156] <<INVW()>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1270:
Theorem (1270) [serial 2735] used for:
    normalization of [serial 2719]
 


Theorem (1272)                               [serial 2714] 
P [156] <<(INVW()) and ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
S [158] {
<<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
k := k+1
<<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
} 
Q [156] <<INVW()>>
by Introduction of Existential Quantification (bl.elq)
and theorems 1261 1269 1271:
Theorem (1261) [serial 2717] used for:
  <<P and x=e>> -> <<A>> in existential lattice quantification for [serial 2714]
 
Theorem (1269) [serial 2718] used for:
  <<A>> T <<B>> in existential lattice quantification for [serial 2714]
 
Theorem (1271) [serial 2719] used for:
  <<B>> -> <<Q>> in existential lattice quantification for [serial 2714]
 


Theorem (1273)                               [serial 2737] 
P [156] <<INVW() and not (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code)>>
S [156] ->
Q [163] <<INVW() and not (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code)>>
by Identity (id):  P->P is tautology


Theorem (1274)                               [serial 2715] 
P [156] <<(INVW()) and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
S [156] ->
Q [163] <<INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1273:
Theorem (1273) [serial 2737] used for:
    normalization of [serial 2715]
 


Theorem (1275)                               [serial 2759] 
P [156] <<not 0 < (#PCA_Properties::Drug_Library_Size-k)>>
S [156] ->
Q [156] <<not 0 < (#PCA_Properties::Drug_Library_Size-k) or not dc <> dl[k].code>>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (1276)                               [serial 2756] 
P [156] <<not 0 < (#PCA_Properties::Drug_Library_Size-k)>>
S [156] ->
Q [156] <<(not (0 < (#PCA_Properties::Drug_Library_Size-k)) or not (dc <> dl[k].code))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1275:
Theorem (1275) [serial 2759] used for:
    normalization of [serial 2756]
 


Theorem (1277)                               [serial 2754] 
P [156] <<not 0 < (#PCA_Properties::Drug_Library_Size-k)>>
S [156] ->
Q [156] <<not (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code)>>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 1276:
Theorem (1276) [serial 2756] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2754]
 


Theorem (1278)                               [serial 2751] 
P [156] <<(not (0 < (#PCA_Properties::Drug_Library_Size-k)))>>
S [156] ->
Q [156] <<not (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1277:
Theorem (1277) [serial 2754] used for:
    normalization of [serial 2751]
 


Theorem (1279)                               [serial 2739] 
P [156] <<(#PCA_Properties::Drug_Library_Size-k) <= 0>>
S [156] ->
Q [156] <<not (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code)>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1278:
Theorem (1278) [serial 2751] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2739]
 


Theorem (1280)                               [serial 2716] 
P [156] <<(#PCA_Properties::Drug_Library_Size-k) <= 0>>
S [156] ->
Q [156] <<not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1279:
Theorem (1279) [serial 2739] used for:
    normalization of [serial 2716]
 


Theorem (1281)                               [serial 2695] 
P [152] <<(dc = DRUG_CODE) and DL() and (k = 0)>>
S [155] while ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0)) 
  invariant <<INVW()>> 
  bound (#PCA_Properties::Drug_Library_Size-k)
  {
  <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
  k := k+1
  <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
  }  
Q [163] <<INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
by Iterative Rule: 
     P -> I 
   <<I>> S <<I>> 
 (I and not E) -> Q 
    B>0 -> E 
   B(i)>B(i+1) 
--------------------------------------------------- 
<<P>> while (E) invariant <<I>> bound B { S } <<Q>> (bl.loop)
and theorems 1258 1272 1274 1280:
Theorem (1258) [serial 2713] used for:
  P->I for while loop in [serial 2695]
 
Theorem (1272) [serial 2714] used for:
  <<I and E>> S <<I>> for while loop in [serial 2695]
 
Theorem (1274) [serial 2715] used for:
  (I and not E) -> Q for while loop in [serial 2695]
 
Theorem (1280) [serial 2716] used for:
  (B<=0) -> not E, for while loop in [serial 2695]
 


Theorem (1282)                               [serial 2851] 
P [163] <<DRUG_CODE = dc and DL() and NDF(k) and (dc = dl[k].code or #PCA_Properties::Drug_Library_Size = k)>>
S [167] ->
Q [167] <<dc = dl[k].code or #PCA_Properties::Drug_Library_Size = k>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1283)                               [serial 2842] 
P [163] <<DRUG_CODE = dc and DL() and NDF(k) and (dc = dl[k].code or not 0 < (#PCA_Properties::Drug_Library_Size-k))>>
S [167] ->
Q [167] <<dc = dl[k].code or not 0 < (#PCA_Properties::Drug_Library_Size-k)>>
by Algebra
and theorem 1282:
Theorem (1282) [serial 2851] used for:
  Algebra [serial 2842]
 


Theorem (1284)                               [serial 2833] 
P [163] <<(dc = DRUG_CODE) and DL() and NDF(k) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)) or 
not ((not (dl[k].code = dc))))>>
S [167] ->
Q [167] <<(not (0 < (#PCA_Properties::Drug_Library_Size-k))) or dc = dl[k].code>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1283:
Theorem (1283) [serial 2842] used for:
    normalization of [serial 2833]
 


Theorem (1285)                               [serial 2830] 
P [163] <<(dc = DRUG_CODE) and DL() and NDF(k) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)) or 
not ((not (dl[k].code = dc))))>>
S [167] ->
Q [167] <<(#PCA_Properties::Drug_Library_Size-k) <= 0 or dc = dl[k].code>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1284:
Theorem (1284) [serial 2833] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2830]
 


Theorem (1286)                               [serial 2827] 
P [163] <<(dc = DRUG_CODE) and DL() and NDF(k) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)) or 
not (dc <> dl[k].code))>>
S [167] ->
Q [167] <<(#PCA_Properties::Drug_Library_Size-k) <= 0 or dc = dl[k].code>>
by Replace inequality with not equality:  a<>b  iff  not(a=b)
and theorem 1285:
Theorem (1285) [serial 2830] used for:
  Replace inequality with not equality:  a<>b  iff  not(a=b) [serial 2827]
 


Theorem (1287)                               [serial 2822] 
P [163] <<(dc = DRUG_CODE) and DL() and NDF(k) and not (0 < (#PCA_Properties::Drug_Library_Size-k) and 
dc <> dl[k].code)>>
S [167] ->
Q [167] <<(#PCA_Properties::Drug_Library_Size-k) <= 0 or dc = dl[k].code>>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 1286:
Theorem (1286) [serial 2827] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2822]
 


Theorem (1288)                               [serial 2816] 
P [163] <<((dc = DRUG_CODE) and DL() and NDF(k)) and not (0 < (#PCA_Properties::Drug_Library_Size-k) and 
dc <> dl[k].code)>>
S [167] ->
Q [167] <<(#PCA_Properties::Drug_Library_Size-k) <= 0 or dc = dl[k].code>>
by Associativity: (b.c).a = a.b.c
and theorem 1287:
Theorem (1287) [serial 2822] used for:
  Associativity: (b.c).a = a.b.c [serial 2816]
 


Theorem (1289)                               [serial 2790] 
P [163] <<INVW() and not (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code)>>
S [167] ->
Q [167] <<(#PCA_Properties::Drug_Library_Size-k) <= 0 or dc = dl[k].code>>
by Substitution of Assertion Labels
and theorem 1288:
Theorem (1288) [serial 2816] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2790]
 


Theorem (1290)                               [serial 2778] 
P [163] <<INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
S [167] ->
Q [167] <<(dl[k].code = dc) or ((#PCA_Properties::Drug_Library_Size-k) <= 0)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1289:
Theorem (1289) [serial 2790] used for:
    normalization of [serial 2778]
 


Theorem (1291)                               [serial 2855] 
P [167] <<DRUG_CODE = dc and dc = dl[k].code and DL() and NDF(k) and (dc = dl[k].code or 
#PCA_Properties::Drug_Library_Size = k)>>
S [167] ->
Q [169] <<dc = dl[k].code and DL()>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1292)                               [serial 2850] 
P [167] <<DRUG_CODE = dc and dc = dl[k].code and DL() and NDF(k) and (dc = dl[k].code or 
#PCA_Properties::Drug_Library_Size = k)>>
S [167] ->
Q [169] <<DRUG_CODE = dl[k].code and DL()>>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1291:
Theorem (1291) [serial 2855] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "DRUG_CODE"
 with its ="
 (dc)" [serial 2850]
 


Theorem (1293)                               [serial 2840] 
P [167] <<DRUG_CODE = dc and dc = dl[k].code and DL() and NDF(k) and (dc = dl[k].code or 
not 0 < (#PCA_Properties::Drug_Library_Size-k))>>
S [167] ->
Q [169] <<DRUG_CODE = dl[k].code and DL()>>
by Algebra
and theorem 1292:
Theorem (1292) [serial 2850] used for:
  Algebra [serial 2840]
 


Theorem (1294)                               [serial 2831] 
P [167] <<(dc = DRUG_CODE) and DL() and NDF(k) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)) or 
not ((not (dl[k].code = dc)))) and dc = dl[k].code>>
S [167] ->
Q [169] <<DRUG_CODE = dl[k].code and DL()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1293:
Theorem (1293) [serial 2840] used for:
    normalization of [serial 2831]
 


Theorem (1295)                               [serial 2828] 
P [167] <<(dc = DRUG_CODE) and DL() and NDF(k) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)) or 
not (dc <> dl[k].code)) and dc = dl[k].code>>
S [167] ->
Q [169] <<DRUG_CODE = dl[k].code and DL()>>
by Replace inequality with not equality:  a<>b  iff  not(a=b)
and theorem 1294:
Theorem (1294) [serial 2831] used for:
  Replace inequality with not equality:  a<>b  iff  not(a=b) [serial 2828]
 


Theorem (1296)                               [serial 2824] 
P [167] <<(dc = DRUG_CODE) and DL() and NDF(k) and not (0 < (#PCA_Properties::Drug_Library_Size-k) and 
dc <> dl[k].code) and dc = dl[k].code>>
S [167] ->
Q [169] <<DRUG_CODE = dl[k].code and DL()>>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 1295:
Theorem (1295) [serial 2828] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2824]
 


Theorem (1297)                               [serial 2819] 
P [167] <<((dc = DRUG_CODE) and DL() and NDF(k)) and not (0 < (#PCA_Properties::Drug_Library_Size-k) and 
dc <> dl[k].code) and dc = dl[k].code>>
S [167] ->
Q [169] <<DRUG_CODE = dl[k].code and DL()>>
by Associativity: (b.c).a = a.b.c
and theorem 1296:
Theorem (1296) [serial 2824] used for:
  Associativity: (b.c).a = a.b.c [serial 2819]
 


Theorem (1298)                               [serial 2812] 
P [167] <<INVW() and not (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code) and 
dc = dl[k].code>>
S [167] ->
Q [169] <<DRUG_CODE = dl[k].code and DL()>>
by Substitution of Assertion Labels
and theorem 1297:
Theorem (1297) [serial 2819] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2812]
 


Theorem (1299)                               [serial 2792] 
P [167] <<dc = dl[k].code and (INVW() and not (0 < (#PCA_Properties::Drug_Library_Size-k) and 
dc <> dl[k].code))>>
S [167] ->
Q [169] <<DRUG_CODE = dl[k].code and DL()>>
by Associativity: (b.c).a = a.b.c
and theorem 1298:
Theorem (1298) [serial 2812] used for:
  Associativity: (b.c).a = a.b.c [serial 2792]
 


Theorem (1300)                               [serial 2779] 
P [167] <<(INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))) and 
(dl[k].code = dc)>>
S [167] ->
Q [169] <<(dl[k].code = DRUG_CODE) and DL()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1299:
Theorem (1299) [serial 2792] used for:
    normalization of [serial 2779]
 


Theorem (1301)                               [serial 2871] 
P [169] <<DRUG_CODE = dl[k].code and DRUG_LIBRARY = dl>>
S [170] ->
Q [85] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1302)                               [serial 2870] 
P [169] <<DRUG_CODE = dl[k].code and DRUG_LIBRARY = dl>>
S [170] ->
Q [85] <<exists k:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that true >>
by Existential Quantification Introduction
and theorem 1301:
Theorem (1301) [serial 2871] used for:
  Existential Quantification Introduction [serial 2870]
 


Theorem (1303)                               [serial 2869] 
P [169] <<DRUG_CODE = dl[k].code and DRUG_LIBRARY = dl>>
S [170] ->
Q [85] <<exists k:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that true and true >>
by Law of And-Simplification:  P and true is P
and theorem 1302:
Theorem (1302) [serial 2870] used for:
  Law of And-Simplification:  P and true is P [serial 2869]
 


Theorem (1304)                               [serial 2868] 
P [169] <<DRUG_CODE = dl[k].code and DRUG_LIBRARY = dl>>
S [170] ->
Q [85] <<exists k:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that DRUG_LIBRARY[k] = DRUG_LIBRARY[k] and DRUG_LIBRARY[k].code = DRUG_LIBRARY[k].code >>
by Equality Law (idistr):  a=a <-> true
and theorem 1303:
Theorem (1303) [serial 2869] used for:
  Equality Law (idistr):  a=a <-> true [serial 2868]
 


Theorem (1305)                               [serial 2853] 
P [169] <<DRUG_CODE = dl[k].code and DRUG_LIBRARY = dl>>
S [170] ->
Q [85] <<exists k:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that DRUG_LIBRARY[k] = dl[k] and DRUG_LIBRARY[k].code = dl[k].code >>
by Guided Substitution of Equals
and theorem 1304:
Theorem (1304) [serial 2868] used for:
  Guided Substitution of Equals
 replacing "dl" with its = "DRUG_LIBRARY" in its postcondition [serial 2853]
 


Theorem (1306)                               [serial 2836] 
P [169] <<DRUG_CODE = dl[k].code and DRUG_LIBRARY = dl>>
S [170] ->
Q [85] <<exists k:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that DRUG_CODE = DRUG_LIBRARY[k].code and DRUG_LIBRARY[k] = dl[k] >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1305:
Theorem (1305) [serial 2853] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "DRUG_CODE"
 with its ="
 (dl[k].code)" [serial 2836]
 


Theorem (1307)                               [serial 2817] 
P [169] <<DRUG_CODE = dl[k].code and (dl = DRUG_LIBRARY)>>
S [170] ->
Q [85] <<exists k:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that DRUG_CODE = DRUG_LIBRARY[k].code and DRUG_LIBRARY[k] = dl[k] >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1306:
Theorem (1306) [serial 2836] used for:
    normalization of [serial 2817]
 


Theorem (1308)                               [serial 2794] 
P [169] <<DRUG_CODE = dl[k].code and DL()>>
S [170] ->
Q [85] <<exists k:integer
  in 0..#PCA_Properties::Drug_Library_Size-1 
  that DRUG_CODE = DRUG_LIBRARY[k].code and DRUG_LIBRARY[k] = dl[k] >>
by Substitution of Assertion Labels
and theorem 1307:
Theorem (1307) [serial 2817] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2794]
 


Theorem (1309)                               [serial 2785] 
P [169] <<(dl[k].code = DRUG_CODE) and DL()>>
S [170] ->
Q [85] <<exists k:integer
  in 0..(#PCA_Properties::Drug_Library_Size-1) 
  that DRUG_LIBRARY[k].code = DRUG_CODE and dl[k] = DRUG_LIBRARY[k] >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1308:
Theorem (1308) [serial 2794] used for:
    normalization of [serial 2785]
 


Theorem (1310)                               [serial 2813] 
P [170] <<DRUG_CODE = dl[k].code and DL() and (The_Drug_Record iff dl[k])@now>>
S [170] ->
Q [171] <<DL()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1311)                               [serial 2796] 
P [170] <<(The_Drug_Record iff dl[k])@now and (DRUG_CODE = dl[k].code and DL())>>
S [170] ->
Q [171] <<DL()>>
by Associativity: (b.c).a = a.b.c
and theorem 1310:
Theorem (1310) [serial 2813] used for:
  Associativity: (b.c).a = a.b.c [serial 2796]
 


Theorem (1312)                               [serial 2786] 
P [170] <<((dl[k].code = DRUG_CODE) and DL()) and (The_Drug_Record iff dl[k])@now>>
S [170] ->
Q [171] <<DL()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1311:
Theorem (1311) [serial 2796] used for:
    normalization of [serial 2786]
 


Theorem (1313)                               [serial 2780] 
P [169] <<(dl[k].code = DRUG_CODE) and DL()>>
S [170] The_Drug_Record!(dl[k])
Q [171] <<DL()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1309 1312:
Theorem (1309) [serial 2785] used for:
  applied port output of value <<pre>> -> <<M(The_Drug_Record)[The_Drug_Record|dl]>> [serial 2780]
 
Theorem (1312) [serial 2786] used for:
  applied port output <<pre and (The_Drug_Record iff 
^{dl k})@now>> -> <<post>> [serial 2780]
 


Theorem (1314)                               [serial 2781] 
P [171] <<DL()>>
S [167] ->
Q [178] <<DL()>>
by Identity (id):  P->P is tautology


Theorem (1315)                               [serial 2866] 
P [167] <<DRUG_CODE = dc and k = #PCA_Properties::Drug_Library_Size and DL() and 
NDF(k) and (dc = dl[k].code or k = #PCA_Properties::Drug_Library_Size)>>
S [167] ->
Q [174] <<DRUG_CODE = dc and DL() and NDF(k)>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1316)                               [serial 2863] 
P [167] <<DRUG_CODE = dc and k = #PCA_Properties::Drug_Library_Size and DL() and 
NDF(k) and (dc = dl[k].code or k = #PCA_Properties::Drug_Library_Size)>>
S [167] ->
Q [174] <<((dc = DRUG_CODE) and DL() and NDF(k))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1315:
Theorem (1315) [serial 2866] used for:
    normalization of [serial 2863]
 


Theorem (1317)                               [serial 2861] 
P [167] <<DRUG_CODE = dc and k = #PCA_Properties::Drug_Library_Size and DL() and 
NDF(k) and (dc = dl[k].code or k = #PCA_Properties::Drug_Library_Size)>>
S [167] ->
Q [174] <<INVW()>>
by Substitution of Assertion Labels
and theorem 1316:
Theorem (1316) [serial 2863] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2861]
 


Theorem (1318)                               [serial 2858] 
P [167] <<DRUG_CODE = dc and DL() and NDF(k) and #PCA_Properties::Drug_Library_Size = k and 
(dc = dl[k].code or #PCA_Properties::Drug_Library_Size = k)>>
S [167] ->
Q [174] <<(INVW())>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1317:
Theorem (1317) [serial 2861] used for:
    normalization of [serial 2858]
 


Theorem (1319)                               [serial 2857] 
P [167] <<DRUG_CODE = dc and DL() and NDF(k) and #PCA_Properties::Drug_Library_Size = k and 
(dc = dl[k].code or #PCA_Properties::Drug_Library_Size = k)>>
S [167] ->
Q [174] <<true and INVW()>>
by Law of And-Simplification:  P and true is P
and theorem 1318:
Theorem (1318) [serial 2858] used for:
  Law of And-Simplification:  P and true is P [serial 2857]
 


Theorem (1320)                               [serial 2856] 
P [167] <<DRUG_CODE = dc and DL() and NDF(k) and #PCA_Properties::Drug_Library_Size = k and 
(dc = dl[k].code or #PCA_Properties::Drug_Library_Size = k)>>
S [167] ->
Q [174] <<#PCA_Properties::Drug_Library_Size = #PCA_Properties::Drug_Library_Size and 
INVW()>>
by Equality Law (idistr):  a=a <-> true
and theorem 1319:
Theorem (1319) [serial 2857] used for:
  Equality Law (idistr):  a=a <-> true [serial 2856]
 


Theorem (1321)                               [serial 2852] 
P [167] <<DRUG_CODE = dc and DL() and NDF(k) and #PCA_Properties::Drug_Library_Size = k and 
(dc = dl[k].code or #PCA_Properties::Drug_Library_Size = k)>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1320:
Theorem (1320) [serial 2856] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "k"
 with its ="
 (#PCA_Properties::Drug_Library_Size)" [serial 2852]
 


Theorem (1322)                               [serial 2844] 
P [167] <<DRUG_CODE = dc and DL() and NDF(k) and not 0 < (#PCA_Properties::Drug_Library_Size-k) and 
(dc = dl[k].code or not 0 < (#PCA_Properties::Drug_Library_Size-k))>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by Algebra
and theorem 1321:
Theorem (1321) [serial 2852] used for:
  Algebra [serial 2844]
 


Theorem (1323)                               [serial 2834] 
P [167] <<(dc = DRUG_CODE) and DL() and NDF(k) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)) or 
not ((not (dl[k].code = dc)))) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)))>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1322:
Theorem (1322) [serial 2844] used for:
    normalization of [serial 2834]
 


Theorem (1324)                               [serial 2832] 
P [167] <<(dc = DRUG_CODE) and DL() and NDF(k) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)) or 
not ((not (dl[k].code = dc)))) and (#PCA_Properties::Drug_Library_Size-k) <= 0>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1323:
Theorem (1323) [serial 2834] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2832]
 


Theorem (1325)                               [serial 2829] 
P [167] <<(dc = DRUG_CODE) and DL() and NDF(k) and (not (0 < (#PCA_Properties::Drug_Library_Size-k)) or 
not (dc <> dl[k].code)) and (#PCA_Properties::Drug_Library_Size-k) <= 0>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by Replace inequality with not equality:  a<>b  iff  not(a=b)
and theorem 1324:
Theorem (1324) [serial 2832] used for:
  Replace inequality with not equality:  a<>b  iff  not(a=b) [serial 2829]
 


Theorem (1326)                               [serial 2825] 
P [167] <<(dc = DRUG_CODE) and DL() and NDF(k) and not (0 < (#PCA_Properties::Drug_Library_Size-k) and 
dc <> dl[k].code) and (#PCA_Properties::Drug_Library_Size-k) <= 0>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 1325:
Theorem (1325) [serial 2829] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2825]
 


Theorem (1327)                               [serial 2820] 
P [167] <<((dc = DRUG_CODE) and DL() and NDF(k)) and not (0 < (#PCA_Properties::Drug_Library_Size-k) and 
dc <> dl[k].code) and (#PCA_Properties::Drug_Library_Size-k) <= 0>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by Associativity: (b.c).a = a.b.c
and theorem 1326:
Theorem (1326) [serial 2825] used for:
  Associativity: (b.c).a = a.b.c [serial 2820]
 


Theorem (1328)                               [serial 2814] 
P [167] <<INVW() and not (0 < (#PCA_Properties::Drug_Library_Size-k) and dc <> dl[k].code) and 
(#PCA_Properties::Drug_Library_Size-k) <= 0>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by Substitution of Assertion Labels
and theorem 1327:
Theorem (1327) [serial 2820] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2814]
 


Theorem (1329)                               [serial 2799] 
P [167] <<(#PCA_Properties::Drug_Library_Size-k) <= 0 and (INVW() and not (0 < (#PCA_Properties::Drug_Library_Size-k) and 
dc <> dl[k].code))>>
S [167] ->
Q [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
by Associativity: (b.c).a = a.b.c
and theorem 1328:
Theorem (1328) [serial 2814] used for:
  Associativity: (b.c).a = a.b.c [serial 2799]
 


Theorem (1330)                               [serial 2782] 
P [167] <<(INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))) and 
((#PCA_Properties::Drug_Library_Size-k) <= 0)>>
S [167] ->
Q [174] <<INVW() and (#PCA_Properties::Drug_Library_Size = k)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1329:
Theorem (1329) [serial 2799] used for:
    normalization of [serial 2782]
 


Theorem (1331)                               [serial 2854] 
P [174] <<DRUG_CODE = dc and k = #PCA_Properties::Drug_Library_Size and DL() and 
NDF(k)>>
S [175] ->
Q [91] <<NDF(k)>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1332)                               [serial 2838] 
P [174] <<DRUG_CODE = dc and k = #PCA_Properties::Drug_Library_Size and DL() and 
NDF(k)>>
S [175] ->
Q [91] <<NDF(#PCA_Properties::Drug_Library_Size)>>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1331:
Theorem (1331) [serial 2854] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "
^{# 
 ^{:: PCA_Properties Drug_Library_Size}}"
 with its ="
 (k)" [serial 2838]
 


Theorem (1333)                               [serial 2823] 
P [174] <<(dc = DRUG_CODE) and DL() and NDF(k) and k = #PCA_Properties::Drug_Library_Size>>
S [175] ->
Q [91] <<NDF(#PCA_Properties::Drug_Library_Size)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1332:
Theorem (1332) [serial 2838] used for:
    normalization of [serial 2823]
 


Theorem (1334)                               [serial 2818] 
P [174] <<k = #PCA_Properties::Drug_Library_Size and ((dc = DRUG_CODE) and DL() and 
NDF(k))>>
S [175] ->
Q [91] <<NDF(#PCA_Properties::Drug_Library_Size)>>
by Associativity: (b.c).a = a.b.c
and theorem 1333:
Theorem (1333) [serial 2823] used for:
  Associativity: (b.c).a = a.b.c [serial 2818]
 


Theorem (1335)                               [serial 2801] 
P [174] <<k = #PCA_Properties::Drug_Library_Size and INVW()>>
S [175] ->
Q [91] <<NDF(#PCA_Properties::Drug_Library_Size)>>
by Substitution of Assertion Labels
and theorem 1334:
Theorem (1334) [serial 2818] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2801]
 


Theorem (1336)                               [serial 2787] 
P [174] <<INVW() and (#PCA_Properties::Drug_Library_Size = k)>>
S [175] ->
Q [91] <<NDF(#PCA_Properties::Drug_Library_Size)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1335:
Theorem (1335) [serial 2801] used for:
    normalization of [serial 2787]
 


Theorem (1337)                               [serial 2826] 
P [175] <<(dc = DRUG_CODE) and DL() and NDF(k) and k = #PCA_Properties::Drug_Library_Size and 
No_Drug_Found@now>>
S [175] ->
Q [176] <<DL()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1338)                               [serial 2821] 
P [175] <<k = #PCA_Properties::Drug_Library_Size and ((dc = DRUG_CODE) and DL() and 
NDF(k)) and No_Drug_Found@now>>
S [175] ->
Q [176] <<DL()>>
by Associativity: (b.c).a = a.b.c
and theorem 1337:
Theorem (1337) [serial 2826] used for:
  Associativity: (b.c).a = a.b.c [serial 2821]
 


Theorem (1339)                               [serial 2815] 
P [175] <<k = #PCA_Properties::Drug_Library_Size and INVW() and No_Drug_Found@now>>
S [175] ->
Q [176] <<DL()>>
by Substitution of Assertion Labels
and theorem 1338:
Theorem (1338) [serial 2821] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2815]
 


Theorem (1340)                               [serial 2803] 
P [175] <<No_Drug_Found@now and (k = #PCA_Properties::Drug_Library_Size and INVW())>>
S [175] ->
Q [176] <<DL()>>
by Associativity: (b.c).a = a.b.c
and theorem 1339:
Theorem (1339) [serial 2815] used for:
  Associativity: (b.c).a = a.b.c [serial 2803]
 


Theorem (1341)                               [serial 2788] 
P [175] <<(INVW() and (#PCA_Properties::Drug_Library_Size = k)) and No_Drug_Found@now>>
S [175] ->
Q [176] <<DL()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1340:
Theorem (1340) [serial 2803] used for:
    normalization of [serial 2788]
 


Theorem (1342)                               [serial 2783] 
P [174] <<INVW() and (#PCA_Properties::Drug_Library_Size = k)>>
S [175] No_Drug_Found!
Q [176] <<DL()>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1336 1341:
Theorem (1336) [serial 2787] used for:
  applied port output <<pre>> -> <<M(No_Drug_Found)>> [serial 2783]
 
Theorem (1341) [serial 2788] used for:
  applied port output <<pre and No_Drug_Found@now>> -> <<post>> [serial 2783]
 


Theorem (1343)                               [serial 2784] 
P [176] <<DL()>>
S [167] ->
Q [178] <<DL()>>
by Identity (id):  P->P is tautology


Theorem (1344)                               [serial 2696] 
P [163] <<INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
S [167] if 
(dl[k].code = dc)~> 
  <<(dl[k].code = DRUG_CODE) and DL()>>
  The_Drug_Record!(dl[k])
  <<DL()>> 
[]
((#PCA_Properties::Drug_Library_Size-k) <= 0)~> 
  <<INVW() and (#PCA_Properties::Drug_Library_Size = k)>>
  No_Drug_Found!
  <<DL()>> 
fi
Q [178] <<DL()>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 1290 1300 1313 1314 1330 1342 1343:
Theorem (1290) [serial 2778] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2696]
 
Theorem (1300) [serial 2779] used for:
    <<P and B0>> -> <<P0>>  for [serial 2696]
 
Theorem (1313) [serial 2780] used for:
    <<P0>> S0 <<Q0>>  for [serial 2696]
 
Theorem (1314) [serial 2781] used for:
    <<Q0>> -> <<Q>>  for [serial 2696]
 
Theorem (1330) [serial 2782] used for:
    <<P and B1>> -> <<P1>>  for [serial 2696]
 
Theorem (1342) [serial 2783] used for:
    <<P1>> S1 <<Q1>>  for [serial 2696]
 
Theorem (1343) [serial 2784] used for:
    <<Q1>> -> <<Q>>  for [serial 2696]
 


Theorem (1345)                               [serial 2690] 
P [149] <<DL() and (k = 0)>>
S [149] <<DL() and (k = 0)>>
Get_Drug_Record?(dc)
<<(dc = DRUG_CODE) and DL() and (k = 0)>>
;
while ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0)) 
  invariant <<INVW()>> 
  bound (#PCA_Properties::Drug_Library_Size-k)
  {
  <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
  k := k+1
  <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
  }  
<<INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
;
if 
(dl[k].code = dc)~> 
  <<(dl[k].code = DRUG_CODE) and DL()>>
  The_Drug_Record!(dl[k])
  <<DL()>> 
[]
((#PCA_Properties::Drug_Library_Size-k) <= 0)~> 
  <<INVW() and (#PCA_Properties::Drug_Library_Size = k)>>
  No_Drug_Found!
  <<DL()>> 
fi
<<DL()>>
Q [178] <<DL()>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1240 1241 1245 1281 1344:
Theorem (1240) [serial 2692] used for:
  P -> P1 in sequential composition for [serial 2690]
 
Theorem (1241) [serial 2693] used for:
  Q2 -> Q in sequential composition for [serial 2690]
 
Theorem (1245) [serial 2694] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 2690]
 
Theorem (1281) [serial 2695] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 2690]
 
Theorem (1344) [serial 2696] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 2690]
 


Theorem (1346)                               [serial 2691] 
P [178] <<DL()>>
S [146] ->
Q [180] <<DL()>>
by Identity (id):  P->P is tautology


Theorem (1347)                               [serial 2688] 
P [145] <<DL()>>
S [146] declare 
  dc: PCA_Types::Drug_Code;
  k: integer:=0;
{
<<DL() and (k = 0)>>
Get_Drug_Record?(dc)
<<(dc = DRUG_CODE) and DL() and (k = 0)>>
;
while ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0)) 
  invariant <<INVW()>> 
  bound (#PCA_Properties::Drug_Library_Size-k)
  {
  <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
  k := k+1
  <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
  }  
<<INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
;
if 
(dl[k].code = dc)~> 
  <<(dl[k].code = DRUG_CODE) and DL()>>
  The_Drug_Record!(dl[k])
  <<DL()>> 
[]
((#PCA_Properties::Drug_Library_Size-k) <= 0)~> 
  <<INVW() and (#PCA_Properties::Drug_Library_Size = k)>>
  No_Drug_Found!
  <<DL()>> 
fi
<<DL()>>
} 
Q [180] <<DL()>>
by Introduction of Existential Quantification (bl.elq)
and theorems 1238 1345 1346:
Theorem (1238) [serial 2689] used for:
  <<P and x=e>> -> <<A>> in existential lattice quantification for [serial 2688]
 
Theorem (1345) [serial 2690] used for:
  <<A>> T <<B>> in existential lattice quantification for [serial 2688]
 
Theorem (1346) [serial 2691] used for:
  <<B>> -> <<Q>> in existential lattice quantification for [serial 2688]
 


Theorem (1348)                               [serial 1105] 
P [143] <<(dl = DRUG_LIBRARY) and DRUG_CODE@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [145] <<DL()>>
declare 
  dc: PCA_Types::Drug_Code;
  k: integer:=0;
{
<<DL() and (k = 0)>>
Get_Drug_Record?(dc)
<<(dc = DRUG_CODE) and DL() and (k = 0)>>
;
while ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0)) 
  invariant <<INVW()>> 
  bound (#PCA_Properties::Drug_Library_Size-k)
  {
  <<((#PCA_Properties::Drug_Library_Size-k) > 0) and INVW()>>
  k := k+1
  <<(0 < (#PCA_Properties::Drug_Library_Size-(k-1))) and INVW()>>
  }  
<<INVW() and not ((dc <> dl[k].code) and ((#PCA_Properties::Drug_Library_Size-k) > 0))>>
;
if 
(dl[k].code = dc)~> 
  <<(dl[k].code = DRUG_CODE) and DL()>>
  The_Drug_Record!(dl[k])
  <<DL()>> 
[]
((#PCA_Properties::Drug_Library_Size-k) <= 0)~> 
  <<INVW() and (#PCA_Properties::Drug_Library_Size = k)>>
  No_Drug_Found!
  <<DL()>> 
fi
<<DL()>>
} 
<<DL()>>
Q [135] <<dl = DRUG_LIBRARY>>
by Introduction of Existential Quantification (bl.aab)
and theorems 1233 1236 1347:
Theorem (1233) [serial 2686] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1105]
 
Theorem (1236) [serial 2687] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1105]
 
Theorem (1347) [serial 2688] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1105]
 


Theorem (1349)                               [serial 1106] 
P [182] <<(dl = DRUG_LIBRARY) and stop@now and not (exists u:time
  in tops,,now 
  that DRUG_LIBRARY@u ) and not (exists u:time
  in tops,,now 
  that DRUG_CODE@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [182] ->
Q [136] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1350)                               [serial 1098] 
P [125] << >>
S [126] ->
Q [125] <<drug_library_thread.imp proof obligations>>
by Initial Thread Obligations
and theorems 1217 1219 1220 1221 1226 1231 1348 1349:
Theorem (1217) [serial 1099] used for:
  <<M(wait)>> -> <<I>> from invariant I when complete state wait has Assertion <<M(wait)>> in its definition.
 
Theorem (1219) [serial 1100] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (1220) [serial 1101] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1221) [serial 1102] used for:
   <<M(start)>> -> <<M(wait)>> for dlt0:start-[ ]->wait{};
 
Theorem (1226) [serial 1103] used for:
   <<M(wait) and x>> A <<M(run)>> for dlt1:wait-[x]->run{A};
 
Theorem (1231) [serial 1104] used for:
   <<M(run) and x>> A <<M(run)>> for dlt2:run-[x]->run{A};
 
Theorem (1348) [serial 1105] used for:
   <<M(run) and x>> A <<M(run)>> for dlt3:run-[x]->run{A};
 
Theorem (1349) [serial 1106] used for:
   <<M(run) and x>> -> <<M(done)>> for dlt4:run-[x]->done{};
 


Theorem (1351)                               [serial 1108] 
P [332] <<true>>
S [329] ->
Q [329] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1352)                               [serial 1109] 
P [331] <<true>>
S [331] ->
Q [331] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1353)                               [serial 1110] 
P [331] <<true>>
S [335] ->
Q [332] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1354)                               [serial 2946] 
P [336] <<not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (exists t:BLESS_Types::Time
         in t <= now 
         that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or 
              Thread_Monitor_Failure)@t )@u ) and (exists t:BLESS_Types::Time
  in t <= now 
  that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or Thread_Monitor_Failure)@t )>>
S [336] ->
Q [320] <<exists t:BLESS_Types::Time
  in t <= now 
  that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or Thread_Monitor_Failure)@t >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1355)                               [serial 2945] 
P [336] <<(exists t:BLESS_Types::Time
  in t <= now 
  that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or Thread_Monitor_Failure)@t )@now and 
not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (exists t:BLESS_Types::Time
         in t <= now 
         that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or 
              Thread_Monitor_Failure)@t )@u )>>
S [336] ->
Q [320] <<(exists t:BLESS_Types::Time
  in t <= now 
  that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or Thread_Monitor_Failure)@t )>>
by Assume Present:  P = P@now = P^0 
and theorem 1354:
Theorem (1354) [serial 2946] used for:
  Assume Present:  P = P@now = P^0  [serial 2945]
 


Theorem (1356)                               [serial 2944] 
P [336] <<(exists t:BLESS_Types::Time
  in t <= now 
  that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or Thread_Monitor_Failure)@t )@now and 
not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (exists t:BLESS_Types::Time
         in t <= now 
         that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or 
              Thread_Monitor_Failure)@t )@u )>>
S [336] ->
Q [320] <<true iff (exists t:BLESS_Types::Time
  in t <= now 
  that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or Thread_Monitor_Failure)@t )>>
by Superfluisity of iff:  true iff a is a
and theorem 1355:
Theorem (1355) [serial 2945] used for:
  Superfluisity of iff:  true iff a is a [serial 2944]
 


Theorem (1357)                               [serial 2942] 
P [336] <<(exists t:BLESS_Types::Time
  in t <= now 
  that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or Thread_Monitor_Failure)@t )@now and 
not (exists u:time
  in tops,,now 
  that stop@u ) and not (exists u:time
  in tops,,now 
  that (exists t:BLESS_Types::Time
         in t <= now 
         that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or 
              Thread_Monitor_Failure)@t )@u ) and true>>
S [336] ->
Q [320] <<true iff (exists t:BLESS_Types::Time
  in t <= now 
  that (CPU_Failure or POST_Failure or RAM_Failure or ROM_failure or Thread_Monitor_Failure)@t )>>
by Law of And-Simplification:  P and true is P
and theorem 1356:
Theorem (1356) [serial 2944] used for:
  Law of And-Simplification:  P and true is P [serial 2942]
 


Theorem (1358)                               [serial 2939] 
P [336] <<(true) and (exists t:BLESS_Types::Time
  in t <= now 
  that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or Thread_Monitor_Failure)@t )@now and 
not (exists u:time
  in tops,,now 
  that (exists t:BLESS_Types::Time
         in t <= now 
         that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or 
              Thread_Monitor_Failure)@t )@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [336] ->
Q [320] <<true iff (exists t:BLESS_Types::Time
  in t <= now 
  that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or Thread_Monitor_Failure)@t )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1357:
Theorem (1357) [serial 2942] used for:
    normalization of [serial 2939]
 


Theorem (1359)                               [serial 2940] 
P [336] <<((true) and (exists t:BLESS_Types::Time
  in t <= now 
  that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or Thread_Monitor_Failure)@t )@now and 
not (exists u:time
  in tops,,now 
  that (exists t:BLESS_Types::Time
         in t <= now 
         that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or 
              Thread_Monitor_Failure)@t )@u ) and not (exists u:time
  in tops,,now 
  that stop@u )) and (Light iff true)@now>>
S [336] ->
Q [332] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1360)                               [serial 1111] 
P [336] <<(true) and (exists t:BLESS_Types::Time
  in t <= now 
  that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or Thread_Monitor_Failure)@t )@now and 
not (exists u:time
  in tops,,now 
  that (exists t:BLESS_Types::Time
         in t <= now 
         that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or 
              Thread_Monitor_Failure)@t )@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [336] Light!(true)
Q [332] <<true>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1358 1359:
Theorem (1358) [serial 2939] used for:
  applied port output of value <<pre>> -> <<M(Light)[Light|true]>> [serial 1111]
 
Theorem (1359) [serial 2940] used for:
  applied port output <<pre and (Light iff true)@now>> -> <<post>> [serial 1111]
 


Theorem (1361)                               [serial 1112] 
P [337] <<(true) and stop@now and not (exists u:time
  in tops,,now 
  that (exists t:BLESS_Types::Time
         in t <= now 
         that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or 
              Thread_Monitor_Failure)@t )@u ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [337] ->
Q [333] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1362)                               [serial 1107] 
P [329] << >>
S [329] ->
Q [329] <<failure_led.imp proof obligations>>
by Initial Thread Obligations
and theorems 1351 1352 1353 1360 1361:
Theorem (1351) [serial 1108] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (1352) [serial 1109] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1353) [serial 1110] used for:
   <<M(start)>> -> <<M(run)>> for led0:start-[ ]->run{};
 
Theorem (1360) [serial 1111] used for:
   <<M(run) and x>> A <<M(run)>> for led1:run-[x]->run{A};
 
Theorem (1361) [serial 1112] used for:
   <<M(run) and x>> -> <<M(done)>> for led2:run-[x]->done{};
 


Theorem (1363)                               [serial 1113] 
P [4] <<drug_to_patient = INFUSION_RATE>>
S [2] ->
Q [5] <<drug_to_patient = INFUSION_RATE>>
by Identity (id):  P->P is tautology


Theorem (1364)                               [serial 1114] 
P [4] <<BASAL_OVERINFUSION>>
S [2] ->
Q [5] <<BASAL_OVERINFUSION>>
by Identity (id):  P->P is tautology


Theorem (1365)                               [serial 1115] 
P [4] <<BOLUS_OVERINFUSION>>
S [2] ->
Q [5] <<BOLUS_OVERINFUSION>>
by Identity (id):  P->P is tautology


Theorem (1366)                               [serial 1116] 
P [4] <<SQUARE_OVERINFUSION>>
S [2] ->
Q [5] <<SQUARE_OVERINFUSION>>
by Identity (id):  P->P is tautology


Theorem (1367)                               [serial 1117] 
P [4] <<BASAL_UNDERINFUSION>>
S [2] ->
Q [5] <<BASAL_UNDERINFUSION>>
by Identity (id):  P->P is tautology


Theorem (1368)                               [serial 1118] 
P [4] <<BOLUS_UNDERINFUSION>>
S [2] ->
Q [5] <<BOLUS_UNDERINFUSION>>
by Identity (id):  P->P is tautology


Theorem (1369)                               [serial 1119] 
P [4] <<SQUARE_UNDERINFUSION>>
S [2] ->
Q [5] <<SQUARE_UNDERINFUSION>>
by Identity (id):  P->P is tautology


Theorem (1370)                               [serial 1120] 
P [4] <<BATTERY_VOLTAGE < #PCA_Properties::Defective_Battery_Voltage>>
S [2] ->
Q [5] <<BATTERY_VOLTAGE < #PCA_Properties::Defective_Battery_Voltage>>
by Identity (id):  P->P is tautology


Theorem (1371)                               [serial 1121] 
P [4] <<BATTERY_VOLTAGE < #PCA_Properties::Low_Battery_Voltage>>
S [2] ->
Q [5] <<BATTERY_VOLTAGE < #PCA_Properties::Low_Battery_Voltage>>
by Identity (id):  P->P is tautology


Theorem (1372)                               [serial 1122] 
P [4] <<rbt = REMAINING_BATTERY_TIME>>
S [2] ->
Q [5] <<rbt = REMAINING_BATTERY_TIME>>
by Identity (id):  P->P is tautology


Theorem (1373)                               [serial 1123] 
P [4] <<BATTERY_CURRENT > 0>>
S [2] ->
Q [5] <<BATTERY_CURRENT > 0>>
by Identity (id):  P->P is tautology


Theorem (1374)                               [serial 1124] 
P [4] <<bv = BATTERY_VOLTAGE>>
S [2] ->
Q [5] <<bv = BATTERY_VOLTAGE>>
by Identity (id):  P->P is tautology


Theorem (1375)                               [serial 1125] 
P [4] <<bc = BATTERY_CURRENT>>
S [2] ->
Q [5] <<bc = BATTERY_CURRENT>>
by Identity (id):  P->P is tautology


Theorem (1376)                               [serial 1126] 
P [4] <<psv = POWER_VOLTAGE>>
S [2] ->
Q [5] <<psv = POWER_VOLTAGE>>
by Identity (id):  P->P is tautology


Theorem (1377)                               [serial 1127] 
P [4] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1378)                               [serial 1128] 
P [4] <<PATIENT_REQUEST_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1379)                               [serial 1129] 
P [4] <<NDF(#PCA_Properties::Drug_Library_Size)>>
S [2] ->
Q [5] <<NDF(#PCA_Properties::Drug_Library_Size)>>
by Identity (id):  P->P is tautology


Theorem (1380)                               [serial 1130] 
P [4] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1381)                               [serial 1131] 
P [4] <<PATIENT_REQUEST_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1382)                               [serial 1132] 
P [4] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1383)                               [serial 1133] 
P [4] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1384)                               [serial 1134] 
P [4] <<PATIENT_REQUEST_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1385)                               [serial 1135] 
P [4] <<PATIENT_NEAR_MAX_DRUG_PER_HOUR()>>
S [2] ->
Q [5] <<PATIENT_NEAR_MAX_DRUG_PER_HOUR()>>
by Identity (id):  P->P is tautology


Theorem (1386)                               [serial 1136] 
P [4] <<PATIENT_OVER_MAX_DRUG_PER_HOUR()>>
S [2] ->
Q [5] <<PATIENT_OVER_MAX_DRUG_PER_HOUR()>>
by Identity (id):  P->P is tautology


Theorem (1387)                               [serial 1137] 
P [4] <<ifl = (PUMP_RATE())>>
S [2] ->
Q [5] <<ifl = (PUMP_RATE())>>
by Identity (id):  P->P is tautology


Theorem (1388)                               [serial 1138] 
P [4] <<mdh = MAX_DRUG_PER_HOUR>>
S [2] ->
Q [5] <<mdh = MAX_DRUG_PER_HOUR>>
by Identity (id):  P->P is tautology


Theorem (1389)                               [serial 1139] 
P [4] <<pbr = PATIENT_BOLUS_RATE>>
S [2] ->
Q [5] <<pbr = PATIENT_BOLUS_RATE>>
by Identity (id):  P->P is tautology


Theorem (1390)                               [serial 1140] 
P [4] <<sbr = SQUARE_BOLUS_RATE>>
S [2] ->
Q [5] <<sbr = SQUARE_BOLUS_RATE>>
by Identity (id):  P->P is tautology


Theorem (1391)                               [serial 1141] 
P [4] <<bar = BASAL_RATE>>
S [2] ->
Q [5] <<bar = BASAL_RATE>>
by Identity (id):  P->P is tautology


Theorem (1392)                               [serial 1142] 
P [4] <<vtb = VTBI>>
S [2] ->
Q [5] <<vtb = VTBI>>
by Identity (id):  P->P is tautology


Theorem (1393)                               [serial 1143] 
P [4] <<mtbb = MINIMUM_TIME_BETWEEN_BOLUS>>
S [2] ->
Q [5] <<mtbb = MINIMUM_TIME_BETWEEN_BOLUS>>
by Identity (id):  P->P is tautology


Theorem (1394)                               [serial 1144] 
P [4] <<NDF(#PCA_Properties::Drug_Library_Size)>>
S [2] ->
Q [5] <<NDF(#PCA_Properties::Drug_Library_Size)>>
by Identity (id):  P->P is tautology


Theorem (1395)                               [serial 1145] 
P [4] <<Rx_APPROVED()>>
S [2] ->
Q [5] <<Rx_APPROVED()>>
by Identity (id):  P->P is tautology


Theorem (1396)                               [serial 1146] 
P [4] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1397)                               [serial 1147] 
P [4] <<PATIENT_REQUEST_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1398)                               [serial 1148] 
P [4] <<Rx_APPROVED()>>
S [2] ->
Q [5] <<Rx_APPROVED()>>
by Identity (id):  P->P is tautology


Theorem (1399)                               [serial 1149] 
P [4] <<ssbr = SQUARE_BOLUS_RATE>>
S [2] ->
Q [5] <<ssbr = SQUARE_BOLUS_RATE>>
by Identity (id):  P->P is tautology


Theorem (1400)                               [serial 1150] 
P [4] <<spbr = PATIENT_BOLUS_RATE>>
S [2] ->
Q [5] <<spbr = PATIENT_BOLUS_RATE>>
by Identity (id):  P->P is tautology


Theorem (1401)                               [serial 1151] 
P [4] <<scbr = BASAL_RATE>>
S [2] ->
Q [5] <<scbr = BASAL_RATE>>
by Identity (id):  P->P is tautology


Theorem (1402)                               [serial 1152] 
P [4] <<sifr = (PUMP_RATE())>>
S [2] ->
Q [5] <<sifr = (PUMP_RATE())>>
by Identity (id):  P->P is tautology


Theorem (1403)                               [serial 1153] 
P [4] <<PATIENT_NEAR_MAX_DRUG_PER_HOUR()>>
S [2] ->
Q [5] <<PATIENT_NEAR_MAX_DRUG_PER_HOUR()>>
by Identity (id):  P->P is tautology


Theorem (1404)                               [serial 1154] 
P [4] <<PATIENT_OVER_MAX_DRUG_PER_HOUR()>>
S [2] ->
Q [5] <<PATIENT_OVER_MAX_DRUG_PER_HOUR()>>
by Identity (id):  P->P is tautology


Theorem (1405)                               [serial 1155] 
P [4] <<The_Fault_Log' = FAULT_LOG>>
S [2] ->
Q [5] <<The_Fault_Log' = FAULT_LOG>>
by Identity (id):  P->P is tautology


Theorem (1406)                               [serial 1156] 
P [4] <<tfl = FAULT_LOG>>
S [2] ->
Q [5] <<tfl = FAULT_LOG>>
by Identity (id):  P->P is tautology


Theorem (1407)                               [serial 1157] 
P [4] <<drg = INFUSION_RATE>>
S [2] ->
Q [5] <<drg = INFUSION_RATE>>
by Identity (id):  P->P is tautology


Theorem (1408)                               [serial 1158] 
P [4] <<id = INFUSION_RATE>>
S [2] ->
Q [5] <<id = INFUSION_RATE>>
by Identity (id):  P->P is tautology


Theorem (1409)                               [serial 1159] 
P [4] <<The_Fault_Log' = FAULT_LOG>>
S [2] ->
Q [5] <<The_Fault_Log' = FAULT_LOG>>
by Identity (id):  P->P is tautology


Theorem (1410)                               [serial 1160] 
P [4] <<tf = FAULT_LOG>>
S [2] ->
Q [5] <<tf = FAULT_LOG>>
by Identity (id):  P->P is tautology


Theorem (1411)                               [serial 1161] 
P [4] <<The_Event_Log' = EVENT_LOG>>
S [2] ->
Q [5] <<The_Event_Log' = EVENT_LOG>>
by Identity (id):  P->P is tautology


Theorem (1412)                               [serial 1162] 
P [4] <<te = EVENT_LOG>>
S [2] ->
Q [5] <<te = EVENT_LOG>>
by Identity (id):  P->P is tautology


Theorem (1413)                               [serial 1163] 
P [4] <<DRUG_LIBRARY' = Load_Drug_Library>>
S [2] ->
Q [5] <<DRUG_LIBRARY' = Load_Drug_Library>>
by Identity (id):  P->P is tautology


Theorem (1414)                               [serial 1164] 
P [4] <<INFUSION_RATE = 0>>
S [2] ->
Q [5] <<INFUSION_RATE = 0>>
by Identity (id):  P->P is tautology


Theorem (1415)                               [serial 1165] 
P [4] <<rat = INFUSION_RATE>>
S [2] ->
Q [5] <<rat = INFUSION_RATE>>
by Identity (id):  P->P is tautology


Theorem (1416)                               [serial 1166] 
P [4] <<ldl = DRUG_LIBRARY>>
S [2] ->
Q [5] <<ldl = DRUG_LIBRARY>>
by Identity (id):  P->P is tautology


Theorem (1417)                               [serial 1167] 
P [4] <<gdr = DRUG_CODE>>
S [2] ->
Q [5] <<gdr = DRUG_CODE>>
by Identity (id):  P->P is tautology


Theorem (1418)                               [serial 1168] 
P [4] <<exists k:integer
  in 0..(#PCA_Properties::Drug_Library_Size-1) 
  that DRUG_LIBRARY[k].code = DRUG_CODE and The_Drug_Record = DRUG_LIBRARY[k] >>
S [2] ->
Q [5] <<exists k:integer
  in 0..(#PCA_Properties::Drug_Library_Size-1) 
  that DRUG_LIBRARY[k].code = DRUG_CODE and The_Drug_Record = DRUG_LIBRARY[k] >>
by Identity (id):  P->P is tautology


Theorem (1419)                               [serial 1169] 
P [4] <<NDF(#PCA_Properties::Drug_Library_Size)>>
S [2] ->
Q [5] <<NDF(#PCA_Properties::Drug_Library_Size)>>
by Identity (id):  P->P is tautology


Theorem (1420)                               [serial 1170] 
P [4] <<exists t:BLESS_Types::Time
  in t <= now 
  that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or Thread_Monitor_Failure)@t >>
S [2] ->
Q [5] <<exists t:BLESS_Types::Time
  in t <= now 
  that (POST_Failure or RAM_Failure or ROM_failure or CPU_Failure or Thread_Monitor_Failure)@t >>
by Identity (id):  P->P is tautology


Theorem (1421)                               [serial 1171] 
P [4] <<tfl = FAULT_LOG>>
S [2] ->
Q [5] <<tfl = FAULT_LOG>>
by Identity (id):  P->P is tautology


Theorem (1422)                               [serial 1172] 
P [4] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1423)                               [serial 1173] 
P [4] <<PATIENT_REQUEST_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1424)                               [serial 1174] 
P [4] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_NOT_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1425)                               [serial 1175] 
P [4] <<PATIENT_REQUEST_TOO_SOON(now)>>
S [2] ->
Q [5] <<PATIENT_REQUEST_TOO_SOON(now)>>
by Identity (id):  P->P is tautology


Theorem (1426)                               [serial 1001] 
P     
S     
Q     
by Initial Thread Obligations
and theorems 372 449 514 565 1010 1216 1350 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425:
Theorem (372) [serial 1002] used for:
  Initial proof obligations for alarm_thread.imp
 
Theorem (449) [serial 1029] used for:
  Initial proof obligations for power_control.imp
 
Theorem (514) [serial 1034] used for:
  Initial proof obligations for event_logger_thread.imp
 
Theorem (565) [serial 1040] used for:
  Initial proof obligations for Patient_Bolus_Checker.imp
 
Theorem (1010) [serial 1049] used for:
  Initial proof obligations for Prescription_Checker.imp
 
Theorem (1216) [serial 1076] used for:
  Initial proof obligations for Rate_Controller.imp
 
Theorem (1350) [serial 1098] used for:
  Initial proof obligations for drug_library_thread.imp
 
Theorem (1362) [serial 1107] used for:
  Initial proof obligations for failure_led.imp
 
Theorem (1363) [serial 1113] used for:
  Composition of Subcomponents via Directional Connection PCA_Context::Context.imp.drug_to_patient:
 PCA_System::wrap_pca.Infused_Drug -> PCA_Context::Patient.Infused_Drug
 
Theorem (1364) [serial 1114] used for:
  Composition of Subcomponents via Directional Connection PCA_Alarm::alarm_process.imp.baso:
 PCA_Alarm::Flow_Rate_Checker.Basal_Overinfusion -> PCA_Alarm::alarm_thread.Basal_Overinfusion
 
Theorem (1365) [serial 1115] used for:
  Composition of Subcomponents via Directional Connection PCA_Alarm::alarm_process.imp.bolo:
 PCA_Alarm::Flow_Rate_Checker.Bolus_Overinfusion -> PCA_Alarm::alarm_thread.Bolus_Overinfusion
 
Theorem (1366) [serial 1116] used for:
  Composition of Subcomponents via Directional Connection PCA_Alarm::alarm_process.imp.sbo:
 PCA_Alarm::Flow_Rate_Checker.Square_Bolus_Overinfusion -> PCA_Alarm::alarm_thread.Square_Bolus_Overinfusion
 
Theorem (1367) [serial 1117] used for:
  Composition of Subcomponents via Directional Connection PCA_Alarm::alarm_process.imp.basu:
 PCA_Alarm::Flow_Rate_Checker.Basal_Underinfusion -> PCA_Alarm::alarm_thread.Basal_Underinfusion
 
Theorem (1368) [serial 1118] used for:
  Composition of Subcomponents via Directional Connection PCA_Alarm::alarm_process.imp.bolu:
 PCA_Alarm::Flow_Rate_Checker.Bolus_Underinfusion -> PCA_Alarm::alarm_thread.Bolus_Underinfusion
 
Theorem (1369) [serial 1119] used for:
  Composition of Subcomponents via Directional Connection PCA_Alarm::alarm_process.imp.sbu:
 PCA_Alarm::Flow_Rate_Checker.Square_Bolus_Underinfusion -> PCA_Alarm::alarm_thread.Square_Bolus_Underinfusion
 
Theorem (1370) [serial 1120] used for:
  Composition of Subcomponents via Directional Connection PCA_Power::power.imp.dba:
 PCA_Power::power_control.Defective_Battery -> PCA_Power::power.Defective_Btty
 
Theorem (1371) [serial 1121] used for:
  Composition of Subcomponents via Directional Connection PCA_Power::power.imp.lbw:
 PCA_Power::power_control.Low_Battery_Warning -> PCA_Power::power.Low_Battery_Warning
 
Theorem (1372) [serial 1122] used for:
  Composition of Subcomponents via Directional Connection PCA_Power::power.imp.rbt:
 PCA_Power::power_control.Remaining_Battery_Time -> PCA_Power::power.Remaining_Battery_Time
 
Theorem (1373) [serial 1123] used for:
  Composition of Subcomponents via Directional Connection PCA_Power::power.imp.ubp:
 PCA_Power::power_control.Using_Battery_Power -> PCA_Power::power.Using_Battery_Power
 
Theorem (1374) [serial 1124] used for:
  Composition of Subcomponents via Directional Connection PCA_Power::power.imp.bv:
 PCA_Power::battery.Battery_Voltage -> PCA_Power::power_control.Battery_Voltage
 
Theorem (1375) [serial 1125] used for:
  Composition of Subcomponents via Directional Connection PCA_Power::power.imp.bc:
 PCA_Power::battery.Battery_Current -> PCA_Power::power_control.Battery_Current
 
Theorem (1376) [serial 1126] used for:
  Composition of Subcomponents via Directional Connection PCA_Power::power.imp.psv:
 PCA_Power::power_supply.Power_Voltage -> PCA_Power::power_control.Power_Voltage
 
Theorem (1377) [serial 1127] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::operation.imp.prnts:
 PCA_Operation::operation_process.Patient_Request_Not_Too_Soon -> PCA_Control_Panel::control_panel.Patient_Request_Not_Too_Soon
 
Theorem (1378) [serial 1128] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::operation.imp.prts:
 PCA_Operation::operation_process.Patient_Request_Too_Soon -> PCA_Control_Panel::control_panel.Patient_Request_Too_Soon
 
Theorem (1379) [serial 1129] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::operation_process.imp.ndf:
 PCA_Drug_Library::drug_library_thread.No_Drug_Found -> PCA_Operation::Operation_Thread_Group.No_Drug_Found
 
Theorem (1380) [serial 1130] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::operation_process.imp.prnts:
 PCA_Operation::Operation_Thread_Group.Patient_Request_Not_Too_Soon -> PCA_Operation::operation_process.Patient_Request_Not_Too_Soon
 
Theorem (1381) [serial 1131] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::operation_process.imp.prts:
 PCA_Operation::Operation_Thread_Group.Patient_Request_Too_Soon -> PCA_Operation::operation_process.Patient_Request_Too_Soon
 
Theorem (1382) [serial 1132] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.rcprnts:
 PCA_Operation_Threads::Patient_Bolus_Checker.Patient_Request_Not_Too_Soon -> PCA_Operation_Threads::Rate_Controller.Patient_Request_Not_Too_Soon
 
Theorem (1383) [serial 1133] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.prnts:
 PCA_Operation_Threads::Patient_Bolus_Checker.Patient_Request_Not_Too_Soon -> PCA_Operation::Operation_Thread_Group.Patient_Request_Not_Too_Soon
 
Theorem (1384) [serial 1134] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.prts:
 PCA_Operation_Threads::Patient_Bolus_Checker.Patient_Request_Too_Soon -> PCA_Operation::Operation_Thread_Group.Patient_Request_Too_Soon
 
Theorem (1385) [serial 1135] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.pnm:
 PCA_Operation_Threads::Max_Drug_Per_Hour_Watcher.Near_Max_Drug_Per_Hour -> PCA_Operation_Threads::Rate_Controller.Near_Max_Drug_Per_Hour
 
Theorem (1386) [serial 1136] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.pom:
 PCA_Operation_Threads::Max_Drug_Per_Hour_Watcher.Over_Max_Drug_Per_Hour -> PCA_Operation_Threads::Rate_Controller.Over_Max_Drug_Per_Hour
 
Theorem (1387) [serial 1137] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.ifl:
 PCA_Operation_Threads::Rate_Controller.Infusion_Flow_Rate -> PCA_Operation_Threads::Max_Drug_Per_Hour_Watcher.Infusion_Flow_Rate
 
Theorem (1388) [serial 1138] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.mdh:
 PCA_Operation_Threads::Prescription_Checker.Max_Drug_Per_Hour -> PCA_Operation_Threads::Max_Drug_Per_Hour_Watcher.Max_Drug_Per_Hour
 
Theorem (1389) [serial 1139] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.pbr:
 PCA_Operation_Threads::Prescription_Checker.Patient_Bolus_Rate -> PCA_Operation_Threads::Rate_Controller.Patient_Bolus_Rate
 
Theorem (1390) [serial 1140] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.sbr:
 PCA_Operation_Threads::Prescription_Checker.Square_Bolus_Rate -> PCA_Operation_Threads::Rate_Controller.Square_Bolus_Rate
 
Theorem (1391) [serial 1141] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.bar:
 PCA_Operation_Threads::Prescription_Checker.Basal_Rate -> PCA_Operation_Threads::Rate_Controller.Basal_Rate
 
Theorem (1392) [serial 1142] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.vtb:
 PCA_Operation_Threads::Prescription_Checker.VTBI -> PCA_Operation_Threads::Rate_Controller.VTBI
 
Theorem (1393) [serial 1143] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.mtbb:
 PCA_Operation_Threads::Prescription_Checker.Minimum_Time_Between_Bolus -> PCA_Operation_Threads::Patient_Bolus_Checker.Minimum_Time_Between_Bolus
 
Theorem (1394) [serial 1144] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.pcnd:
 PCA_Operation::Operation_Thread_Group.No_Drug_Found -> PCA_Operation_Threads::Prescription_Checker.Drug_Not_In_Library
 
Theorem (1395) [serial 1145] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.rxok:
 PCA_Operation_Threads::Prescription_Checker.Rx_Okay -> PCA_Boss::Boss_Thread.Rx_Okay
 
Theorem (1396) [serial 1146] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.icprnts:
 PCA_Operation_Threads::Patient_Bolus_Checker.Patient_Request_Not_Too_Soon -> PCA_Operation_Threads::ICE_Thread.Patient_Request_Not_Too_Soon
 
Theorem (1397) [serial 1147] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.icprts:
 PCA_Operation_Threads::Patient_Bolus_Checker.Patient_Request_Too_Soon -> PCA_Operation_Threads::ICE_Thread.Patient_Request_Too_Soon
 
Theorem (1398) [serial 1148] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.srxok:
 PCA_Operation_Threads::Prescription_Checker.Rx_Okay -> PCA_Operation_Threads::ICE_Thread.Rx_Okay
 
Theorem (1399) [serial 1149] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.ssbr:
 PCA_Operation_Threads::Prescription_Checker.Square_Bolus_Rate -> PCA_Operation_Threads::ICE_Thread.Square_Bolus_Rate
 
Theorem (1400) [serial 1150] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.spbr:
 PCA_Operation_Threads::Prescription_Checker.Patient_Bolus_Rate -> PCA_Operation_Threads::ICE_Thread.Patient_Bolus_Rate
 
Theorem (1401) [serial 1151] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.scbr:
 PCA_Operation_Threads::Prescription_Checker.Basal_Rate -> PCA_Operation_Threads::ICE_Thread.Basal_Rate
 
Theorem (1402) [serial 1152] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.sifr:
 PCA_Operation_Threads::Rate_Controller.Infusion_Flow_Rate -> PCA_Operation_Threads::ICE_Thread.Infusion_Flow_Rate
 
Theorem (1403) [serial 1153] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.snmax:
 PCA_Operation_Threads::Max_Drug_Per_Hour_Watcher.Near_Max_Drug_Per_Hour -> PCA_Operation_Threads::ICE_Thread.Near_Max_Drug_Per_Hour
 
Theorem (1404) [serial 1154] used for:
  Composition of Subcomponents via Directional Connection PCA_Operation::Operation_Thread_Group.imp.somax:
 PCA_Operation_Threads::Max_Drug_Per_Hour_Watcher.Over_Max_Drug_Per_Hour -> PCA_Operation_Threads::ICE_Thread.Over_Max_Drug_Per_Hour
 
Theorem (1405) [serial 1155] used for:
  Composition of Subcomponents via Directional Connection PCA_Pump::pca.imp.gfl:
 PCA_Pump::pca.in_get_fault_log -> PCA_Safety::safety.Get_Fault_Log
 
Theorem (1406) [serial 1156] used for:
  Composition of Subcomponents via Directional Connection PCA_Pump::pca.imp.tfl:
 PCA_Safety::safety.The_Fault_Log -> PCA_Pump::pca.out_the_fault_log
 
Theorem (1407) [serial 1157] used for:
  Composition of Subcomponents via Directional Connection PCA_Pump::pca.imp.drg:
 PCA_Fluid::fluid.Drug_Outlet -> PCA_Pump::pca.out_infused_drug
 
Theorem (1408) [serial 1158] used for:
  Composition of Subcomponents via Directional Connection PCA_System::wrap_pca.imp.id:
 PCA_Pump::pca.out_infused_drug -> PCA_System::wrap_pca.Infused_Drug
 
Theorem (1409) [serial 1159] used for:
  Composition of Subcomponents via Directional Connection PCA_System::wrap_pca.imp.gf:
 PCA_System::maintenance.Get_Fault_Log -> PCA_Pump::pca.in_get_fault_log
 
Theorem (1410) [serial 1160] used for:
  Composition of Subcomponents via Directional Connection PCA_System::wrap_pca.imp.tf:
 PCA_Pump::pca.out_the_fault_log -> PCA_System::maintenance.The_Fault_Log
 
Theorem (1411) [serial 1161] used for:
  Composition of Subcomponents via Directional Connection PCA_System::wrap_pca.imp.ge:
 PCA_System::maintenance.Get_Event_Log -> PCA_Pump::pca.in_get_event_log
 
Theorem (1412) [serial 1162] used for:
  Composition of Subcomponents via Directional Connection PCA_System::wrap_pca.imp.te:
 PCA_Pump::pca.out_the_event_log -> PCA_System::maintenance.The_Event_Log
 
Theorem (1413) [serial 1163] used for:
  Composition of Subcomponents via Directional Connection PCA_System::wrap_pca.imp.dl:
 PCA_System::maintenance.Load_Drug_Library -> PCA_Pump::pca.in_load_drug_library
 
Theorem (1414) [serial 1164] used for:
  Composition of Subcomponents via Directional Connection PCA_Fluid::fluid.imp.hlt:
 PCA_Fluid::fluid.Halt -> PCA_Mechanical::pump.Halt
 
Theorem (1415) [serial 1165] used for:
  Composition of Subcomponents via Directional Connection PCA_Fluid::fluid.imp.rat:
 PCA_Fluid::fluid.Rate_To_Pump -> PCA_Mechanical::pump.Rate
 
Theorem (1416) [serial 1166] used for:
  Composition of Subcomponents via Directional Connection PCA_Drug_Library::drug_library_process.imp.ldl:
 PCA_Drug_Library::drug_library_process.Load_Drug_Library -> PCA_Drug_Library::drug_library_thread.Load_Drug_Library
 
Theorem (1417) [serial 1167] used for:
  Composition of Subcomponents via Directional Connection PCA_Drug_Library::drug_library_process.imp.gdr:
 PCA_Drug_Library::drug_library_process.Get_Drug_Record -> PCA_Drug_Library::drug_library_thread.Get_Drug_Record
 
Theorem (1418) [serial 1168] used for:
  Composition of Subcomponents via Directional Connection PCA_Drug_Library::drug_library_process.imp.dr:
 PCA_Drug_Library::drug_library_thread.The_Drug_Record -> PCA_Drug_Library::drug_library_process.The_Drug_Record
 
Theorem (1419) [serial 1169] used for:
  Composition of Subcomponents via Directional Connection PCA_Drug_Library::drug_library_process.imp.ndf:
 PCA_Drug_Library::drug_library_thread.No_Drug_Found -> PCA_Drug_Library::drug_library_process.No_Drug_Found
 
Theorem (1420) [serial 1170] used for:
  Composition of Subcomponents via Directional Connection PCA_Safety::safety.imp.hdf:
 PCA_Safety::error_detector.HW_Detected_Failure -> PCA_Safety::failure_led.Illuminate
 
Theorem (1421) [serial 1171] used for:
  Composition of Subcomponents via Directional Connection PCA_Safety::safety.imp.tfl:
 PCA_Safety::fault_logger.The_Log -> PCA_Safety::safety.The_Fault_Log
 
Theorem (1422) [serial 1172] used for:
  Composition of Subcomponents via Directional Connection PCA_Control_Panel::ui_process.imp.prnts:
 PCA_Control_Panel::ui_process.Patient_Request_Not_Too_Soon -> PCA_Control_Panel::ui_thread.Patient_Request_Not_Too_Soon
 
Theorem (1423) [serial 1173] used for:
  Composition of Subcomponents via Directional Connection PCA_Control_Panel::ui_process.imp.prts:
 PCA_Control_Panel::ui_process.Patient_Request_Too_Soon -> PCA_Control_Panel::ui_thread.Patient_Request_Too_Soon
 
Theorem (1424) [serial 1174] used for:
  Composition of Subcomponents via Directional Connection PCA_Control_Panel::control_panel.imp.prnts:
 PCA_Control_Panel::control_panel.Patient_Request_Not_Too_Soon -> PCA_Control_Panel::ui_process.Patient_Request_Not_Too_Soon
 
Theorem (1425) [serial 1175] used for:
  Composition of Subcomponents via Directional Connection PCA_Control_Panel::control_panel.imp.prts:
 PCA_Control_Panel::control_panel.Patient_Request_Too_Soon -> PCA_Control_Panel::ui_process.Patient_Request_Too_Soon
 


proof duration:  29.5 seconds 
